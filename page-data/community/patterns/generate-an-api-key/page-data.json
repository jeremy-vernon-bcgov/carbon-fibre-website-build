{"componentChunkName":"component---src-pages-community-patterns-generate-an-api-key-index-mdx","path":"/community/patterns/generate-an-api-key/","result":{"pageContext":{"frontmatter":{"title":"Generate an API key","description":"When designing for the generation of API keys, ensure users know what the key is created for, the security implications, and the end destination of the key."},"relativePagePath":"/community/patterns/generate-an-api-key/index.mdx","titleType":"prepend","MdxNode":{"id":"59940ba1-1268-5f1e-aa6d-d7113d560efd","children":[],"parent":"2b975bb3-097e-5e9f-9918-36c9d78f711e","internal":{"content":"---\ntitle: Generate an API key\ndescription:\n  When designing for the generation of API keys, ensure users know what the key\n  is created for, the security implications, and the end destination of the key.\n---\n\n#### Maintainers:\n\n[Vikki Paterson](https://github.com/vikkipaterson),\n[Chloe Poulter](https://github.com/chloepoulterdesign)\n\n<PageDescription>\n\nWhen designing for the generation of API keys, ensure users know what the key is\ncreated for, the security implications, and the end destination of the key.\n\n</PageDescription>\n\n<InlineNotification>\n\nThe reusable code component can be found in\n[this React storybook](https://pages.github.ibm.com/cloud-integration-design/ide-components/?path=/story/production-ready-ide-api-key-generation-component--with-core-configuration).\n\n</InlineNotification>\n\n<AnchorLinks>\n  <AnchorLink>General access keys</AnchorLink>\n  <AnchorLink>Restricted access keys</AnchorLink>\n  <AnchorLink>Show the API key in context (optional)</AnchorLink>\n  <AnchorLink>API key management page (optional)</AnchorLink>\n  <AnchorLink>Edit an API key (optional)</AnchorLink>\n</AnchorLinks>{' '}\n\n![Example of an API key being generated](images/1.png)\n\n<Caption>\n  An example of API key generation with restricted access options\n</Caption>\n\n## General access keys\n\n### Instant generation\n\nUsers click a primary **Generate** button. Consider displaying a\n**Generating...** state if the API key takes time to generate.\n\n<Row>\n<Column colLg={6}>\n\n![Example of a generate button](images/2.png)\n\n</Column>\n</Row>\n\nOnce the API key is generated it displays in a modal. Include a **Copy** button.\n\n<Row>\n<Column colLg={6}>\n\n![Example of a successfully created API key](images/3.png)\n\n</Column>\n</Row>\n\n#### Optionally:\n\n- Display two parts to the API key where required\n- Display an encoded version of the key\n- Provide information text about the API key\n- Allow users to toggle the visibility of the key\n- Provide a secondary link to download the key\n\n<Row>\n<Column colLg={6}>\n\n![Example of a hidden API key](images/4.png)\n\n<Caption>Example of a hidden API key</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={6}>\n\n![Example of a revealed API key](images/5.png)\n\n<Caption>Example of a revealed API key</Caption>\n\n</Column>\n</Row>\n\n### Name the API key\n\nYou can ask a user to provide a descriptive name before the key is generated.\nThis is particularly useful in instances where a user may have keys for several\napplications stored in the same location.\n\n<Row>\n<Column colLg={6}>\n\n![Example of an API key with a custom name](images/6.png)\n\n</Column>\n</Row>\n\nWhen the user names the API key or provides other information before clicking\ngenerate, the API key is presented **after** the user clicks generate, in a\n**new** modal view.\n\n### Retrieval warnings\n\nSome API keys cannot be retrieved after creation. Include an appropriate warning\nto the user for the retrieval use case. All of these use cases can be combined\nwith a **download** link (for example as a .txt or JSON file).\n\n#### API key can be retrieved in the product\n\nIf a user can retrieve the API key at a later date, within the product (i.e. an\nAPI key management page), inform the user that this is the case.  \nConsider including a link to the retrieval location.\n\n<Row>\n<Column colLg={6}>\n\n![If a key is recoverable in the UI, inform the user and provide a link.](images/Recover1.png)\n\n<Caption>\n  If a key is recoverable in the UI, inform the user and provide a link.\n</Caption>\n\n</Column>\n</Row>\n\n#### API key can be retrieved via another platform (i.e. OpenShift, IBM Cloud)\n\nIf a user can retrieve the API key at a later date, by accessing a separate\ninterface, such as OpenShift, you should inform them here and provide a link to\ninstructions for doing so.\n\n<Row>\n<Column colLg={6}>\n\n![If a key is recoverable in another UI or platform, inform the user and link to instructions for recovering the key.](images/Recover2.png)\n\n<Caption>\n  If a key is recoverable in another UI or platform, inform the user and link to\n  instructions for recovering the key.\n</Caption>\n\n</Column>\n</Row>\n\n#### API key cannot be retrieved at a later date\n\nIf a user cannot retrieve the API key in the future, warn them in the modal. Provide\nthe user the option to download the key as JSON.\n\n<Row>\n<Column colLg={6}>\n\n![If a key is non-recoverable, inform the user and provide a download option.](images/Recover3.png)\n\n<Caption>\n  If a key is non-recoverable, inform the user and provide a download option.\n</Caption>\n\n</Column>\n</Row>\n\n## Restricted access keys\n\nA user may want to limit the access an application or service is granted.\nRestricted access allows a user to assign specific access control and\npermissions before the API key is generated.\n\nRestricted access options vary widely and are not specified in this pattern.\nOptions should be provided in the modal **before** the user clicks generate. To\navoid scrolling in the modal, a multi-step modal can be used, with a progress\nindicator.\n\n<Row>\n<Column colLg={6}>\n\n![Many components can be implemented in the modal content space.](images/9.png)\n\n<Caption>\n  Many components can be implemented in the modal content space.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={6}>\n\n![Example of a restricted API key generation](images/8.png)\n\n<Caption>\n  Some examples of restricted API key generation. Where the user names the API\n  key, this should be the first available field.\n</Caption>\n\n</Column>\n</Row>\n\n### Ordering restricted access options\n\nTry to present restricted access options in the following order. Not all options\nwill be required in each case.\n\n1. (Optional) **Name the API key or application.** Allow the user to specify a\n   recognisable name for the API key, or the application, so that they can\n   recognise it later.\n2. (Optional) **Choose the actions the API key permits.** Common options are\n   \"Read and write\", \"Write only\" and \"Read only\".\n3. (Optional) **Allow the user to specify which resources the key can access.**\n   This may be by naming or selecting resources.\n\n## Show the API key in context (optional)\n\nIn some use cases, it can be helpful to also show the user the API key in\ncontext, after the modal is closed. In this situation, the key should be\ndisplayed near the \"Generate\" button.\n\nThe user may also need the option to generate a new API key.\n\n<Row>\n<Column colLg={6}>\n\n![One way to display an API key in context, after the modal is closed.](images/10.png)\n\n<Caption>\n  One way to display an API key in context, after the modal is closed.\n</Caption>\n\n</Column>\n</Row>\n\n## API key management page (optional)\n\nSome products and platforms may include an API key management page. This is a\ncentral location where API keys can be created, reviewed, or edited.\n\nThe location of the API key management page will vary according to the product\ninformation hierarchy. Consider where users would expect to administrate access\nto the product, for example within a \"settings\", \"access\" or similar navigation\nitem.\n\nIn the management page, keys are typically listed in a data table, using a\nrecognisable name or the name of the application which the user specified.\n\n<Row>\n<Column colLg={8}>\n\n![An example of an API key management page](images/ManagementPage.png)\n\n<Caption>An example of an API key management page</Caption>\n\n</Column>\n</Row>\n\n## Edit an API key (optional)\n\nAfter an API key has been generated, some products may enable a user to edit the\noptions associated with it. This may include the name of the connected\napplication, the name of the API key, and restricted access options.  \nEditing an API key does not allow the user to change the key contents.\n\nThe edit action may be accessible in the context of creation, or from an API key\nmanagement page.  \nThe change to the API key is then \"saved\".\n\n<Row>\n<Column colLg={6}>\n\n![An example of Edit an API key workflow, which ends with a \"save\" action.](images/Edit.png)\n\n<Caption>\n  An example of Edit an API key workflow, which ends with a \"save\" action.\n</Caption>\n\n</Column>\n</Row>\n","type":"Mdx","contentDigest":"c9d45a1eafd53e5436ae07b0c84c02c3","counter":4571,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Generate an API key","description":"When designing for the generation of API keys, ensure users know what the key is created for, the security implications, and the end destination of the key."},"exports":{},"rawBody":"---\ntitle: Generate an API key\ndescription:\n  When designing for the generation of API keys, ensure users know what the key\n  is created for, the security implications, and the end destination of the key.\n---\n\n#### Maintainers:\n\n[Vikki Paterson](https://github.com/vikkipaterson),\n[Chloe Poulter](https://github.com/chloepoulterdesign)\n\n<PageDescription>\n\nWhen designing for the generation of API keys, ensure users know what the key is\ncreated for, the security implications, and the end destination of the key.\n\n</PageDescription>\n\n<InlineNotification>\n\nThe reusable code component can be found in\n[this React storybook](https://pages.github.ibm.com/cloud-integration-design/ide-components/?path=/story/production-ready-ide-api-key-generation-component--with-core-configuration).\n\n</InlineNotification>\n\n<AnchorLinks>\n  <AnchorLink>General access keys</AnchorLink>\n  <AnchorLink>Restricted access keys</AnchorLink>\n  <AnchorLink>Show the API key in context (optional)</AnchorLink>\n  <AnchorLink>API key management page (optional)</AnchorLink>\n  <AnchorLink>Edit an API key (optional)</AnchorLink>\n</AnchorLinks>{' '}\n\n![Example of an API key being generated](images/1.png)\n\n<Caption>\n  An example of API key generation with restricted access options\n</Caption>\n\n## General access keys\n\n### Instant generation\n\nUsers click a primary **Generate** button. Consider displaying a\n**Generating...** state if the API key takes time to generate.\n\n<Row>\n<Column colLg={6}>\n\n![Example of a generate button](images/2.png)\n\n</Column>\n</Row>\n\nOnce the API key is generated it displays in a modal. Include a **Copy** button.\n\n<Row>\n<Column colLg={6}>\n\n![Example of a successfully created API key](images/3.png)\n\n</Column>\n</Row>\n\n#### Optionally:\n\n- Display two parts to the API key where required\n- Display an encoded version of the key\n- Provide information text about the API key\n- Allow users to toggle the visibility of the key\n- Provide a secondary link to download the key\n\n<Row>\n<Column colLg={6}>\n\n![Example of a hidden API key](images/4.png)\n\n<Caption>Example of a hidden API key</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={6}>\n\n![Example of a revealed API key](images/5.png)\n\n<Caption>Example of a revealed API key</Caption>\n\n</Column>\n</Row>\n\n### Name the API key\n\nYou can ask a user to provide a descriptive name before the key is generated.\nThis is particularly useful in instances where a user may have keys for several\napplications stored in the same location.\n\n<Row>\n<Column colLg={6}>\n\n![Example of an API key with a custom name](images/6.png)\n\n</Column>\n</Row>\n\nWhen the user names the API key or provides other information before clicking\ngenerate, the API key is presented **after** the user clicks generate, in a\n**new** modal view.\n\n### Retrieval warnings\n\nSome API keys cannot be retrieved after creation. Include an appropriate warning\nto the user for the retrieval use case. All of these use cases can be combined\nwith a **download** link (for example as a .txt or JSON file).\n\n#### API key can be retrieved in the product\n\nIf a user can retrieve the API key at a later date, within the product (i.e. an\nAPI key management page), inform the user that this is the case.  \nConsider including a link to the retrieval location.\n\n<Row>\n<Column colLg={6}>\n\n![If a key is recoverable in the UI, inform the user and provide a link.](images/Recover1.png)\n\n<Caption>\n  If a key is recoverable in the UI, inform the user and provide a link.\n</Caption>\n\n</Column>\n</Row>\n\n#### API key can be retrieved via another platform (i.e. OpenShift, IBM Cloud)\n\nIf a user can retrieve the API key at a later date, by accessing a separate\ninterface, such as OpenShift, you should inform them here and provide a link to\ninstructions for doing so.\n\n<Row>\n<Column colLg={6}>\n\n![If a key is recoverable in another UI or platform, inform the user and link to instructions for recovering the key.](images/Recover2.png)\n\n<Caption>\n  If a key is recoverable in another UI or platform, inform the user and link to\n  instructions for recovering the key.\n</Caption>\n\n</Column>\n</Row>\n\n#### API key cannot be retrieved at a later date\n\nIf a user cannot retrieve the API key in the future, warn them in the modal. Provide\nthe user the option to download the key as JSON.\n\n<Row>\n<Column colLg={6}>\n\n![If a key is non-recoverable, inform the user and provide a download option.](images/Recover3.png)\n\n<Caption>\n  If a key is non-recoverable, inform the user and provide a download option.\n</Caption>\n\n</Column>\n</Row>\n\n## Restricted access keys\n\nA user may want to limit the access an application or service is granted.\nRestricted access allows a user to assign specific access control and\npermissions before the API key is generated.\n\nRestricted access options vary widely and are not specified in this pattern.\nOptions should be provided in the modal **before** the user clicks generate. To\navoid scrolling in the modal, a multi-step modal can be used, with a progress\nindicator.\n\n<Row>\n<Column colLg={6}>\n\n![Many components can be implemented in the modal content space.](images/9.png)\n\n<Caption>\n  Many components can be implemented in the modal content space.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={6}>\n\n![Example of a restricted API key generation](images/8.png)\n\n<Caption>\n  Some examples of restricted API key generation. Where the user names the API\n  key, this should be the first available field.\n</Caption>\n\n</Column>\n</Row>\n\n### Ordering restricted access options\n\nTry to present restricted access options in the following order. Not all options\nwill be required in each case.\n\n1. (Optional) **Name the API key or application.** Allow the user to specify a\n   recognisable name for the API key, or the application, so that they can\n   recognise it later.\n2. (Optional) **Choose the actions the API key permits.** Common options are\n   \"Read and write\", \"Write only\" and \"Read only\".\n3. (Optional) **Allow the user to specify which resources the key can access.**\n   This may be by naming or selecting resources.\n\n## Show the API key in context (optional)\n\nIn some use cases, it can be helpful to also show the user the API key in\ncontext, after the modal is closed. In this situation, the key should be\ndisplayed near the \"Generate\" button.\n\nThe user may also need the option to generate a new API key.\n\n<Row>\n<Column colLg={6}>\n\n![One way to display an API key in context, after the modal is closed.](images/10.png)\n\n<Caption>\n  One way to display an API key in context, after the modal is closed.\n</Caption>\n\n</Column>\n</Row>\n\n## API key management page (optional)\n\nSome products and platforms may include an API key management page. This is a\ncentral location where API keys can be created, reviewed, or edited.\n\nThe location of the API key management page will vary according to the product\ninformation hierarchy. Consider where users would expect to administrate access\nto the product, for example within a \"settings\", \"access\" or similar navigation\nitem.\n\nIn the management page, keys are typically listed in a data table, using a\nrecognisable name or the name of the application which the user specified.\n\n<Row>\n<Column colLg={8}>\n\n![An example of an API key management page](images/ManagementPage.png)\n\n<Caption>An example of an API key management page</Caption>\n\n</Column>\n</Row>\n\n## Edit an API key (optional)\n\nAfter an API key has been generated, some products may enable a user to edit the\noptions associated with it. This may include the name of the connected\napplication, the name of the API key, and restricted access options.  \nEditing an API key does not allow the user to change the key contents.\n\nThe edit action may be accessible in the context of creation, or from an API key\nmanagement page.  \nThe change to the API key is then \"saved\".\n\n<Row>\n<Column colLg={6}>\n\n![An example of Edit an API key workflow, which ends with a \"save\" action.](images/Edit.png)\n\n<Caption>\n  An example of Edit an API key workflow, which ends with a \"save\" action.\n</Caption>\n\n</Column>\n</Row>\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/community/patterns/generate-an-api-key/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}