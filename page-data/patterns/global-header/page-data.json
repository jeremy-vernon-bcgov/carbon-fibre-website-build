{"componentChunkName":"component---src-pages-patterns-global-header-index-mdx","path":"/patterns/global-header/","result":{"pageContext":{"frontmatter":{"title":"Global header","description":"Users rely on the global header to navigate and orient themselves in your UI. This pattern outlines some of the qualities that make a global header consistent, familiar, and usable."},"relativePagePath":"/patterns/global-header/index.mdx","titleType":"prepend","MdxNode":{"id":"7ffa6f46-47b5-5c33-9642-417560b88454","children":[],"parent":"2935f680-b572-5bef-b6b9-9a18e1be69ad","internal":{"content":"---\ntitle: Global header\ndescription:\n  Users rely on the global header to navigate and orient themselves in your UI.\n  This pattern outlines some of the qualities that make a global header\n  consistent, familiar, and usable.\n---\n\n<PageDescription>\n\nUsers rely on the global header to navigate and orient themselves in your UI.\nThis pattern outlines some of the qualities that make a global header\nconsistent, familiar, and usable.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Overview</AnchorLink>\n  <AnchorLink>Configurations</AnchorLink>\n  <AnchorLink>Navigation</AnchorLink>\n  <AnchorLink>Best practices</AnchorLink>\n  <AnchorLink>Accessibility</AnchorLink>\n  <AnchorLink>Related</AnchorLink>\n  <AnchorLink>References</AnchorLink>\n  <AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nThe global header is essential to a product’s UI. It is a consistently available\nuser interface element that contains functionality for the current product as\nwell as for the entire system. Like the macOS Menu Bar and the Windows Start\nBar, the global header provides consistent locations to invoke your product’s\nlocal navigation as well as pervasive access to system-wide functions like\nsystem settings, notifications, and navigating between products.\n\nThis pattern covers the foundation of using UI Shell components for within and\nbetween product navigation, and introduces techniques for achieving consistency\nin products.\n\n### Anatomy of a global header\n\n![Example diagram of the global header.](images/header-anatomy.png)\n\n1. **Hamburger:** The hamburger icon is used to open product navigation such as\n   the [left panel](/components/UI-shell-left-panel/usage/).\n1. **Header name:** For IBM products, the header name is always preceded by\n   “IBM”. This should always and only link the user to the domain’s home page.\n1. **Header links:** Links in the header are supported as product navigation, if\n   required. These links should not open a new tab or link to another domain.\n   These links drop down to the side menu in narrow screen widths.\n1. **Sub-menu:** Sub-menus are supported as product navigation, if required.\n   Dropdowns open on click and are closed by either selecting an item in the\n   menu, clicking outside the menu area, or clicking on the menu label. When\n   open, the chevron should point up. Dropdown menu labels serve only to open\n   the dropdown; they cannot be a link to another page in the product.\n1. **Utilities:** The header provides a home for global system-level utilities\n   from anywhere in the site. Utility icons should not be used to directly\n   navigate to an area. Instead, they should open a panel that provides access\n   to other places in the product.\n1. **Switcher:** The switcher provides a way for the user to navigate easily\n   between products and systems. Recommended uses for this component include\n   recently used apps, frequently used apps, or all apps attached to the user’s\n   account. If the list is a manageable size, include all apps or products\n   available on the system.\n\n### Header and panel persistence\n\nGlobal and local refer to the location and persistence of header elements in\nyour UI.\n\n| Persistence | Definition                                                                                                                                                                                                                                     |\n| ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Global      | A global UI element is present everywhere in your UI. It contains system and product items your user may need at any time: navigation, authentication, notifications, and more. Global elements remain consistent from one context to another. |\n| Local       | A local navigation exists within a product’s context and provides the means to accomplish product level tasks. Local elements will therefore differ from one product to another.                                                               |\n\n### Task hierarchy\n\nThe task hierarchy describes the breadth of effect for various tasks. For this\nguidance we use the term \"product\" to encompass the broad category of products,\napplications, offerings, or web properties.\n\n| Task    | Definition                                                                                                                                                                                                             |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| System  | System-level tasks include navigating to the main sections of a platform and accessing system utilities like notifications or settings. At this level a user can manage the attributes that apply to the whole system. |\n| Product | Product-level tasks include navigating within a product and accessing the product’s core functions. At this level the user directly interacts with the product’s main function.                                        |\n\n### Examples\n\nThis matrix shows common system and product level tasks that appear globally and\nlocally.\n\n<Row>\n<Column colLg={12}>\n\n|                        | System tasks                                                                                                                                       | Product tasks                                                                                                                                                                                           |\n| ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Global persistence** | Log in, notifications, profile access, dashboard link, setting time, billing information, user permissions, switching from one product to another. | Hamburger menu to toggle local navigation. Show/hide application navigation, document thumbnails. Consistent placement of local actions in common between products for example: new file, save, cancel. |\n| **Local persistence**  | Detailed system-wide settings, such as user rights management, notification preferences.                                                           | Commenting in a text document, navigating from one peer resource to another (for example from one container, database, or document to another), selecting modalities within your product.               |\n\n</Column>\n</Row>\n\n## Configurations\n\nThe UI shell is configurable to let a product or platform choose which shell\ncomponents and configurations match their user and information requirements.\nSimple products have the flexibility of using a header or side panel and more\ncomplex products require a combination of UI shell components to accommodate the\ndepth of their navigation.\n\n![Example the header and left nav being used for the same IA.](images/configurations.png)\n\n<Caption>\n  Example showing how a simple architecture can be configured with only a header\n  or only a left panel\n</Caption>\n\n### Header only\n\nThe UI Shell header can be used as standalone navigation for your UI when a\nsmall number of main sections do not require a secondary navigation. The header\nprovides a place for a site title, navigation links and dropdowns, and header\nicons. The header is globally persistent and will always be in view as the user\nnavigates around the site.\n\nThis configuration gives more horizontal space for the page’s content, but has\nlimited room for navigation items in the header. This configuration also does\nnot lend itself to sub-menus that need to remain open as they will overlay and\ninterfere with the page content. Use a left panel in combination with the header\nif your navigation requires a sub-menu to remain open.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a header as the global navigation](images/header-only-example.png)\n\n<Caption>Example of header-only navigation</Caption>\n\n</Column>\n</Row>\n\n### Header with left panel\n\nThe left panel allows for more navigational items to stack vertically and an\nadditional level of hierarchy when paired with header navigation. Compared to a\nheader-only site navigation, this arrangement means sub-menus can remain open\nwithout overlaying or interfering with the page content.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a left panel.](images/header-leftpanel-example.png)\n\n<Caption>An example of a left-panel-only navigation.</Caption>\n\n</Column>\n</Row>\n\n## Navigation\n\n### Global\n\nA global navigation is always present in the UI. In this example, the\n[UI shell header](https://www.carbondesignsystem.com/components/UI-shell-header/usage)\nis used as a global navigation with two system level links (A) in the header and\nfive system level links in the switcher.\n\n![Diagram and image of the header nav being used as a global navigation.](images/global.png)\n\n<Caption>\n  The global header in this example contains only system navigation elements.\n</Caption>\n\nIn the example below, the\n[UI shell header](https://www.carbondesignsystem.com/components/UI-shell-header/usage)\ncontains both system (A) and product (B) links in the global region. System\nlevel links should be right justified in the header and product level links\nshould be left justified. On narrow screens when there is no room for header\nlinks, the system (A) links will move to the right UI shell panel and the\nproduct (B) links will move to the left UI shell panel.\n\n![Diagram and image of the header nav being used as a global navigation.](images/global_02.png)\n\n<Caption>\n  The global header in this example contains both product (B) and system\n  navigation (A) elements.\n</Caption>\n\n### Local\n\nThe local navigation takes users between areas of a product. Generally, these\nareas are collections of pages that should be grouped together so a user can\nundertake an end-to-end workflow without changing areas.\n\n![Example of left nav navigating within an offering.](images/within-offering.png)\n\n<Caption>The UI shell left panel being used as the product navigation.</Caption>\n\nRelated products should share navigation structures. Following similar\nstructures across a platform minimizes transitional volatility—your users will\nspend less time orienting themselves. This will help increase the user’s\nproductivity and perception of the platform’s responsiveness as they move\nbetween screens and states.\n\n## Best practices\n\n### Persistent data and UI state\n\nThe UI shell makes it easy to pivot between different offerings in your UI.\nMaintaining or restoring the state of a page helps your user pivot between\ndifferent areas to complete tasks without losing context or progress. If state\nor progress will be lost, inform users of this consequence. Maintaining these\nstates and filters will bring the user back to where they were if they had gone\nthrough levels of drill downs or welcome screens.\n\nOne technique to maintain this state is to use the shell’s menu items to track\nthe essential state elements in the URL and return the user to that URL\nautomatically when they return. This capability is not part of the UI Shell\ncomponent and must be added during implementation.\n\n### Sense of place\n\nThe role of the global header goes beyond linking the user to different areas in\nthe UI. The global qualities make the header an ideal location for your user to\nnaturally reference when they need to orient themselves.\n\nThis sense of place applies to location as well as states. The header can be\nused to indicate the user’s logged in status, which account they are using, or\nif they have entered a different mode.\n\n### Drill down levels and breadcrumbs\n\n[Breadcrumbs](/components/breadcrumb/usage) let your user see where they are in\nthe hierarchy of the application and gives users a way to navigate back up.\n\n![Breadcrumbs being used to navigate up a level.](images/drill-down.png)\n\n<Caption>Breadcrumbs being used to navigate up a level</Caption>\n\nIn many cases users need to drill up into a new context, for example from an\noverview page to a particular project, device or asset view.\n\nA drill down can be triggered from any interactive element in an application,\nand will generally open a new page focused purely on the object that was\nselected. This new page will then include a breadcrumb of the path back to the\nroot level above the title.\n\n### Organizational schemes\n\nWhen planning your product’s UI, put the emphasis on the tasks the user has to\ncomplete rather than business or technical limitations. Forcing the user to\nlearn a new mental model for your product increases the time to productivity and\ncreates a disjointed experience between your product and the platform.\n\nYour UI may need different schemes for organizing content in different parts of\nyour UI. Create logical groups that align to your user’s goals and improves\naccess to the content.\n\n#### Most recent\n\nOrdering a navigation by most recent helps users who are frequently looking for\nthe last object they used and the historical context helps with discovery. This\nloses any logical grouping and may be suited as an alternative way to organize\nrather than the primary way.\n\n#### Customized\n\nA user customized navigation lets the user personalize the UI for their own\nneeds.\n\n#### Audience\n\nStructuring content by your audience takes into account the role or permissions\ntied to that persona. This can highlight more common tasks related to that\npersona, but can also decrease dicoverability if tasks overlap personas or your\nuser occasionally shifts between roles.\n\n#### Alphabetically\n\nOrganizing your navigation alphabetically is only successful if your user knows\nwhat they are looking for and how the item is labeled. Alphabetical navigation\ndecreases discoverability in cases where your user is looking for a synonym of\nan item (e.g. \"pop-up, modal, lightbox, dialogue\").\n\n#### Company organization\n\nYour navigation may be composed of multiple applications, resources, and\nplatforms working together. The navigation should reflect an appropriate domain\nmodel rather than an org chart or a series of company or technology\nacquisitions.\n\n#### Unbound content\n\nAvoid placing unbounded content in the shell side navigation. Usability drops\nwhen the number of items within the shell get too high. For this reason, do not\nplace content that has no upper limit (such as content created by users) within\nthe shell’s side navigation. Instead, make use of drill down patterns.\n\n## Accessibility\n\n### Matching source code order to the visual hierarchy\n\n[Technique C27](https://www.w3.org/WAI/WCAG21/Techniques/css/C27) outlined in\nWCAG 2.1 recommends matching the visual order of your UI objects with the order\nthey appear in the Document Object Model (DOM). This technique ensures the\ndesigned hierarchy of information is communicated the same visually as it is by\nassistive technologies.\n\n<Row>\n<Column  colLg={12} colMd={12} colSm={4}>\n\n![hint text](images/matching-dom-visual.png)\n\n<Caption>\nExample showing a text input component as it appears visually in the UI, HTML, and accessibility tree\n</Caption>\n</Column>\n</Row>\n\nThis technique is necessary when the organization of your navigation menu is\nused to convey the meaning of stepped concepts like provisioning or other\nwizard-style patterns. The intended meaning of your grouping and ordering may be\nlost if the position of an object is styled differently from the DOM order.\n\nIn some cases, styling the elements with CSS to appear in a different visual\norder than the DOM order may be beneficial. For example, on narrow or mobile\nscreen widths you may choose to move your navigation from the top of the screen\nto another area that’s more appropriate for your user’s context.\n\n<Row>\n\n<Column  colLg={12} colMd={12} colSm={6} >\n\n![hint text](images/nav_priority_changes.png)\n\n<Caption>\n  1. Navigation items appear in the header at wide widths. <br />\n  2. Navigation items have moved to a side nav for narrow widths.\n</Caption>\n\n</Column>\n</Row>\n\n#### Navigating content by headers\n\nUsers who rely on screen reader technology to navigate areas of a site also rely\non screen readers to navigate the content of a page. In the same way users can\nvisually scan for the larger and bolder type of a header, users of assistive\ntechnologies also must understand the hierarchy of the page’s content to\nefficiently navigate a page’s content.\n\nTo ensure all users interpret the structure of your content in the same way, the\nvisual representation of a heading should match the underlying ranking of the\nheader tag. Tutorials on how to achieve this can be found in the WCAG page\nstructure\n[tutorials on headings](https://www.w3.org/WAI/tutorials/page-structure/headings/).\n\n### Keyboard navigation\n\n#### Skip to main content\n\nSome users may use a keyboard to navigate your site. Starting focus in the main\nnavigation lets them quickly navigate to other areas in your UI, but could block\nthem from the main content if there is a large number of navigation items to tab\nthrough first.\n\n[Success Criterion 2.4.1 (Bypass Blocks)](https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/G1)\nsuggest bypassing these blocks by providing \"Skip to main\" link at the start of\nyou navigation’s focusable controls. This lets users easily skip the navigation\nregion and begin interacting with the page’s main content area.\n\n<Row>\n<Column  colLg={8} colMd={8} colSm={6} >\n\n![hint text](images/skip-to-main-content.gif)\n\n<Caption>\n  The \"Skip to main content link\" is the first focusable element on the Carbon\n  website.\n</Caption>\n\n</Column>\n</Row>\n\n#### Landmark regions\n\nLandmark regions are a way of grouping similar areas of content in your UI and\nassigning them roles. This technique lets users navigating with assistive\ntechnologies quickly get around your site by navigating between landmark regions\nin your UI rather than each individual element.\n\nExamples of common landmark regions include: navigation, main, form, banner, and\nsearch. If there are multiple navigation landmark regions give each a unique\nlabel.\n\n<Row>\n\n<Column  colLg={8} colMd={8} colSm={6} >\n\n![hint text](images/landmark_zones.png)\n\n<Caption>\n  1. Navigation landmark <br />\n  2. Search landmark <br />\n  3. Main landmark <br />\n</Caption>\n\n</Column>\n\n</Row>\n\n#### Navigating the page via regions\n\nNavigating between landmark regions helps users who cannot see the visual\ngrouping of your navigation. This grouping can be important to understanding the\norganization of the structure of the content and making it clear what users can\ndo and where they can go in your UI.\n\n<Row>\n\n<Column  colLg={8} colMd={8} colSm={6} >\n\n![hint text](images/voiceover.png)\n\n<Caption>Screenshot of a rotor in action</Caption>\n\n</Column>\n\n</Row>\n\n## Related\n\n- [UI shell header](/components/UI-shell-header/code/)\n- [UI shell left panel](/components/UI-shell-left-panel/code/)\n- [UI shell right panel](https://www.carbondesignsystem.com/components/UI-shell-right-panel/code/)\n- [Breadcrumb](https://www.carbondesignsystem.com/components/breadcrumb/code/)\n\n## References\n\n- David R. Danielson,\n  [_Transitional Volatility in Web Navigation_](https://www.researchgate.net/publication/240859594_Transitional_volatility_in_web_navigation)\n  (2003)\n- Susan Farrell,\n  [_Utility Navigation: What It Is and How to Design It_](https://www.nngroup.com/articles/utility-navigation/)\n  (2015)\n- IBM Design,\n  [_Accessibility Handbook_](http://accessibility-handbook.mybluemix.net/design/a11y-handbook/)\n  (2019)\n- James Kalbach,\n  [_Designing Web Navigation_](https://www.oreilly.com/library/view/designing-web-navigation/9780596528102/ch04.html)\n  (2007)\n- WebAIM, [_\"Skip Navigation\" Links_](https://webaim.org/techniques/skipnav/)\n  (2013)\n- [Web Content Accessibility Guidelines](https://www.w3.org/WAI/standards-guidelines/wcag/)\n  (W3C, 2018)\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"0b4e95fbd53ea1a47a4cd926a50f781d","counter":2987,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Global header","description":"Users rely on the global header to navigate and orient themselves in your UI. This pattern outlines some of the qualities that make a global header consistent, familiar, and usable."},"exports":{},"rawBody":"---\ntitle: Global header\ndescription:\n  Users rely on the global header to navigate and orient themselves in your UI.\n  This pattern outlines some of the qualities that make a global header\n  consistent, familiar, and usable.\n---\n\n<PageDescription>\n\nUsers rely on the global header to navigate and orient themselves in your UI.\nThis pattern outlines some of the qualities that make a global header\nconsistent, familiar, and usable.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Overview</AnchorLink>\n  <AnchorLink>Configurations</AnchorLink>\n  <AnchorLink>Navigation</AnchorLink>\n  <AnchorLink>Best practices</AnchorLink>\n  <AnchorLink>Accessibility</AnchorLink>\n  <AnchorLink>Related</AnchorLink>\n  <AnchorLink>References</AnchorLink>\n  <AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nThe global header is essential to a product’s UI. It is a consistently available\nuser interface element that contains functionality for the current product as\nwell as for the entire system. Like the macOS Menu Bar and the Windows Start\nBar, the global header provides consistent locations to invoke your product’s\nlocal navigation as well as pervasive access to system-wide functions like\nsystem settings, notifications, and navigating between products.\n\nThis pattern covers the foundation of using UI Shell components for within and\nbetween product navigation, and introduces techniques for achieving consistency\nin products.\n\n### Anatomy of a global header\n\n![Example diagram of the global header.](images/header-anatomy.png)\n\n1. **Hamburger:** The hamburger icon is used to open product navigation such as\n   the [left panel](/components/UI-shell-left-panel/usage/).\n1. **Header name:** For IBM products, the header name is always preceded by\n   “IBM”. This should always and only link the user to the domain’s home page.\n1. **Header links:** Links in the header are supported as product navigation, if\n   required. These links should not open a new tab or link to another domain.\n   These links drop down to the side menu in narrow screen widths.\n1. **Sub-menu:** Sub-menus are supported as product navigation, if required.\n   Dropdowns open on click and are closed by either selecting an item in the\n   menu, clicking outside the menu area, or clicking on the menu label. When\n   open, the chevron should point up. Dropdown menu labels serve only to open\n   the dropdown; they cannot be a link to another page in the product.\n1. **Utilities:** The header provides a home for global system-level utilities\n   from anywhere in the site. Utility icons should not be used to directly\n   navigate to an area. Instead, they should open a panel that provides access\n   to other places in the product.\n1. **Switcher:** The switcher provides a way for the user to navigate easily\n   between products and systems. Recommended uses for this component include\n   recently used apps, frequently used apps, or all apps attached to the user’s\n   account. If the list is a manageable size, include all apps or products\n   available on the system.\n\n### Header and panel persistence\n\nGlobal and local refer to the location and persistence of header elements in\nyour UI.\n\n| Persistence | Definition                                                                                                                                                                                                                                     |\n| ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Global      | A global UI element is present everywhere in your UI. It contains system and product items your user may need at any time: navigation, authentication, notifications, and more. Global elements remain consistent from one context to another. |\n| Local       | A local navigation exists within a product’s context and provides the means to accomplish product level tasks. Local elements will therefore differ from one product to another.                                                               |\n\n### Task hierarchy\n\nThe task hierarchy describes the breadth of effect for various tasks. For this\nguidance we use the term \"product\" to encompass the broad category of products,\napplications, offerings, or web properties.\n\n| Task    | Definition                                                                                                                                                                                                             |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| System  | System-level tasks include navigating to the main sections of a platform and accessing system utilities like notifications or settings. At this level a user can manage the attributes that apply to the whole system. |\n| Product | Product-level tasks include navigating within a product and accessing the product’s core functions. At this level the user directly interacts with the product’s main function.                                        |\n\n### Examples\n\nThis matrix shows common system and product level tasks that appear globally and\nlocally.\n\n<Row>\n<Column colLg={12}>\n\n|                        | System tasks                                                                                                                                       | Product tasks                                                                                                                                                                                           |\n| ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Global persistence** | Log in, notifications, profile access, dashboard link, setting time, billing information, user permissions, switching from one product to another. | Hamburger menu to toggle local navigation. Show/hide application navigation, document thumbnails. Consistent placement of local actions in common between products for example: new file, save, cancel. |\n| **Local persistence**  | Detailed system-wide settings, such as user rights management, notification preferences.                                                           | Commenting in a text document, navigating from one peer resource to another (for example from one container, database, or document to another), selecting modalities within your product.               |\n\n</Column>\n</Row>\n\n## Configurations\n\nThe UI shell is configurable to let a product or platform choose which shell\ncomponents and configurations match their user and information requirements.\nSimple products have the flexibility of using a header or side panel and more\ncomplex products require a combination of UI shell components to accommodate the\ndepth of their navigation.\n\n![Example the header and left nav being used for the same IA.](images/configurations.png)\n\n<Caption>\n  Example showing how a simple architecture can be configured with only a header\n  or only a left panel\n</Caption>\n\n### Header only\n\nThe UI Shell header can be used as standalone navigation for your UI when a\nsmall number of main sections do not require a secondary navigation. The header\nprovides a place for a site title, navigation links and dropdowns, and header\nicons. The header is globally persistent and will always be in view as the user\nnavigates around the site.\n\nThis configuration gives more horizontal space for the page’s content, but has\nlimited room for navigation items in the header. This configuration also does\nnot lend itself to sub-menus that need to remain open as they will overlay and\ninterfere with the page content. Use a left panel in combination with the header\nif your navigation requires a sub-menu to remain open.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a header as the global navigation](images/header-only-example.png)\n\n<Caption>Example of header-only navigation</Caption>\n\n</Column>\n</Row>\n\n### Header with left panel\n\nThe left panel allows for more navigational items to stack vertically and an\nadditional level of hierarchy when paired with header navigation. Compared to a\nheader-only site navigation, this arrangement means sub-menus can remain open\nwithout overlaying or interfering with the page content.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a left panel.](images/header-leftpanel-example.png)\n\n<Caption>An example of a left-panel-only navigation.</Caption>\n\n</Column>\n</Row>\n\n## Navigation\n\n### Global\n\nA global navigation is always present in the UI. In this example, the\n[UI shell header](https://www.carbondesignsystem.com/components/UI-shell-header/usage)\nis used as a global navigation with two system level links (A) in the header and\nfive system level links in the switcher.\n\n![Diagram and image of the header nav being used as a global navigation.](images/global.png)\n\n<Caption>\n  The global header in this example contains only system navigation elements.\n</Caption>\n\nIn the example below, the\n[UI shell header](https://www.carbondesignsystem.com/components/UI-shell-header/usage)\ncontains both system (A) and product (B) links in the global region. System\nlevel links should be right justified in the header and product level links\nshould be left justified. On narrow screens when there is no room for header\nlinks, the system (A) links will move to the right UI shell panel and the\nproduct (B) links will move to the left UI shell panel.\n\n![Diagram and image of the header nav being used as a global navigation.](images/global_02.png)\n\n<Caption>\n  The global header in this example contains both product (B) and system\n  navigation (A) elements.\n</Caption>\n\n### Local\n\nThe local navigation takes users between areas of a product. Generally, these\nareas are collections of pages that should be grouped together so a user can\nundertake an end-to-end workflow without changing areas.\n\n![Example of left nav navigating within an offering.](images/within-offering.png)\n\n<Caption>The UI shell left panel being used as the product navigation.</Caption>\n\nRelated products should share navigation structures. Following similar\nstructures across a platform minimizes transitional volatility—your users will\nspend less time orienting themselves. This will help increase the user’s\nproductivity and perception of the platform’s responsiveness as they move\nbetween screens and states.\n\n## Best practices\n\n### Persistent data and UI state\n\nThe UI shell makes it easy to pivot between different offerings in your UI.\nMaintaining or restoring the state of a page helps your user pivot between\ndifferent areas to complete tasks without losing context or progress. If state\nor progress will be lost, inform users of this consequence. Maintaining these\nstates and filters will bring the user back to where they were if they had gone\nthrough levels of drill downs or welcome screens.\n\nOne technique to maintain this state is to use the shell’s menu items to track\nthe essential state elements in the URL and return the user to that URL\nautomatically when they return. This capability is not part of the UI Shell\ncomponent and must be added during implementation.\n\n### Sense of place\n\nThe role of the global header goes beyond linking the user to different areas in\nthe UI. The global qualities make the header an ideal location for your user to\nnaturally reference when they need to orient themselves.\n\nThis sense of place applies to location as well as states. The header can be\nused to indicate the user’s logged in status, which account they are using, or\nif they have entered a different mode.\n\n### Drill down levels and breadcrumbs\n\n[Breadcrumbs](/components/breadcrumb/usage) let your user see where they are in\nthe hierarchy of the application and gives users a way to navigate back up.\n\n![Breadcrumbs being used to navigate up a level.](images/drill-down.png)\n\n<Caption>Breadcrumbs being used to navigate up a level</Caption>\n\nIn many cases users need to drill up into a new context, for example from an\noverview page to a particular project, device or asset view.\n\nA drill down can be triggered from any interactive element in an application,\nand will generally open a new page focused purely on the object that was\nselected. This new page will then include a breadcrumb of the path back to the\nroot level above the title.\n\n### Organizational schemes\n\nWhen planning your product’s UI, put the emphasis on the tasks the user has to\ncomplete rather than business or technical limitations. Forcing the user to\nlearn a new mental model for your product increases the time to productivity and\ncreates a disjointed experience between your product and the platform.\n\nYour UI may need different schemes for organizing content in different parts of\nyour UI. Create logical groups that align to your user’s goals and improves\naccess to the content.\n\n#### Most recent\n\nOrdering a navigation by most recent helps users who are frequently looking for\nthe last object they used and the historical context helps with discovery. This\nloses any logical grouping and may be suited as an alternative way to organize\nrather than the primary way.\n\n#### Customized\n\nA user customized navigation lets the user personalize the UI for their own\nneeds.\n\n#### Audience\n\nStructuring content by your audience takes into account the role or permissions\ntied to that persona. This can highlight more common tasks related to that\npersona, but can also decrease dicoverability if tasks overlap personas or your\nuser occasionally shifts between roles.\n\n#### Alphabetically\n\nOrganizing your navigation alphabetically is only successful if your user knows\nwhat they are looking for and how the item is labeled. Alphabetical navigation\ndecreases discoverability in cases where your user is looking for a synonym of\nan item (e.g. \"pop-up, modal, lightbox, dialogue\").\n\n#### Company organization\n\nYour navigation may be composed of multiple applications, resources, and\nplatforms working together. The navigation should reflect an appropriate domain\nmodel rather than an org chart or a series of company or technology\nacquisitions.\n\n#### Unbound content\n\nAvoid placing unbounded content in the shell side navigation. Usability drops\nwhen the number of items within the shell get too high. For this reason, do not\nplace content that has no upper limit (such as content created by users) within\nthe shell’s side navigation. Instead, make use of drill down patterns.\n\n## Accessibility\n\n### Matching source code order to the visual hierarchy\n\n[Technique C27](https://www.w3.org/WAI/WCAG21/Techniques/css/C27) outlined in\nWCAG 2.1 recommends matching the visual order of your UI objects with the order\nthey appear in the Document Object Model (DOM). This technique ensures the\ndesigned hierarchy of information is communicated the same visually as it is by\nassistive technologies.\n\n<Row>\n<Column  colLg={12} colMd={12} colSm={4}>\n\n![hint text](images/matching-dom-visual.png)\n\n<Caption>\nExample showing a text input component as it appears visually in the UI, HTML, and accessibility tree\n</Caption>\n</Column>\n</Row>\n\nThis technique is necessary when the organization of your navigation menu is\nused to convey the meaning of stepped concepts like provisioning or other\nwizard-style patterns. The intended meaning of your grouping and ordering may be\nlost if the position of an object is styled differently from the DOM order.\n\nIn some cases, styling the elements with CSS to appear in a different visual\norder than the DOM order may be beneficial. For example, on narrow or mobile\nscreen widths you may choose to move your navigation from the top of the screen\nto another area that’s more appropriate for your user’s context.\n\n<Row>\n\n<Column  colLg={12} colMd={12} colSm={6} >\n\n![hint text](images/nav_priority_changes.png)\n\n<Caption>\n  1. Navigation items appear in the header at wide widths. <br />\n  2. Navigation items have moved to a side nav for narrow widths.\n</Caption>\n\n</Column>\n</Row>\n\n#### Navigating content by headers\n\nUsers who rely on screen reader technology to navigate areas of a site also rely\non screen readers to navigate the content of a page. In the same way users can\nvisually scan for the larger and bolder type of a header, users of assistive\ntechnologies also must understand the hierarchy of the page’s content to\nefficiently navigate a page’s content.\n\nTo ensure all users interpret the structure of your content in the same way, the\nvisual representation of a heading should match the underlying ranking of the\nheader tag. Tutorials on how to achieve this can be found in the WCAG page\nstructure\n[tutorials on headings](https://www.w3.org/WAI/tutorials/page-structure/headings/).\n\n### Keyboard navigation\n\n#### Skip to main content\n\nSome users may use a keyboard to navigate your site. Starting focus in the main\nnavigation lets them quickly navigate to other areas in your UI, but could block\nthem from the main content if there is a large number of navigation items to tab\nthrough first.\n\n[Success Criterion 2.4.1 (Bypass Blocks)](https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/G1)\nsuggest bypassing these blocks by providing \"Skip to main\" link at the start of\nyou navigation’s focusable controls. This lets users easily skip the navigation\nregion and begin interacting with the page’s main content area.\n\n<Row>\n<Column  colLg={8} colMd={8} colSm={6} >\n\n![hint text](images/skip-to-main-content.gif)\n\n<Caption>\n  The \"Skip to main content link\" is the first focusable element on the Carbon\n  website.\n</Caption>\n\n</Column>\n</Row>\n\n#### Landmark regions\n\nLandmark regions are a way of grouping similar areas of content in your UI and\nassigning them roles. This technique lets users navigating with assistive\ntechnologies quickly get around your site by navigating between landmark regions\nin your UI rather than each individual element.\n\nExamples of common landmark regions include: navigation, main, form, banner, and\nsearch. If there are multiple navigation landmark regions give each a unique\nlabel.\n\n<Row>\n\n<Column  colLg={8} colMd={8} colSm={6} >\n\n![hint text](images/landmark_zones.png)\n\n<Caption>\n  1. Navigation landmark <br />\n  2. Search landmark <br />\n  3. Main landmark <br />\n</Caption>\n\n</Column>\n\n</Row>\n\n#### Navigating the page via regions\n\nNavigating between landmark regions helps users who cannot see the visual\ngrouping of your navigation. This grouping can be important to understanding the\norganization of the structure of the content and making it clear what users can\ndo and where they can go in your UI.\n\n<Row>\n\n<Column  colLg={8} colMd={8} colSm={6} >\n\n![hint text](images/voiceover.png)\n\n<Caption>Screenshot of a rotor in action</Caption>\n\n</Column>\n\n</Row>\n\n## Related\n\n- [UI shell header](/components/UI-shell-header/code/)\n- [UI shell left panel](/components/UI-shell-left-panel/code/)\n- [UI shell right panel](https://www.carbondesignsystem.com/components/UI-shell-right-panel/code/)\n- [Breadcrumb](https://www.carbondesignsystem.com/components/breadcrumb/code/)\n\n## References\n\n- David R. Danielson,\n  [_Transitional Volatility in Web Navigation_](https://www.researchgate.net/publication/240859594_Transitional_volatility_in_web_navigation)\n  (2003)\n- Susan Farrell,\n  [_Utility Navigation: What It Is and How to Design It_](https://www.nngroup.com/articles/utility-navigation/)\n  (2015)\n- IBM Design,\n  [_Accessibility Handbook_](http://accessibility-handbook.mybluemix.net/design/a11y-handbook/)\n  (2019)\n- James Kalbach,\n  [_Designing Web Navigation_](https://www.oreilly.com/library/view/designing-web-navigation/9780596528102/ch04.html)\n  (2007)\n- WebAIM, [_\"Skip Navigation\" Links_](https://webaim.org/techniques/skipnav/)\n  (2013)\n- [Web Content Accessibility Guidelines](https://www.w3.org/WAI/standards-guidelines/wcag/)\n  (W3C, 2018)\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/patterns/global-header/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}