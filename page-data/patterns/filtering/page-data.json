{"componentChunkName":"component---src-pages-patterns-filtering-index-mdx","path":"/patterns/filtering/","result":{"pageContext":{"frontmatter":{"title":"Filtering","description":"Filtering is the mechanism by which a user adds or removes data items from a displayed data set by turning on and off certain predefined attributes."},"relativePagePath":"/patterns/filtering/index.mdx","titleType":"prepend","MdxNode":{"id":"92b8c026-6284-51f7-979c-3865096c8c09","children":[],"parent":"880f8a5f-6ad0-5c98-85a7-4a1500890499","internal":{"content":"---\ntitle: Filtering\ndescription:\n  Filtering is the mechanism by which a user adds or removes data items from a\n  displayed data set by turning on and off certain predefined attributes.\n---\n\n<PageDescription>\n\nFiltering allows a user to add or remove data items from a displayed data set by\nturning on and off certain predefined attributes.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Selection methods</AnchorLink>\n<AnchorLink>Filter states</AnchorLink>\n<AnchorLink>Resetting filters</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nFiltering allows users to trim down visible items when working through large\ndata sets. Filters can help a user find something they’re looking for, see\navailable options within a certain set of criteria, and make a decision when\nfaced with a large number of options.\n\n## Selection methods\n\nChoosing the right filter selection method will improve usability and user\nefficiency. Carbon supports several selection methods that are appropriate for\ndifferent situations. Consider the data your users are looking at, what they are\ntrying to achieve, and how they might intuitively narrow down the data.\n\n| Selection method                        | Description                                                                                 |\n| --------------------------------------- | ------------------------------------------------------------------------------------------- |\n| _Single selection_                      | The user can pick only one attribute to modify data results.                                |\n| _Multiselection_                        | The user has the option to pick more than one attribute to modify data results.             |\n| _Multiple categories_                   | The user has the option to select attributes across multiple data categories.               |\n| _Multiple filters with batch updates_   | The user selects multiple filters and then takes an additional action to apply the filters. |\n| _Multiple filters with instant updates_ | The data is updated as the user selects each filter.                                        |\n\n### Single selection\n\nUse a single-selection filter when the user can pick only one attribute to\nmodify data results. Under the hood, single selection behaves like a\n[radio button](/components/radio-button/usage). Types of single-selection\nfilters include:\n\n- Basic dropdown\n- Inline dropdown\n- Radio button set (either standalone or within a menu)\n\n<Row>\n<Column colLg={8}>\n\n![Example of a single selection filter in an inline dropdown](images/filter-1.png)\n\n<Caption>Example of a single selection filter in an inline dropdown</Caption>\n\n</Column>\n</Row>\n\n### Multiselect\n\nUse a multiselect filter when the user has the option to pick more than one\nattribute to modify the data results. Under the hood, multiselects behave like\n[checkboxes](components/checkbox/usage). Types of multiselect filters include:\n\n- Multiselect dropdown\n- Inline multiselect dropdown\n- Checkbox set (either standalone or within a menu)\n\n<Row>\n<Column colLg={8}>\n\n![Example of a milti-selection filter in a checkbox set](images/filter-2.png)\n\n<Caption>Example of a multiselect filter in a checkbox set</Caption>\n\n</Column>\n</Row>\n\n### Selecting multiple categories\n\nA category is a set of filter items within the same topic. For example, \"size\"\nis a category and `small`, `medium`, `large`, and `extra large` are its filter\nchoices. Multiple filter categories may be applied to the same data set. For\nexample, the user can filter by size, color, and price range.\n\nMultiple category selection is usually placed vertically on the left side of the\npage or horizontally at the top of the data set. Multiple categories should\nnever be put within a menu or dropdown.\n\n<Row>\n<Column colLg={8}>\n\n![Example of multiple filter categories](images/filter-3.png)\n\n<Caption>Example of multiple filter categories</Caption>\n\n</Column>\n</Row>\n\n### Multiple filters with batch updates\n\nUse a batch filter when all filters are applied together at the end of the\nselection process. The data set only refreshes once at user action. The trigger\nis most commonly an \"Apply filters\" button.\n\nThe batch filter works best when the user is making several filtering selections\nacross different categories that may take a longer time to mentally process.\nBatch filtering is also a good solution for slow data-return speeds. This can\nprevent the user from having to wait for the data to load after every selection.\n\n<Row>\n<Column colLg={8}>\n\n![Example of batch filtering](images/filter-4.png)\n\n<Caption>Example of batch filtering</Caption>\n\n</Column>\n</Row>\n\n### Multiple filters with instant updates\n\nThis method returns results after each individual selection is made. The trigger\nis the individual selection and the filter manipulates the data in real time.\nThis is a good solution for when the user is only selecting from one category or\nthe user is expected to only make one filter selection.\n\n## Filter states\n\nFilters within each category should start either as _all unselected_ or _all\nselected_. When using multiple categories, the start state can vary from\ncategory to category. If the user typically wants only one or a few criteria to\nbe excluded from the results, then all filters should be selected at the start.\nIf the user typically wants to see only results related to one particular\ncriteria, then all filters should start as unselected.\n\nIf the filter(s) can be hidden in either a drawer, dropdown, or menu, then there\nshould be an indicator visible on the closed filter state that informs the user\nthat filters have been applied. At a minimum, the indicator should include the\nnumber of filters applied and have the option to clear filters without\nre-opening the filter container.\n\n<Row>\n<Column colLg={6}>\n\n![Example of hidden filters not applied](images/filter-5.png)\n\n<Caption>Example of filter without selections</Caption>\n\n</Column>\n\n<Column colLg={6}>\n\n![Example of hidden filters applied](images/filter-6.png)\n\n<Caption>Example of filter with selections</Caption>\n\n</Column>\n</Row>\n\n## Resetting filters\n\nEach category should have a way to clear all applied filters at once without\nhaving to interact with each individual item. Clearing filters returns the\nfilters to their original default starting state.\n\nIf multiple categories have been applied to the same data set then there should\nalso be a way to dismiss all filters across all categories at once.\n\n<Row>\n<Column colLg={8}>\n\n![Filter reset example](images/filter-7.png)\n\n<Caption></Caption>\n\n</Column>\n</Row>\n\n## Related\n\n<Row>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Components\n\n- [Radio button](/components/radio-button/usage)\n- [Dropdown](/components/dropdown/usage)\n- [Checkbox](/components/checkbox/usage)\n- [Data table](/components/data-table/usage)\n\n</Column>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Patterns\n\n- [Clear](/patterns/common-actions#clear)\n- [Notifications](/patterns/notification-pattern)\n- [Search](/patterns/search-pattern)\n\n</Column>\n</Row>\n\n## References\n\n- Patternfly,\n  [Filters](https://www.patternfly.org/v4/design-guidelines/usage-and-behavior/filters)\n  (2019)\n- Nick Babich,\n  [Best Practices for Search Results](https://uxplanet.org/best-practices-for-search-results-1bbed9d7a311)\n  (2017)\n- Think with Google,\n  [In-App Search](https://www.thinkwithgoogle.com/marketing-resources/experience-design/chapter-2-in-app-search/)\n  (2016)\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments\n[on GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"32adff6000ddf20d6d08265e7830eb1f","counter":2988,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Filtering","description":"Filtering is the mechanism by which a user adds or removes data items from a displayed data set by turning on and off certain predefined attributes."},"exports":{},"rawBody":"---\ntitle: Filtering\ndescription:\n  Filtering is the mechanism by which a user adds or removes data items from a\n  displayed data set by turning on and off certain predefined attributes.\n---\n\n<PageDescription>\n\nFiltering allows a user to add or remove data items from a displayed data set by\nturning on and off certain predefined attributes.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Selection methods</AnchorLink>\n<AnchorLink>Filter states</AnchorLink>\n<AnchorLink>Resetting filters</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nFiltering allows users to trim down visible items when working through large\ndata sets. Filters can help a user find something they’re looking for, see\navailable options within a certain set of criteria, and make a decision when\nfaced with a large number of options.\n\n## Selection methods\n\nChoosing the right filter selection method will improve usability and user\nefficiency. Carbon supports several selection methods that are appropriate for\ndifferent situations. Consider the data your users are looking at, what they are\ntrying to achieve, and how they might intuitively narrow down the data.\n\n| Selection method                        | Description                                                                                 |\n| --------------------------------------- | ------------------------------------------------------------------------------------------- |\n| _Single selection_                      | The user can pick only one attribute to modify data results.                                |\n| _Multiselection_                        | The user has the option to pick more than one attribute to modify data results.             |\n| _Multiple categories_                   | The user has the option to select attributes across multiple data categories.               |\n| _Multiple filters with batch updates_   | The user selects multiple filters and then takes an additional action to apply the filters. |\n| _Multiple filters with instant updates_ | The data is updated as the user selects each filter.                                        |\n\n### Single selection\n\nUse a single-selection filter when the user can pick only one attribute to\nmodify data results. Under the hood, single selection behaves like a\n[radio button](/components/radio-button/usage). Types of single-selection\nfilters include:\n\n- Basic dropdown\n- Inline dropdown\n- Radio button set (either standalone or within a menu)\n\n<Row>\n<Column colLg={8}>\n\n![Example of a single selection filter in an inline dropdown](images/filter-1.png)\n\n<Caption>Example of a single selection filter in an inline dropdown</Caption>\n\n</Column>\n</Row>\n\n### Multiselect\n\nUse a multiselect filter when the user has the option to pick more than one\nattribute to modify the data results. Under the hood, multiselects behave like\n[checkboxes](components/checkbox/usage). Types of multiselect filters include:\n\n- Multiselect dropdown\n- Inline multiselect dropdown\n- Checkbox set (either standalone or within a menu)\n\n<Row>\n<Column colLg={8}>\n\n![Example of a milti-selection filter in a checkbox set](images/filter-2.png)\n\n<Caption>Example of a multiselect filter in a checkbox set</Caption>\n\n</Column>\n</Row>\n\n### Selecting multiple categories\n\nA category is a set of filter items within the same topic. For example, \"size\"\nis a category and `small`, `medium`, `large`, and `extra large` are its filter\nchoices. Multiple filter categories may be applied to the same data set. For\nexample, the user can filter by size, color, and price range.\n\nMultiple category selection is usually placed vertically on the left side of the\npage or horizontally at the top of the data set. Multiple categories should\nnever be put within a menu or dropdown.\n\n<Row>\n<Column colLg={8}>\n\n![Example of multiple filter categories](images/filter-3.png)\n\n<Caption>Example of multiple filter categories</Caption>\n\n</Column>\n</Row>\n\n### Multiple filters with batch updates\n\nUse a batch filter when all filters are applied together at the end of the\nselection process. The data set only refreshes once at user action. The trigger\nis most commonly an \"Apply filters\" button.\n\nThe batch filter works best when the user is making several filtering selections\nacross different categories that may take a longer time to mentally process.\nBatch filtering is also a good solution for slow data-return speeds. This can\nprevent the user from having to wait for the data to load after every selection.\n\n<Row>\n<Column colLg={8}>\n\n![Example of batch filtering](images/filter-4.png)\n\n<Caption>Example of batch filtering</Caption>\n\n</Column>\n</Row>\n\n### Multiple filters with instant updates\n\nThis method returns results after each individual selection is made. The trigger\nis the individual selection and the filter manipulates the data in real time.\nThis is a good solution for when the user is only selecting from one category or\nthe user is expected to only make one filter selection.\n\n## Filter states\n\nFilters within each category should start either as _all unselected_ or _all\nselected_. When using multiple categories, the start state can vary from\ncategory to category. If the user typically wants only one or a few criteria to\nbe excluded from the results, then all filters should be selected at the start.\nIf the user typically wants to see only results related to one particular\ncriteria, then all filters should start as unselected.\n\nIf the filter(s) can be hidden in either a drawer, dropdown, or menu, then there\nshould be an indicator visible on the closed filter state that informs the user\nthat filters have been applied. At a minimum, the indicator should include the\nnumber of filters applied and have the option to clear filters without\nre-opening the filter container.\n\n<Row>\n<Column colLg={6}>\n\n![Example of hidden filters not applied](images/filter-5.png)\n\n<Caption>Example of filter without selections</Caption>\n\n</Column>\n\n<Column colLg={6}>\n\n![Example of hidden filters applied](images/filter-6.png)\n\n<Caption>Example of filter with selections</Caption>\n\n</Column>\n</Row>\n\n## Resetting filters\n\nEach category should have a way to clear all applied filters at once without\nhaving to interact with each individual item. Clearing filters returns the\nfilters to their original default starting state.\n\nIf multiple categories have been applied to the same data set then there should\nalso be a way to dismiss all filters across all categories at once.\n\n<Row>\n<Column colLg={8}>\n\n![Filter reset example](images/filter-7.png)\n\n<Caption></Caption>\n\n</Column>\n</Row>\n\n## Related\n\n<Row>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Components\n\n- [Radio button](/components/radio-button/usage)\n- [Dropdown](/components/dropdown/usage)\n- [Checkbox](/components/checkbox/usage)\n- [Data table](/components/data-table/usage)\n\n</Column>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Patterns\n\n- [Clear](/patterns/common-actions#clear)\n- [Notifications](/patterns/notification-pattern)\n- [Search](/patterns/search-pattern)\n\n</Column>\n</Row>\n\n## References\n\n- Patternfly,\n  [Filters](https://www.patternfly.org/v4/design-guidelines/usage-and-behavior/filters)\n  (2019)\n- Nick Babich,\n  [Best Practices for Search Results](https://uxplanet.org/best-practices-for-search-results-1bbed9d7a311)\n  (2017)\n- Think with Google,\n  [In-App Search](https://www.thinkwithgoogle.com/marketing-resources/experience-design/chapter-2-in-app-search/)\n  (2016)\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments\n[on GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/patterns/filtering/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}