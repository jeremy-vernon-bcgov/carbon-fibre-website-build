{"componentChunkName":"component---src-pages-patterns-dialog-pattern-index-mdx","path":"/patterns/dialog-pattern/","result":{"pageContext":{"frontmatter":{"title":"Dialogs","description":"A dialog is a “conversation” between the system and the user. It is prompted when the sytem needs input from the user or to give the user urgent information concerning their current workflow."},"relativePagePath":"/patterns/dialog-pattern/index.mdx","titleType":"prepend","MdxNode":{"id":"a17b7bfc-6732-5838-9e6e-79916d096adb","children":[],"parent":"7e823593-fa18-5d14-9c32-61b03c7e4bec","internal":{"content":"---\ntitle: Dialogs\ndescription:\n  A dialog is a “conversation” between the system and the user. It is prompted\n  when the sytem needs input from the user or to give the user urgent\n  information concerning their current workflow.\n---\n\n<PageDescription>\n\nA dialog is a “conversation” between the system and the user. It is prompted\nwhen the system needs input from the user or to give the user urgent information\nconcerning their current workflow. There are two types of dialogs, modal and\nnon-modal.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Modal dialogs</AnchorLink>\n<AnchorLink>Non-modal dialogs</AnchorLink>\n<AnchorLink>Designing with dialogs</AnchorLink>\n<AnchorLink>Related components and patterns</AnchorLink>\n<AnchorLink>Accessibility</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nDialogs work best when used for short tasks or to alert the user to task\nrelevant information. Dialogs are useful in many scenarios; they are less\ndisorientating than navigating a user to a new page for simple tasks or\nknowledge gathering. However, dialogs are disruptive and can be distracting to\nthe user. Use them sparingly.\n\nA dialog is triggered by a user’s action, appears on top of the main page\ncontent, and is persistent until dismissed. The purpose of a dialog should be\nimmediately apparent to the user, with a clear and obvious path to completion.\n\n### Anatomy of a dialog\n\n<Row>\n<Column colLg={8}>\n\n![dialog anatomy](images/dialog-4.png)\n\n</Column>\n</Row>\n\n1. **Header:** Includes a title, optional label, and the close icon. The title\n   should be brief and clearly describe the dialogs’s task or purpose. Use the\n   optional label above the title set the context for the information in the\n   dialog.\n2. **Body:** Contains the information and/or controls needed to complete the\n   dialog’s task. It can include message text and components.\n3. **Actions:** The main actions needed to complete or cancel the dialog task.\n   [Button groupings](/patterns/dialog-pattern#buttons-groups) change based on\n   modal variant. Use descriptive words for the actions like Add, Delete, Save\n   and avoid vague words like Done or OK.\n4. **x:** The close `x` icon will close the dialog without submitting any data.\n5. **Overlay:** (Modal dialogs only) Screen overlay that obscures the on page\n   content.\n\n### When to use a dialog\n\n- Use to focus the user’s attention.\n- Use for short task completion.\n- Use to gather input from the user.\n- Use to display relevant information.\n\n### When not to use a dialog\n\n- Don’t use if the content is unrelated to the current workflow.\n- Don’t use to display complex or large amounts of data.\n- Don’t recreate a full app or page in a dialog.\n- Don’t use when the user hasn’t triggered the dialog.\n\n### Dialog types\n\nThere are two types of dialogs, modal and non-modal.\n\nA _modal_ dialog triggers a state (or mode) that focuses the user’s attention\nexclusively on one task or piece of relevant information. When a modal dialog is\nactive, the content of the underneath page is obscured and inaccessible until\nthe user completes the task or dismisses the modal.\n\nWhen a _non-modal_ dialog is active the user can continue viewing and\ninteracting with the main page while the dialog is open. Non-modal dialogs are\ncommonly used to present non-critical information or optional user tasks.\n\n| Type      | Usage                                                                                        | Context                                                                                                                                                |\n| --------- | -------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Modal     | Use to present critical information or request required input needed to complete a workflow. | Focuses the users attention exclusively on one task or piece of information. On-page content is obscured from the user while the modal dialog is open. |\n| Non-modal | Use to present non-critical information or optional user tasks.                              | On-page content can be accessed and interacted with while the dialog is still open.                                                                    |\n\n<Row>\n<Column colLg={8}>\n\n![dialog examples](images/dialog-1.png)\n\n</Column>\n</Row>\n\n<Caption>Modal dialog (left) and non-modal dialog (right)</Caption>\n\n### Best practices\n\n#### Use dialogs sparingly\n\nDon’t overuse dialogs. They are disruptive and can easily annoy the user if used\nincorrectly or too frequently. When dialogs are used for non-workflow related\ntasks, it is likely a user will start ignoring or dismissing the dialogs without\nfully understanding the content. This can cause users to make hurried or\nimpulsive choices when dealing with more critical dialogs.\n\n#### Dialogs should be user initiated\n\nA user action, such as clicking a button, should trigger the dialog to open.\nDon’t interrupt the user by opening a dialog when they aren’t expecting it.\nAvoid system generated pop-ups that distract the user while working, such as Net\nPromoter Score. Triggers can either be a direct or indirect consequence of a\nuser’s action. An example of an indirect action is a user closing a tab with\nunsaved content that then causes a dialog to ask if they want to save their\nchanges before closing. If the system is autogenerating an alert that is not a\nconsequence of a user’s action, but a response to processes happening in the\nbackground, then a toast notification should be used instead.\n\n#### Keep dialog tasks simple and focused\n\nDialog tasks should be direct and easy to complete. Avoid feature creep in\ndialogs where a once simple dialog has become bloated with interactions. When\ndeciding to use a dialog consider how the task could expanded in the future and\nif a dialog will be able to effectively incorporate additions. An example of a\nsimple task would adding a new item to a list where the item details are added\nand submitted via a dialog.\n\n## Modal dialogs\n\nUse a modal dialog to present critical information or request user input needed\nto complete a user’s workflow. Modal dialogs are disruptive and should be used\nsparingly. When active, a user is blocked from the on-page content and cannot\nreturn to their previous workflow until the modal task is completed or the user\ndismisses the modal. Any information or input requested should be directly\nrelated to the user’s task at hand.\n\nModal dialogs are commonly used for short and non-frequent tasks, such as\nediting or management tasks. If a user needs to repeatedly perform a task,\nconsider making the task do-able from the main page. A modal dialog adds to a\nworkflow’s interaction cost; it takes the user out of their previous context and\nrequires additional actions to complete and dismiss. When considering, ask is\nthis critical to their current workflow?\n\n<Row>\n<Column colLg={8}>\n\n![modal dialog example](images/dialog-2.png)\n\n</Column>\n</Row>\n\n### When to use\n\n#### An immediate response is required from the user\n\nUse a dialog to request information that is preventing the system from\ncontinuing a user-initiated process.\n\n#### Notify the user of urgent information\n\nUse a modal dialog to notify the user of urgent information concerning their\ncurrent work. Commonly used to report system errors or convey a consequence of a\nuser’s action.\n\n#### Confirm a user decision\n\nUse a modal dialog to confirm user decisions. Clearly describe the action being\nconfirmed and explain any potential consequences that it may cause. Both the\ntitle and the button should reflect the action that will occur. If the action is\ndestructive or irreversible then use a transactional danger modal.\n\n### When not to use\n\n#### Modals prevent access to the main page\n\nDon’t use if additional information outside the modal needs to be consulted.\nWhile a modal dialog is active a user cannot interact with the main page and is\nrestricted to only the information in the modal for making decisions. Modal\ntasks should be easy to complete with the limited information presented in the\ndialog itself. If a user needs access to additional information then consider\nusing a full page instead.\n\n#### Don’t nest modals\n\nOne modal should never trigger another modal. If the first modal task is\ndependent on a confirmation modal to approve then that first task should not be\npreformed in a modal.\n\n#### Don’t make modals full page\n\nIf a modal dialog needs more space than the large modal component allows then\nthe content should be displayed on a page of its own and not in a modal. A modal\nis not an alternative to page.\n\n### Modal variants\n\n<Row>\n<Column colLg={8}>\n\n![modal dialog variants](images/dialog-3.png)\n\n</Column>\n</Row>\n\n| Variant                                                        | Usage                                                                                                                           |\n| -------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| [Passive](/components/modal/usage#passive-modal)               | Presents information the user needs to be aware of concerning their current workflow. Contains no actions for the user to take. |\n| [Transactional](/components/modal/usage#transactional-modal)   | Requires an action to be taken in order for the modal to be completed and closed. Contains a cancel and primary action buttons. |\n| [Acknowledgment](/components/modal/usage#acknowledgment-modal) | System requires an acknowledgement of the information from the user. Contains only a single button, commonly \"OK\".              |\n| [Progress](/components/modal/usage/#progress-modal)            | Requires several steps to be completed before it can be closed. Contains a cancel, previous and next/completion buttons.        |\n\n### Dismissing variant modals\n\nFor passive modals:\n\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Click elsewhere**: Clicking outside the passive modal area will\n  automatically close the modal.\n- **Esc**: Press `ESC` on the keyboard\n\nFor transactional, progress, and acknowledgement modals:\n\n- **Task completion**: clicking the primary action will complete the task and\n  automatically close the modal.\n- **Cancel button**: clicking the cancel button will close the modal and return\n  the user to its previous context. Cancel undoes all applied changes.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Esc**: Press `ESC` on the keyboard\n\n## Non-modal dialogs\n\nUse non-modal dialogs to display non-critical information or optional tasks\nrelated to the user’s current workflow, like \"find and replace\". A user still\nhas access to the on-page content while the non-modal dialog is open and a\nresponse is not required to continue working. However, a non-modal dialog does\nrequire an action from the user to be dismissed.\n\n<Row>\n<Column colLg={8}>\n\n![non-modal example](images/dialog-modeless.png)\n\n</Column>\n</Row>\n\n<br />\n\n### When to use\n\n#### When access to the page is needed\n\nUse when a user needs to compare or refer to information in the main page\nalongside the modal. users can interact with the non-modal content and the\non-page content simultaneously.\n\nA non-modal dialog window can be moved from its original placement on the\nscreen. This allows the user to access information that might otherwise be\nhidden by the dialog.\n\n#### Aid or accelerate a user’s work flow\n\nUse to perform tasks or present informational along side the main page content\nthat can accelerate or aid a user’s workflow. For example, a \"find and replace\"\ndialog can help a user perform and automate edits quicker. The user can chose to\nautomate the changes or navigate through the page by using the \"find\" feature\nand manually make updates.\n\n#### Display additional information\n\nUse to display additional information that can help inform a user’s decision or\nworkflow. For example, use for incontext help or tutorials such as a knowledge\ncenter.\n\n### When not to use\n\n#### Don’t use if the user’s response is required\n\nUse for optional or non-critical tasks only. If a user’s response or input is\nrequired to progress the workflow, use a modal dialog.\n\n### Non-modal variants\n\n| Name          | Description                                                                                                                 |\n| ------------- | --------------------------------------------------------------------------------------------------------------------------- |\n| Passive       | Presents additional information concerning the user’s current workflow. Contains no actions for the user to take.           |\n| Transactional | Presents the user with optional action/s. Actions can be repeated without closing the dialog. Contains at least one button. |\n\n### Dismissing non-modal dialogs\n\nThere are several possible ways to exit a non-modal dialog.\n\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data.\n- **Cancel button**: If a cancel button is used then clicking it will close the\n  modal. Cancel undoes all applied changes.\n- **Esc**: Press `ESC` on the keyboard\n\n## Designing with dialogs\n\n### Button groups\n\nWhen placing buttons, Cancel is always the outmost left button option and the\nprimary action is always the outmost right button. There should only ever be one\nprimary action per dialog. Dialog buttons are always full bleed and attached to\nthe bottom of a dialog.\n\n<Row>\n<Column colLg={8}>\n\n![button grouping examples](images/dialog-5.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Button groups: one button, two buttons, three buttons, and progress buttons.\n</Caption>\n\n#### One button\n\nSingle buttons are placed on the right side, span 50% of the dialog, and bleed\nto the edge. The single button format is most commonly used for acknowledgment\ndialogs. In most scenarios, a primary button is used when only one button is\nneeded.\n\n#### Two buttons\n\nWhen using two buttons, the secondary button is on the left and the primary\nbutton is placed on the right. Each button spans 50% of the dialog and are full\nbleed to the edge.\n\n#### Three buttons\n\nWhen three buttons are needed, each is 25% of the dialog width and aligned to\nthe right side of the dialog. Only the outmost right button is allowed to be a\nprimary button with the other two being secondary buttons. If all three actions\nhave the same weight then all three should be secondary buttons.\n\n#### Progress indicator buttons\n\nThe three progress indicator buttons are: Cancel, Previous, Next. Each button’s\nwidth is 25% of the dialog window and are full bleed. Previous and Next should\nbe grouped together and placed on the right half of the dialog, with Previous as\na secondary button and Next as a primary button. The Cancel button is aligned to\nleft side of the dialog and uses a ghost button.\n\nIn the last step of the sequence, the Next button label should change to reflect\nthe final action.\n\n### Behaviors\n\n#### Trigger\n\nDialogs are triggered as a result of a user’s action and are not system\ngenerated. Common components that can trigger a dialog include, button, link, or\nicon.\n\n#### Focus\n\nOnce the dialog is open, set the initial focus to the first location that\naccepts user input. Focus should then remain trapped in the dialog until it is\nclosed.\n\n#### Scrolling\n\nThe modal component has four set sizes and each size has a set max-height. If\nthe dialog content is longer than the dialog height then the body section should\nscroll vertically with the header and footer remaining fixed in place.\n\n#### Validation\n\nValidate a user’s entries before the dialog is closed. If any entry is invalid\nthen the dialog should remain open with the entry marked with an error state and\ninclude an inline error message. The message should inform the user what has\nhappened and provide guidance on next steps or possible resolutions. Effective\nand immediate error messaging can help the user to understand the problem and\nhow to fix it.\n\nWhen possible, we recommend validating the user’s data before submission. This\ntype of inline validation (aka\n[client-side validation](/patterns/forms-pattern#errors-and-validation)) should\nhappen as soon as the field loses focus. This will help easily identify the\nelements that need to be corrected. On field error messages should disappear\nwhen the form criteria is met. If the data was not able to be submitted due to\nserver-side issues then an inline notification should appear.\n\nDecrease the chances of invalid data by using selection controls and bound entry\ncontrols components that provide users with specific input choices, for example\nradio buttons and dropdowns.\n\n<Row>\n<Column colLg={8}>\n\n![Invalid example](images/dialog-validate.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Real-time validation. The user has left the first required field empty.{' '}\n</Caption>\n\n#### Task completion and loading\n\nThe task completion action should take place immediately. If a short loading\nperiod is needed then a loading spinner and overlay should appear on top of the\nmodal body area with content disabled. The primary action button should be\ndisabled while loading is in progress.\n\nIf the action requires more than a few seconds to complete, display progress\ninformation elsewhere on the screen to inform the user how long it will take to\ncomplete.\n\n<Row>\n<Column colLg={8}>\n\n![loading example](images/dialog-loading.png)\n\n</Column>\n</Row>\n\n### Using components\n\nAppropriate components to use in a dialog include form inputs and controls that\naid in collecting information from the user. Other components like content\nswitcher and structured list can be used to organize information. When possible,\navoid using complex components that can complicate task completion or prolong a\nuser’s time in the modal. A user’s journey through the modal should be direct\nand short.\n\n#### Avoid components that will direct the user away from the dialog\n\nAvoid components like links that will take the user away from the current\ncontext and the task at hand. A dialog’s purpose is to focus the user’s\nattention on a particular task and should not encourage any action that is not\nrelated to that task’s completion.\n\n#### Avoid components that hide information\n\nWhen possible avoid components that hide information or choices from the\nuser—like accordion and tabs—and require additional effort from the user to\ndiscover all the available content. Time spent in a modal should be minimal and\nonly information needed to complete the task should be included. If there is too\nmuch information for a user to consume in a dialog context, consider using a\nfull page instead.\n\n#### Avoid complex interactions with data tables\n\nWhen possible avoid using a data table in a dialog as it is a complex component\nwith its own workflow and decision making that can overly complicate a user’s\nchoice and task completion in relation to the dialog. If a data table is\nnecessary then the tables should be kept as simple as possible with limited\ninteractions. For example, you can use data table to make selections that will\nbe incurred by the dialogs action but avoid preforming table functions like\nbatch editing or batch actions inside the modal itself. For smaller sets of data\nor selections consider using a structured list, dropdown, or tile set instead.\n\n<DoDontRow>\n<DoDont\ncolMd={6} colLg={6}\ncaption=\"Do: keep data table interaction simple.\">\n\n![Do: keep data table interaction simple.](./images/dialog-table-do.png)\n\n</DoDont>\n<DoDont\ncolMd={6} colLg={6}\ntype=\"dont\"\ncaption=\"Don’t include complex interactions in data tables that are not necessary to complete the task at hand.\">\n\n![Don’t include complex interactions in data tables that are not necessary to complete the task at hand.](./images/dialog-table-dont.png)\n\n</DoDont>\n</DoDontRow>\n\n## Accessibility\n\n### Focus\n\n1. Shift the focus into the dialog when triggered.\n2. After the dialog opens, initial focus should be set on the first focusable\n   element in the modal.\n3. For modal dialogs, the focus should be trapped inside the dialog and must not\n   move outside the modal until it is closed.\n4. After a modal dialog closes, focus should return to the element that invoked\n   the modal.\n\nReference\n[WCAG 2.4.3 Focus order success criterion](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-focus-order.html)\nfor additional guidelines.\n\n<DoDontRow>\n<DoDont\ncolMd={6} colLg={6}\ncaption=\"Do: after the dialog is opened, set focus to first focusable element.\">\n\n![Do: set focus to first focusable element.](./images/dialog-focus-do.png)\n\n</DoDont>\n<DoDont\ncolMd={6} colLg={6}\ntype=\"dont\"\ncaption=\"Don’t set the first focus on the dialog button if there are inputs or selection to be made in the dialog.\">\n\n![Don’t set the first focus on the dialog button if there are inputs or selection to be made in the dialog.](./images/dialog-focus-dont.png)\n\n</DoDont>\n</DoDontRow>\n\n### Keyboard navigation\n\n- `ESC`: close the dialog\n- `tab`: navigates the user to the different interactive elements\n- `space bar`: triggers the selected element\n- `enter`: triggers the selected element\n\n### Tab order\n\n1. First interactive element in the body area.\n2. Proceed left to right and top to bottom through the rest of the body\n   elements.\n3. Primary action\n4. Secondary action\n5. Close icon\n\n### ARIA\n\nSee WAI-ARIA Authoring Practices\n[Modal Dialog Example, Accessibility Features](https://www.w3.org/TR/wai-aria-practices-1.1/examples/dialog-modal/dialog.html)\nsection for best practices.\n\n## Related components and patterns\n\n<Row>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Components:\n\n- [Buttons](/components/button/usage)\n- [Modal](/components/modal/usage)\n- [Notification](/components/notification/usage)\n\n</Column>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Patterns:\n\n- [Forms](/patterns/forms-pattern)\n- [Notifications](/patterns/notification-pattern)\n\n</Column>\n</Row>\n\n## References\n\n- Apple Human Interface Guidelines,\n  [Modality](https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/modality/)\n  (2019)\n- Apple Human Interface Guidelines,\n  [Dialogs](https://developer.apple.com/design/human-interface-guidelines/macos/windows-and-views/dialogs/)\n  (2019)\n- Therese Fessenden,\n  [Modal & Nonmodal Dialogs: When (& When Not) to Use Them](https://www.nngroup.com/articles/modal-nonmodal-dialog/)\n  (Nielsen Norman Group, 2017)\n- James Jacobs,\n  [Modern Enterprise UI design — Part 2: Modal dialogs](https://medium.com/pulsar/modern-enterprise-ui-design-part-2-modal-dialogs-2ccd3cc33c92)\n  (2019)\n- Micosoft Docs,\n  [About Dialog Boxes](https://docs.microsoft.com/en-us/windows/win32/dlgbox/about-dialog-boxes)\n  (2019)\n- [Web Content Accessibility Guidelines](https://www.w3.org/WAI/standards-guidelines/wcag/)\n  (W3C, 2018)\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"34040ff278718f6b705fadfab34e7a15","counter":2991,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Dialogs","description":"A dialog is a “conversation” between the system and the user. It is prompted when the sytem needs input from the user or to give the user urgent information concerning their current workflow."},"exports":{},"rawBody":"---\ntitle: Dialogs\ndescription:\n  A dialog is a “conversation” between the system and the user. It is prompted\n  when the sytem needs input from the user or to give the user urgent\n  information concerning their current workflow.\n---\n\n<PageDescription>\n\nA dialog is a “conversation” between the system and the user. It is prompted\nwhen the system needs input from the user or to give the user urgent information\nconcerning their current workflow. There are two types of dialogs, modal and\nnon-modal.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Modal dialogs</AnchorLink>\n<AnchorLink>Non-modal dialogs</AnchorLink>\n<AnchorLink>Designing with dialogs</AnchorLink>\n<AnchorLink>Related components and patterns</AnchorLink>\n<AnchorLink>Accessibility</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nDialogs work best when used for short tasks or to alert the user to task\nrelevant information. Dialogs are useful in many scenarios; they are less\ndisorientating than navigating a user to a new page for simple tasks or\nknowledge gathering. However, dialogs are disruptive and can be distracting to\nthe user. Use them sparingly.\n\nA dialog is triggered by a user’s action, appears on top of the main page\ncontent, and is persistent until dismissed. The purpose of a dialog should be\nimmediately apparent to the user, with a clear and obvious path to completion.\n\n### Anatomy of a dialog\n\n<Row>\n<Column colLg={8}>\n\n![dialog anatomy](images/dialog-4.png)\n\n</Column>\n</Row>\n\n1. **Header:** Includes a title, optional label, and the close icon. The title\n   should be brief and clearly describe the dialogs’s task or purpose. Use the\n   optional label above the title set the context for the information in the\n   dialog.\n2. **Body:** Contains the information and/or controls needed to complete the\n   dialog’s task. It can include message text and components.\n3. **Actions:** The main actions needed to complete or cancel the dialog task.\n   [Button groupings](/patterns/dialog-pattern#buttons-groups) change based on\n   modal variant. Use descriptive words for the actions like Add, Delete, Save\n   and avoid vague words like Done or OK.\n4. **x:** The close `x` icon will close the dialog without submitting any data.\n5. **Overlay:** (Modal dialogs only) Screen overlay that obscures the on page\n   content.\n\n### When to use a dialog\n\n- Use to focus the user’s attention.\n- Use for short task completion.\n- Use to gather input from the user.\n- Use to display relevant information.\n\n### When not to use a dialog\n\n- Don’t use if the content is unrelated to the current workflow.\n- Don’t use to display complex or large amounts of data.\n- Don’t recreate a full app or page in a dialog.\n- Don’t use when the user hasn’t triggered the dialog.\n\n### Dialog types\n\nThere are two types of dialogs, modal and non-modal.\n\nA _modal_ dialog triggers a state (or mode) that focuses the user’s attention\nexclusively on one task or piece of relevant information. When a modal dialog is\nactive, the content of the underneath page is obscured and inaccessible until\nthe user completes the task or dismisses the modal.\n\nWhen a _non-modal_ dialog is active the user can continue viewing and\ninteracting with the main page while the dialog is open. Non-modal dialogs are\ncommonly used to present non-critical information or optional user tasks.\n\n| Type      | Usage                                                                                        | Context                                                                                                                                                |\n| --------- | -------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Modal     | Use to present critical information or request required input needed to complete a workflow. | Focuses the users attention exclusively on one task or piece of information. On-page content is obscured from the user while the modal dialog is open. |\n| Non-modal | Use to present non-critical information or optional user tasks.                              | On-page content can be accessed and interacted with while the dialog is still open.                                                                    |\n\n<Row>\n<Column colLg={8}>\n\n![dialog examples](images/dialog-1.png)\n\n</Column>\n</Row>\n\n<Caption>Modal dialog (left) and non-modal dialog (right)</Caption>\n\n### Best practices\n\n#### Use dialogs sparingly\n\nDon’t overuse dialogs. They are disruptive and can easily annoy the user if used\nincorrectly or too frequently. When dialogs are used for non-workflow related\ntasks, it is likely a user will start ignoring or dismissing the dialogs without\nfully understanding the content. This can cause users to make hurried or\nimpulsive choices when dealing with more critical dialogs.\n\n#### Dialogs should be user initiated\n\nA user action, such as clicking a button, should trigger the dialog to open.\nDon’t interrupt the user by opening a dialog when they aren’t expecting it.\nAvoid system generated pop-ups that distract the user while working, such as Net\nPromoter Score. Triggers can either be a direct or indirect consequence of a\nuser’s action. An example of an indirect action is a user closing a tab with\nunsaved content that then causes a dialog to ask if they want to save their\nchanges before closing. If the system is autogenerating an alert that is not a\nconsequence of a user’s action, but a response to processes happening in the\nbackground, then a toast notification should be used instead.\n\n#### Keep dialog tasks simple and focused\n\nDialog tasks should be direct and easy to complete. Avoid feature creep in\ndialogs where a once simple dialog has become bloated with interactions. When\ndeciding to use a dialog consider how the task could expanded in the future and\nif a dialog will be able to effectively incorporate additions. An example of a\nsimple task would adding a new item to a list where the item details are added\nand submitted via a dialog.\n\n## Modal dialogs\n\nUse a modal dialog to present critical information or request user input needed\nto complete a user’s workflow. Modal dialogs are disruptive and should be used\nsparingly. When active, a user is blocked from the on-page content and cannot\nreturn to their previous workflow until the modal task is completed or the user\ndismisses the modal. Any information or input requested should be directly\nrelated to the user’s task at hand.\n\nModal dialogs are commonly used for short and non-frequent tasks, such as\nediting or management tasks. If a user needs to repeatedly perform a task,\nconsider making the task do-able from the main page. A modal dialog adds to a\nworkflow’s interaction cost; it takes the user out of their previous context and\nrequires additional actions to complete and dismiss. When considering, ask is\nthis critical to their current workflow?\n\n<Row>\n<Column colLg={8}>\n\n![modal dialog example](images/dialog-2.png)\n\n</Column>\n</Row>\n\n### When to use\n\n#### An immediate response is required from the user\n\nUse a dialog to request information that is preventing the system from\ncontinuing a user-initiated process.\n\n#### Notify the user of urgent information\n\nUse a modal dialog to notify the user of urgent information concerning their\ncurrent work. Commonly used to report system errors or convey a consequence of a\nuser’s action.\n\n#### Confirm a user decision\n\nUse a modal dialog to confirm user decisions. Clearly describe the action being\nconfirmed and explain any potential consequences that it may cause. Both the\ntitle and the button should reflect the action that will occur. If the action is\ndestructive or irreversible then use a transactional danger modal.\n\n### When not to use\n\n#### Modals prevent access to the main page\n\nDon’t use if additional information outside the modal needs to be consulted.\nWhile a modal dialog is active a user cannot interact with the main page and is\nrestricted to only the information in the modal for making decisions. Modal\ntasks should be easy to complete with the limited information presented in the\ndialog itself. If a user needs access to additional information then consider\nusing a full page instead.\n\n#### Don’t nest modals\n\nOne modal should never trigger another modal. If the first modal task is\ndependent on a confirmation modal to approve then that first task should not be\npreformed in a modal.\n\n#### Don’t make modals full page\n\nIf a modal dialog needs more space than the large modal component allows then\nthe content should be displayed on a page of its own and not in a modal. A modal\nis not an alternative to page.\n\n### Modal variants\n\n<Row>\n<Column colLg={8}>\n\n![modal dialog variants](images/dialog-3.png)\n\n</Column>\n</Row>\n\n| Variant                                                        | Usage                                                                                                                           |\n| -------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| [Passive](/components/modal/usage#passive-modal)               | Presents information the user needs to be aware of concerning their current workflow. Contains no actions for the user to take. |\n| [Transactional](/components/modal/usage#transactional-modal)   | Requires an action to be taken in order for the modal to be completed and closed. Contains a cancel and primary action buttons. |\n| [Acknowledgment](/components/modal/usage#acknowledgment-modal) | System requires an acknowledgement of the information from the user. Contains only a single button, commonly \"OK\".              |\n| [Progress](/components/modal/usage/#progress-modal)            | Requires several steps to be completed before it can be closed. Contains a cancel, previous and next/completion buttons.        |\n\n### Dismissing variant modals\n\nFor passive modals:\n\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Click elsewhere**: Clicking outside the passive modal area will\n  automatically close the modal.\n- **Esc**: Press `ESC` on the keyboard\n\nFor transactional, progress, and acknowledgement modals:\n\n- **Task completion**: clicking the primary action will complete the task and\n  automatically close the modal.\n- **Cancel button**: clicking the cancel button will close the modal and return\n  the user to its previous context. Cancel undoes all applied changes.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Esc**: Press `ESC` on the keyboard\n\n## Non-modal dialogs\n\nUse non-modal dialogs to display non-critical information or optional tasks\nrelated to the user’s current workflow, like \"find and replace\". A user still\nhas access to the on-page content while the non-modal dialog is open and a\nresponse is not required to continue working. However, a non-modal dialog does\nrequire an action from the user to be dismissed.\n\n<Row>\n<Column colLg={8}>\n\n![non-modal example](images/dialog-modeless.png)\n\n</Column>\n</Row>\n\n<br />\n\n### When to use\n\n#### When access to the page is needed\n\nUse when a user needs to compare or refer to information in the main page\nalongside the modal. users can interact with the non-modal content and the\non-page content simultaneously.\n\nA non-modal dialog window can be moved from its original placement on the\nscreen. This allows the user to access information that might otherwise be\nhidden by the dialog.\n\n#### Aid or accelerate a user’s work flow\n\nUse to perform tasks or present informational along side the main page content\nthat can accelerate or aid a user’s workflow. For example, a \"find and replace\"\ndialog can help a user perform and automate edits quicker. The user can chose to\nautomate the changes or navigate through the page by using the \"find\" feature\nand manually make updates.\n\n#### Display additional information\n\nUse to display additional information that can help inform a user’s decision or\nworkflow. For example, use for incontext help or tutorials such as a knowledge\ncenter.\n\n### When not to use\n\n#### Don’t use if the user’s response is required\n\nUse for optional or non-critical tasks only. If a user’s response or input is\nrequired to progress the workflow, use a modal dialog.\n\n### Non-modal variants\n\n| Name          | Description                                                                                                                 |\n| ------------- | --------------------------------------------------------------------------------------------------------------------------- |\n| Passive       | Presents additional information concerning the user’s current workflow. Contains no actions for the user to take.           |\n| Transactional | Presents the user with optional action/s. Actions can be repeated without closing the dialog. Contains at least one button. |\n\n### Dismissing non-modal dialogs\n\nThere are several possible ways to exit a non-modal dialog.\n\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data.\n- **Cancel button**: If a cancel button is used then clicking it will close the\n  modal. Cancel undoes all applied changes.\n- **Esc**: Press `ESC` on the keyboard\n\n## Designing with dialogs\n\n### Button groups\n\nWhen placing buttons, Cancel is always the outmost left button option and the\nprimary action is always the outmost right button. There should only ever be one\nprimary action per dialog. Dialog buttons are always full bleed and attached to\nthe bottom of a dialog.\n\n<Row>\n<Column colLg={8}>\n\n![button grouping examples](images/dialog-5.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Button groups: one button, two buttons, three buttons, and progress buttons.\n</Caption>\n\n#### One button\n\nSingle buttons are placed on the right side, span 50% of the dialog, and bleed\nto the edge. The single button format is most commonly used for acknowledgment\ndialogs. In most scenarios, a primary button is used when only one button is\nneeded.\n\n#### Two buttons\n\nWhen using two buttons, the secondary button is on the left and the primary\nbutton is placed on the right. Each button spans 50% of the dialog and are full\nbleed to the edge.\n\n#### Three buttons\n\nWhen three buttons are needed, each is 25% of the dialog width and aligned to\nthe right side of the dialog. Only the outmost right button is allowed to be a\nprimary button with the other two being secondary buttons. If all three actions\nhave the same weight then all three should be secondary buttons.\n\n#### Progress indicator buttons\n\nThe three progress indicator buttons are: Cancel, Previous, Next. Each button’s\nwidth is 25% of the dialog window and are full bleed. Previous and Next should\nbe grouped together and placed on the right half of the dialog, with Previous as\na secondary button and Next as a primary button. The Cancel button is aligned to\nleft side of the dialog and uses a ghost button.\n\nIn the last step of the sequence, the Next button label should change to reflect\nthe final action.\n\n### Behaviors\n\n#### Trigger\n\nDialogs are triggered as a result of a user’s action and are not system\ngenerated. Common components that can trigger a dialog include, button, link, or\nicon.\n\n#### Focus\n\nOnce the dialog is open, set the initial focus to the first location that\naccepts user input. Focus should then remain trapped in the dialog until it is\nclosed.\n\n#### Scrolling\n\nThe modal component has four set sizes and each size has a set max-height. If\nthe dialog content is longer than the dialog height then the body section should\nscroll vertically with the header and footer remaining fixed in place.\n\n#### Validation\n\nValidate a user’s entries before the dialog is closed. If any entry is invalid\nthen the dialog should remain open with the entry marked with an error state and\ninclude an inline error message. The message should inform the user what has\nhappened and provide guidance on next steps or possible resolutions. Effective\nand immediate error messaging can help the user to understand the problem and\nhow to fix it.\n\nWhen possible, we recommend validating the user’s data before submission. This\ntype of inline validation (aka\n[client-side validation](/patterns/forms-pattern#errors-and-validation)) should\nhappen as soon as the field loses focus. This will help easily identify the\nelements that need to be corrected. On field error messages should disappear\nwhen the form criteria is met. If the data was not able to be submitted due to\nserver-side issues then an inline notification should appear.\n\nDecrease the chances of invalid data by using selection controls and bound entry\ncontrols components that provide users with specific input choices, for example\nradio buttons and dropdowns.\n\n<Row>\n<Column colLg={8}>\n\n![Invalid example](images/dialog-validate.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Real-time validation. The user has left the first required field empty.{' '}\n</Caption>\n\n#### Task completion and loading\n\nThe task completion action should take place immediately. If a short loading\nperiod is needed then a loading spinner and overlay should appear on top of the\nmodal body area with content disabled. The primary action button should be\ndisabled while loading is in progress.\n\nIf the action requires more than a few seconds to complete, display progress\ninformation elsewhere on the screen to inform the user how long it will take to\ncomplete.\n\n<Row>\n<Column colLg={8}>\n\n![loading example](images/dialog-loading.png)\n\n</Column>\n</Row>\n\n### Using components\n\nAppropriate components to use in a dialog include form inputs and controls that\naid in collecting information from the user. Other components like content\nswitcher and structured list can be used to organize information. When possible,\navoid using complex components that can complicate task completion or prolong a\nuser’s time in the modal. A user’s journey through the modal should be direct\nand short.\n\n#### Avoid components that will direct the user away from the dialog\n\nAvoid components like links that will take the user away from the current\ncontext and the task at hand. A dialog’s purpose is to focus the user’s\nattention on a particular task and should not encourage any action that is not\nrelated to that task’s completion.\n\n#### Avoid components that hide information\n\nWhen possible avoid components that hide information or choices from the\nuser—like accordion and tabs—and require additional effort from the user to\ndiscover all the available content. Time spent in a modal should be minimal and\nonly information needed to complete the task should be included. If there is too\nmuch information for a user to consume in a dialog context, consider using a\nfull page instead.\n\n#### Avoid complex interactions with data tables\n\nWhen possible avoid using a data table in a dialog as it is a complex component\nwith its own workflow and decision making that can overly complicate a user’s\nchoice and task completion in relation to the dialog. If a data table is\nnecessary then the tables should be kept as simple as possible with limited\ninteractions. For example, you can use data table to make selections that will\nbe incurred by the dialogs action but avoid preforming table functions like\nbatch editing or batch actions inside the modal itself. For smaller sets of data\nor selections consider using a structured list, dropdown, or tile set instead.\n\n<DoDontRow>\n<DoDont\ncolMd={6} colLg={6}\ncaption=\"Do: keep data table interaction simple.\">\n\n![Do: keep data table interaction simple.](./images/dialog-table-do.png)\n\n</DoDont>\n<DoDont\ncolMd={6} colLg={6}\ntype=\"dont\"\ncaption=\"Don’t include complex interactions in data tables that are not necessary to complete the task at hand.\">\n\n![Don’t include complex interactions in data tables that are not necessary to complete the task at hand.](./images/dialog-table-dont.png)\n\n</DoDont>\n</DoDontRow>\n\n## Accessibility\n\n### Focus\n\n1. Shift the focus into the dialog when triggered.\n2. After the dialog opens, initial focus should be set on the first focusable\n   element in the modal.\n3. For modal dialogs, the focus should be trapped inside the dialog and must not\n   move outside the modal until it is closed.\n4. After a modal dialog closes, focus should return to the element that invoked\n   the modal.\n\nReference\n[WCAG 2.4.3 Focus order success criterion](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-focus-order.html)\nfor additional guidelines.\n\n<DoDontRow>\n<DoDont\ncolMd={6} colLg={6}\ncaption=\"Do: after the dialog is opened, set focus to first focusable element.\">\n\n![Do: set focus to first focusable element.](./images/dialog-focus-do.png)\n\n</DoDont>\n<DoDont\ncolMd={6} colLg={6}\ntype=\"dont\"\ncaption=\"Don’t set the first focus on the dialog button if there are inputs or selection to be made in the dialog.\">\n\n![Don’t set the first focus on the dialog button if there are inputs or selection to be made in the dialog.](./images/dialog-focus-dont.png)\n\n</DoDont>\n</DoDontRow>\n\n### Keyboard navigation\n\n- `ESC`: close the dialog\n- `tab`: navigates the user to the different interactive elements\n- `space bar`: triggers the selected element\n- `enter`: triggers the selected element\n\n### Tab order\n\n1. First interactive element in the body area.\n2. Proceed left to right and top to bottom through the rest of the body\n   elements.\n3. Primary action\n4. Secondary action\n5. Close icon\n\n### ARIA\n\nSee WAI-ARIA Authoring Practices\n[Modal Dialog Example, Accessibility Features](https://www.w3.org/TR/wai-aria-practices-1.1/examples/dialog-modal/dialog.html)\nsection for best practices.\n\n## Related components and patterns\n\n<Row>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Components:\n\n- [Buttons](/components/button/usage)\n- [Modal](/components/modal/usage)\n- [Notification](/components/notification/usage)\n\n</Column>\n<Column colSm={2} colMd={2} colLg={4}>\n\n#### Patterns:\n\n- [Forms](/patterns/forms-pattern)\n- [Notifications](/patterns/notification-pattern)\n\n</Column>\n</Row>\n\n## References\n\n- Apple Human Interface Guidelines,\n  [Modality](https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/modality/)\n  (2019)\n- Apple Human Interface Guidelines,\n  [Dialogs](https://developer.apple.com/design/human-interface-guidelines/macos/windows-and-views/dialogs/)\n  (2019)\n- Therese Fessenden,\n  [Modal & Nonmodal Dialogs: When (& When Not) to Use Them](https://www.nngroup.com/articles/modal-nonmodal-dialog/)\n  (Nielsen Norman Group, 2017)\n- James Jacobs,\n  [Modern Enterprise UI design — Part 2: Modal dialogs](https://medium.com/pulsar/modern-enterprise-ui-design-part-2-modal-dialogs-2ccd3cc33c92)\n  (2019)\n- Micosoft Docs,\n  [About Dialog Boxes](https://docs.microsoft.com/en-us/windows/win32/dlgbox/about-dialog-boxes)\n  (2019)\n- [Web Content Accessibility Guidelines](https://www.w3.org/WAI/standards-guidelines/wcag/)\n  (W3C, 2018)\n\n## Feedback\n\nHelp us improve this pattern by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/patterns/dialog-pattern/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}