{"componentChunkName":"component---src-pages-guidelines-spacing-overview-mdx","path":"/guidelines/spacing/overview/","result":{"pageContext":{"frontmatter":{"label":"Spacing is an important — and often overlooked — part of visual design. Carbon takes a lot of the guesswork out of spacing to help designers deliver clear, functional layouts.","title":"Spacing","description":"Spacing is an important — and often overlooked — part of visual design. Carbon takes a lot of the guesswork out of spacing to help designers deliver clear, functional layouts.","tabs":["Overview","Code"]},"relativePagePath":"/guidelines/spacing/overview.mdx","titleType":"prepend","MdxNode":{"id":"3fe54a74-1773-514a-986c-a924f0aea500","children":[],"parent":"7dcc0ee1-79b3-5104-a4ef-d06ca06e4815","internal":{"content":"---\nlabel:\n  Spacing is an important — and often overlooked — part of visual design. Carbon\n  takes a lot of the guesswork out of spacing to help designers deliver clear,\n  functional layouts.\ntitle: Spacing\ndescription:\n  Spacing is an important — and often overlooked — part of visual design. Carbon\n  takes a lot of the guesswork out of spacing to help designers deliver clear,\n  functional layouts.\ntabs: ['Overview', 'Code']\n---\n\n<PageDescription>\n\nSpacing is an important — and often overlooked — part of visual design. Carbon\ntakes a lot of the guesswork out of spacing to help designers deliver clear,\nfunctional layouts.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Carbon’s two scales</AnchorLink>\n<AnchorLink>Spacing scale</AnchorLink>\n<AnchorLink>Layout scale</AnchorLink>\n<AnchorLink>Designing with space</AnchorLink>\n<AnchorLink>FAQ</AnchorLink>\n\n</AnchorLinks>\n\n## Carbon's two scales\n\nCarbon has two spacing scales; one for general spacing within components and the\nother for layout spacing. Both are designed to complement the existing\ncomponents and typography throughout the system. The two scales have certain\noverlapping values that serve two different roles, so be mindful when picking a\nspacing token.\n\n| Scale           | Purpose                                                                                                                                         |     |\n| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| _Spacing scale_ | Used for smaller, more refined spacing needs, specifically within the context of a component (i.e. the space between a label and a text input). |     |\n| _Layout scale_  | Typically used for positioning components on a page (i.e., the space between a text field and a selector).                                      |     |\n\n### Applying spacing\n\nBoth the _spacing_ and the _layout_ scales can be applied to `margin` or\n`padding` properties. Likewise, these spacing tokens can be applied to both\nvertical and horizontal edges. The token takes the place of the values normally\nassigned to `margin` and `padding`. The following are all approved ways to\nsyntactically apply Carbon spacing tokens:\n\n```css\nmargin: $spacing-03;\nmargin: $layout-03 $layout-01;\nmargin: $spacing-07 0 $spacing-04 0;\nmargin-right: $layout-05;\npadding: $spacing-04;\npadding: $layout-05 $layout-03;\npadding: $spacing-07 $spacing-04 0 $spacing-04;\n```\n\n## Spacing scale\n\nUse the spacing scale when building individual components. It includes small\nincrements needed to create appropriate spatial relationships for detail-level\ndesigns. This scale is applied and used within all Carbon components.\n\n<div className=\"spacing-table\">\n\n| Token         | rem   | px  | Example                                       |\n| ------------- | ----- | --- | --------------------------------------------- |\n| `$spacing-01` | 0.125 | 2   | ![spacing-3xs example](images/spacing-3.svg)  |\n| `$spacing-02` | 0.25  | 4   | ![spacing-2xs example](images/spacing-4.svg)  |\n| `$spacing-03` | 0.5   | 8   | ![spacing-xs example](images/spacing-5.svg)   |\n| `$spacing-04` | 0.75  | 12  | ![spacing-sm example](images/spacing-6.svg)   |\n| `$spacing-05` | 1     | 16  | ![spacing-md example](images/spacing-7.svg)   |\n| `$spacing-06` | 1.5   | 24  | ![spacing-lg example](images/spacing-8.svg)   |\n| `$spacing-07` | 2     | 32  | ![spacing-xl example](images/spacing-9.svg)   |\n| `$spacing-08` | 2.5   | 40  | ![spacing-2xl example](images/spacing-10.svg) |\n| `$spacing-09` | 3     | 48  | ![spacing-3xl example](images/spacing-11.svg) |\n\n</div>\n\n<br />\n\n<Row>\n<Column colLg={8}>\n\n![Example of spacing tokens applied](images/spacing-1_revised.png)\n\n<Caption>Example of spacing tokens applied</Caption>\n\n</Column>\n</Row>\n\n### Other spacing options\n\nThere are a few other non-token methods that can be used for spacing elements.\nEach has its own unique use case.\n\n| Method   | Purpose                                                                                                                                                           |     |\n| -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| `center` | Used to fluidly center an element between two edges.                                                                                                              |     |\n| `auto`   | Used on one side of an element to allow undefined space to automatically grow and shrink according to screen size. Typically used for asymmetrical fluid spacing. |     |\n| `gutter` | Used to space items between the grid's 12 columns                                                                                                                 |     |\n\n## Layout scale\n\nThe layout scale is used for arranging components and other UI parts into a full\npage layout. It has larger increments that are used to control the density of a\ndesign. Use the smaller layout tokens to create more dense compositions and\ndirect relationships. Use the larger tokens to increase the amount of white\nspace and to disassociate sections.\n\n<div className=\"spacing-table\">\n\n| Token        | rem | px  | Example                                      |\n| ------------ | --- | --- | -------------------------------------------- |\n| `$layout-01` | 1   | 16  | ![layout-2xs example](images/spacing-12.svg) |\n| `$layout-02` | 1.5 | 24  | ![layout-xs example](images/spacing-13.svg)  |\n| `$layout-03` | 2   | 32  | ![layout-sm example](images/spacing-14.svg)  |\n| `$layout-04` | 3   | 48  | ![layout-md example](images/spacing-15.svg)  |\n| `$layout-05` | 4   | 64  | ![layout-lg example](images/spacing-16.svg)  |\n| `$layout-06` | 6   | 96  | ![layout-xl example](images/spacing-17.svg)  |\n| `$layout-07` | 10  | 160 | ![layout-2xl example](images/spacing-18.svg) |\n\n</div>\n\n<br />\n\n![Example of layout tokens applied](images/layout_revised.png)\n\n<Caption>Example of layout tokens applied</Caption>\n\n### Using layout scale with the grid\n\nThe Carbon grid is the encouraged way to horizontally space UI elements. The\nlayout scale is most commonly used for vertical spacing, but it can also be\napplied for horizontal spacing when appropriate, especially in the case of fixed\nspacing.\n\n## Designing with space\n\nEvery part of a UI should be intentional including the empty space between\nelements. The amount of space between items creates relationships and hierarchy.\n\n### Creating relationships\n\nElements in a design that are near each other are seen as being meaningfully\nrelated. As more space is added between elements, their perceived relationship\nweakens.\n\nPatterns created through spacing can also create relationships. Elements\narranged in the same spacing pattern are seen as related pieces that have equal\nweight.\n\nSpace can also be used to denote groups of associated information. This creates\ncontent sections on a page without having to use lines or other graphical\nelements as a divider.\n\n### Creating hierarchy\n\nElements that have more spacing around them tend to be perceived as higher in\nimportance than elements that have less space around them. Take this page for\ninstance. The top level headers have more space surrounding them giving them\nfocus and prominence. Then as the headers descend in importance they receive\nless space, signaling they are subordinate.\n\nElements that are set close to each other can be easily overlooked. Users may\nsee the grouping but not process each individual item. Therefore, if you have an\nelement or content of high importance on the page, consider giving it extra\nsurrounding space to help it attract focus.\n\n### White space\n\nEmpty space — also known as white space — is important in design. It can be used\nto break up sections on a page or to help create focus on certain element(s).\nWhite space helps with information processing; too much dense information can be\ndisorienting or overwhelming for a user. Sections of a UI are allowed to be\ndense, but the whole page should not be crowded; there should be white space to\nlet the user’s eye rest.\n\n## FAQ\n\n#### Are spacing increments outside of the scale allowed?\n\nThere are always exceptions to the rule, but deviating from the spacing scales\nshould be avoided whenever possible.\n\n#### Can I still use the Carbon grid for horizontal spacing?\n\nYes, in fact it's encouraged.\n\n#### Can I still use percentages for spacing?\n\nPercentages like 50% (1/2) or 33% (1/3) are still acceptable ways to divide a\npage. Percentages can all still be used to control max and min widths. However,\nusing percentages for padding or margin inside of a component or element should\nbe avoided (ex. `padding-right: 10%`). The exception to this is if you’re\napplying it to fit the 5% grid margins.\n\n#### Are the spacing tokens responsive?\n\nNo, the tokens themselves do not change values based on the screen size.\nHowever, it is acceptable at page breakpoints to jump a step(s) on the spacing\nscale to fit spacing needs (i.e., at 1440 px `padding-right: $spacing-05` but at\nbreakpoint 768px `padding-right: $spacing-03`).\n","type":"Mdx","contentDigest":"bfc785377975839ff42b54277b4068de","counter":3006,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Spacing","label":"Spacing is an important — and often overlooked — part of visual design. Carbon takes a lot of the guesswork out of spacing to help designers deliver clear, functional layouts.","description":"Spacing is an important — and often overlooked — part of visual design. Carbon takes a lot of the guesswork out of spacing to help designers deliver clear, functional layouts.","tabs":["Overview","Code"]},"exports":{},"rawBody":"---\nlabel:\n  Spacing is an important — and often overlooked — part of visual design. Carbon\n  takes a lot of the guesswork out of spacing to help designers deliver clear,\n  functional layouts.\ntitle: Spacing\ndescription:\n  Spacing is an important — and often overlooked — part of visual design. Carbon\n  takes a lot of the guesswork out of spacing to help designers deliver clear,\n  functional layouts.\ntabs: ['Overview', 'Code']\n---\n\n<PageDescription>\n\nSpacing is an important — and often overlooked — part of visual design. Carbon\ntakes a lot of the guesswork out of spacing to help designers deliver clear,\nfunctional layouts.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Carbon’s two scales</AnchorLink>\n<AnchorLink>Spacing scale</AnchorLink>\n<AnchorLink>Layout scale</AnchorLink>\n<AnchorLink>Designing with space</AnchorLink>\n<AnchorLink>FAQ</AnchorLink>\n\n</AnchorLinks>\n\n## Carbon's two scales\n\nCarbon has two spacing scales; one for general spacing within components and the\nother for layout spacing. Both are designed to complement the existing\ncomponents and typography throughout the system. The two scales have certain\noverlapping values that serve two different roles, so be mindful when picking a\nspacing token.\n\n| Scale           | Purpose                                                                                                                                         |     |\n| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| _Spacing scale_ | Used for smaller, more refined spacing needs, specifically within the context of a component (i.e. the space between a label and a text input). |     |\n| _Layout scale_  | Typically used for positioning components on a page (i.e., the space between a text field and a selector).                                      |     |\n\n### Applying spacing\n\nBoth the _spacing_ and the _layout_ scales can be applied to `margin` or\n`padding` properties. Likewise, these spacing tokens can be applied to both\nvertical and horizontal edges. The token takes the place of the values normally\nassigned to `margin` and `padding`. The following are all approved ways to\nsyntactically apply Carbon spacing tokens:\n\n```css\nmargin: $spacing-03;\nmargin: $layout-03 $layout-01;\nmargin: $spacing-07 0 $spacing-04 0;\nmargin-right: $layout-05;\npadding: $spacing-04;\npadding: $layout-05 $layout-03;\npadding: $spacing-07 $spacing-04 0 $spacing-04;\n```\n\n## Spacing scale\n\nUse the spacing scale when building individual components. It includes small\nincrements needed to create appropriate spatial relationships for detail-level\ndesigns. This scale is applied and used within all Carbon components.\n\n<div className=\"spacing-table\">\n\n| Token         | rem   | px  | Example                                       |\n| ------------- | ----- | --- | --------------------------------------------- |\n| `$spacing-01` | 0.125 | 2   | ![spacing-3xs example](images/spacing-3.svg)  |\n| `$spacing-02` | 0.25  | 4   | ![spacing-2xs example](images/spacing-4.svg)  |\n| `$spacing-03` | 0.5   | 8   | ![spacing-xs example](images/spacing-5.svg)   |\n| `$spacing-04` | 0.75  | 12  | ![spacing-sm example](images/spacing-6.svg)   |\n| `$spacing-05` | 1     | 16  | ![spacing-md example](images/spacing-7.svg)   |\n| `$spacing-06` | 1.5   | 24  | ![spacing-lg example](images/spacing-8.svg)   |\n| `$spacing-07` | 2     | 32  | ![spacing-xl example](images/spacing-9.svg)   |\n| `$spacing-08` | 2.5   | 40  | ![spacing-2xl example](images/spacing-10.svg) |\n| `$spacing-09` | 3     | 48  | ![spacing-3xl example](images/spacing-11.svg) |\n\n</div>\n\n<br />\n\n<Row>\n<Column colLg={8}>\n\n![Example of spacing tokens applied](images/spacing-1_revised.png)\n\n<Caption>Example of spacing tokens applied</Caption>\n\n</Column>\n</Row>\n\n### Other spacing options\n\nThere are a few other non-token methods that can be used for spacing elements.\nEach has its own unique use case.\n\n| Method   | Purpose                                                                                                                                                           |     |\n| -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| `center` | Used to fluidly center an element between two edges.                                                                                                              |     |\n| `auto`   | Used on one side of an element to allow undefined space to automatically grow and shrink according to screen size. Typically used for asymmetrical fluid spacing. |     |\n| `gutter` | Used to space items between the grid's 12 columns                                                                                                                 |     |\n\n## Layout scale\n\nThe layout scale is used for arranging components and other UI parts into a full\npage layout. It has larger increments that are used to control the density of a\ndesign. Use the smaller layout tokens to create more dense compositions and\ndirect relationships. Use the larger tokens to increase the amount of white\nspace and to disassociate sections.\n\n<div className=\"spacing-table\">\n\n| Token        | rem | px  | Example                                      |\n| ------------ | --- | --- | -------------------------------------------- |\n| `$layout-01` | 1   | 16  | ![layout-2xs example](images/spacing-12.svg) |\n| `$layout-02` | 1.5 | 24  | ![layout-xs example](images/spacing-13.svg)  |\n| `$layout-03` | 2   | 32  | ![layout-sm example](images/spacing-14.svg)  |\n| `$layout-04` | 3   | 48  | ![layout-md example](images/spacing-15.svg)  |\n| `$layout-05` | 4   | 64  | ![layout-lg example](images/spacing-16.svg)  |\n| `$layout-06` | 6   | 96  | ![layout-xl example](images/spacing-17.svg)  |\n| `$layout-07` | 10  | 160 | ![layout-2xl example](images/spacing-18.svg) |\n\n</div>\n\n<br />\n\n![Example of layout tokens applied](images/layout_revised.png)\n\n<Caption>Example of layout tokens applied</Caption>\n\n### Using layout scale with the grid\n\nThe Carbon grid is the encouraged way to horizontally space UI elements. The\nlayout scale is most commonly used for vertical spacing, but it can also be\napplied for horizontal spacing when appropriate, especially in the case of fixed\nspacing.\n\n## Designing with space\n\nEvery part of a UI should be intentional including the empty space between\nelements. The amount of space between items creates relationships and hierarchy.\n\n### Creating relationships\n\nElements in a design that are near each other are seen as being meaningfully\nrelated. As more space is added between elements, their perceived relationship\nweakens.\n\nPatterns created through spacing can also create relationships. Elements\narranged in the same spacing pattern are seen as related pieces that have equal\nweight.\n\nSpace can also be used to denote groups of associated information. This creates\ncontent sections on a page without having to use lines or other graphical\nelements as a divider.\n\n### Creating hierarchy\n\nElements that have more spacing around them tend to be perceived as higher in\nimportance than elements that have less space around them. Take this page for\ninstance. The top level headers have more space surrounding them giving them\nfocus and prominence. Then as the headers descend in importance they receive\nless space, signaling they are subordinate.\n\nElements that are set close to each other can be easily overlooked. Users may\nsee the grouping but not process each individual item. Therefore, if you have an\nelement or content of high importance on the page, consider giving it extra\nsurrounding space to help it attract focus.\n\n### White space\n\nEmpty space — also known as white space — is important in design. It can be used\nto break up sections on a page or to help create focus on certain element(s).\nWhite space helps with information processing; too much dense information can be\ndisorienting or overwhelming for a user. Sections of a UI are allowed to be\ndense, but the whole page should not be crowded; there should be white space to\nlet the user’s eye rest.\n\n## FAQ\n\n#### Are spacing increments outside of the scale allowed?\n\nThere are always exceptions to the rule, but deviating from the spacing scales\nshould be avoided whenever possible.\n\n#### Can I still use the Carbon grid for horizontal spacing?\n\nYes, in fact it's encouraged.\n\n#### Can I still use percentages for spacing?\n\nPercentages like 50% (1/2) or 33% (1/3) are still acceptable ways to divide a\npage. Percentages can all still be used to control max and min widths. However,\nusing percentages for padding or margin inside of a component or element should\nbe avoided (ex. `padding-right: 10%`). The exception to this is if you’re\napplying it to fit the 5% grid margins.\n\n#### Are the spacing tokens responsive?\n\nNo, the tokens themselves do not change values based on the screen size.\nHowever, it is acceptable at page breakpoints to jump a step(s) on the spacing\nscale to fit spacing needs (i.e., at 1440 px `padding-right: $spacing-05` but at\nbreakpoint 768px `padding-right: $spacing-03`).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/guidelines/spacing/overview.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}