{"componentChunkName":"component---src-pages-guidelines-color-code-mdx","path":"/guidelines/color/code/","result":{"pageContext":{"frontmatter":{"title":"Color","description":"Maintaining consistent and engaging digital interfaces throughout IBM, whether applications or experiences, demands extended guidance around color usage.","tabs":["Overview","Usage","Code"]},"relativePagePath":"/guidelines/color/code.mdx","titleType":"prepend","MdxNode":{"id":"7a0ecf7c-dba0-5423-bd05-6e60c7d3394e","children":[],"parent":"8e937f95-033d-562a-8e4f-9399d50f5344","internal":{"content":"---\ntitle: Color\ndescription:\n  Maintaining consistent and engaging digital interfaces throughout IBM, whether\n  applications or experiences, demands extended guidance around color usage.\ntabs: ['Overview', 'Usage', 'Code']\n---\n\n<PageDescription>\n\nThe Carbon color package helps teams build engaging digital experiences through\nconsistent application of color.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you’re using carbon-components there’s no reason to install the color package\nseparately. See our [get started](/get-started/develop/react) guide to start\nbuilding.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Getting started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Getting started\n\nTo install `@carbon/colors` in your project, you will need to run the following\ncommand using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/colors\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/colors\n```\n\n## Usage\n\nYou can use the `@carbon/colors` module in your JavaScript, in addition to your\nSass.\n\n### Sass\n\nIn Sass, you can import the files individual by doing:\n\n```scss\n@import '@carbon/colors/scss/colors';\n```\n\nThis file automatically includes the `carbon--colors` mixin which initializes\nall the color variables for the IBM Design Language.\n\nThese color variables follow the naming convention: `$carbon--<swatch>-<grade>`.\nFor example:\n\n```scss\n$carbon--blue-50;\n$carbon--cool-gray-10;\n$carbon--black-100;\n$carbon--white-0;\n```\n\nYou can also use the shorthand form of these colors by dropping the `carbon--`\nnamespace:\n\n```scss\n$blue-50;\n$cool-gray-10;\n$black-100;\n$white-0;\n```\n\n_Note: the shorthand variables require that you do not have any other\nconflicting variables in your setup. Namespaced variables are always preferred\nfor this reason, unless you are confident that no collisions will occur._\n\nIf you would like you choose when these variables are defined, then you can call\nthe `carbon--colors` mixin directly by importing the following file:\n\n```scss\n@import '@carbon/colors/scss/mixins';\n\n// ...\n@include carbon--colors();\n```\n\nAlongside the color variables detailed above, we also provide a map of colors so\nthat you can programmatically use these values. This map is called\n`$carbon--colors` and each key is the name of a swatch. The value of these\nswatches is also a map, but each key is now the grade. In code, this looks like\nthe following:\n\n<!-- prettier-ignore-start -->\n\n```scss\n$carbon--colors: (\n  'blue': (\n    10: #edf4ff,\n    // ...\n  )\n);\n```\n\n<!-- prettier-ignore-end -->\n\nYou can include this variable by including `@carbon/colors/scss/colors` or\ncalling the `carbon--colors()` mixin directly.\n\n#### Migrating from previous versions\n\nIf you were originally using a project that had color variables defined as\n`$ibm-color__<swatch>-<grade>`, or are relying on `$ibm-color-map`, you can also\nuse the entrypoint described above to access these colors. They are meant as an\neasier way to help adopt these packages. However, these variables will be\nremoved in the next release of Carbon.\n\nSimilar to previous efforts, we also provide colors in the formats mentioned\nabove. For example:\n\n```scss\n$ibm-color__blue-50;\n$ibm-color__warm-gray-100;\n```\n\nIf you would like a mixin to conditionally include these variables, you can\ninclude the mixin by using:\n\n```scss\n@import '@carbon/colors/scss/mixins';\n\n@include ibm--colors();\n```\n\n### JavaScript\n\nFor JavaScript, you can import and use this module by doing the following in\nyour code:\n\n```js\n// ESM\nimport { black, blue, warmGray } from '@carbon/colors';\n\n// CommonJS\nconst { black, blue, warmGray } = require('@carbon/colors');\n```\n\nEach color swatch is exported as a variable, and each color name is also\nexported as an object that can be called by specifying grade, for example:\n\n```js\nblack;\nblue[50]; // Using the `blue` object.\nwarmGray100; // Using the `warmGray100` variable.\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon color package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/colors\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Color package demo\"\n      href=\"https://carbon-elements.netlify.app/colors/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"a86d38f7a75b559343f7f91d69a99d7a","counter":1667,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Color","description":"Maintaining consistent and engaging digital interfaces throughout IBM, whether applications or experiences, demands extended guidance around color usage.","tabs":["Overview","Usage","Code"]},"exports":{},"rawBody":"---\ntitle: Color\ndescription:\n  Maintaining consistent and engaging digital interfaces throughout IBM, whether\n  applications or experiences, demands extended guidance around color usage.\ntabs: ['Overview', 'Usage', 'Code']\n---\n\n<PageDescription>\n\nThe Carbon color package helps teams build engaging digital experiences through\nconsistent application of color.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you’re using carbon-components there’s no reason to install the color package\nseparately. See our [get started](/get-started/develop/react) guide to start\nbuilding.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Getting started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Getting started\n\nTo install `@carbon/colors` in your project, you will need to run the following\ncommand using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/colors\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/colors\n```\n\n## Usage\n\nYou can use the `@carbon/colors` module in your JavaScript, in addition to your\nSass.\n\n### Sass\n\nIn Sass, you can import the files individual by doing:\n\n```scss\n@import '@carbon/colors/scss/colors';\n```\n\nThis file automatically includes the `carbon--colors` mixin which initializes\nall the color variables for the IBM Design Language.\n\nThese color variables follow the naming convention: `$carbon--<swatch>-<grade>`.\nFor example:\n\n```scss\n$carbon--blue-50;\n$carbon--cool-gray-10;\n$carbon--black-100;\n$carbon--white-0;\n```\n\nYou can also use the shorthand form of these colors by dropping the `carbon--`\nnamespace:\n\n```scss\n$blue-50;\n$cool-gray-10;\n$black-100;\n$white-0;\n```\n\n_Note: the shorthand variables require that you do not have any other\nconflicting variables in your setup. Namespaced variables are always preferred\nfor this reason, unless you are confident that no collisions will occur._\n\nIf you would like you choose when these variables are defined, then you can call\nthe `carbon--colors` mixin directly by importing the following file:\n\n```scss\n@import '@carbon/colors/scss/mixins';\n\n// ...\n@include carbon--colors();\n```\n\nAlongside the color variables detailed above, we also provide a map of colors so\nthat you can programmatically use these values. This map is called\n`$carbon--colors` and each key is the name of a swatch. The value of these\nswatches is also a map, but each key is now the grade. In code, this looks like\nthe following:\n\n<!-- prettier-ignore-start -->\n\n```scss\n$carbon--colors: (\n  'blue': (\n    10: #edf4ff,\n    // ...\n  )\n);\n```\n\n<!-- prettier-ignore-end -->\n\nYou can include this variable by including `@carbon/colors/scss/colors` or\ncalling the `carbon--colors()` mixin directly.\n\n#### Migrating from previous versions\n\nIf you were originally using a project that had color variables defined as\n`$ibm-color__<swatch>-<grade>`, or are relying on `$ibm-color-map`, you can also\nuse the entrypoint described above to access these colors. They are meant as an\neasier way to help adopt these packages. However, these variables will be\nremoved in the next release of Carbon.\n\nSimilar to previous efforts, we also provide colors in the formats mentioned\nabove. For example:\n\n```scss\n$ibm-color__blue-50;\n$ibm-color__warm-gray-100;\n```\n\nIf you would like a mixin to conditionally include these variables, you can\ninclude the mixin by using:\n\n```scss\n@import '@carbon/colors/scss/mixins';\n\n@include ibm--colors();\n```\n\n### JavaScript\n\nFor JavaScript, you can import and use this module by doing the following in\nyour code:\n\n```js\n// ESM\nimport { black, blue, warmGray } from '@carbon/colors';\n\n// CommonJS\nconst { black, blue, warmGray } = require('@carbon/colors');\n```\n\nEach color swatch is exported as a variable, and each color name is also\nexported as an object that can be called by specifying grade, for example:\n\n```js\nblack;\nblue[50]; // Using the `blue` object.\nwarmGray100; // Using the `warmGray100` variable.\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon color package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/colors\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Color package demo\"\n      href=\"https://carbon-elements.netlify.app/colors/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/guidelines/color/code.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}