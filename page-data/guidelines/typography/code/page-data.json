{"componentChunkName":"component---src-pages-guidelines-typography-code-mdx","path":"/guidelines/typography/code/","result":{"pageContext":{"frontmatter":{"label":"When used properly, typography can help create clear hierarchies, organize information, and guide users through the product or experience.","title":"Typography","description":"Typography can help create clear hierarchies, organize information, and guide users through a product or experience.","tabs":["Overview","Productive","Expressive","Code"]},"relativePagePath":"/guidelines/typography/code.mdx","titleType":"prepend","MdxNode":{"id":"96b17fd9-fbd4-58df-8e0a-d3c15ff19efe","children":[],"parent":"9b3e2049-d884-5a3d-b4ad-9043816f152a","internal":{"content":"---\nlabel:\n  When used properly, typography can help create clear hierarchies, organize\n  information, and guide users through the product or experience.\ntitle: Typography\ndescription:\n  Typography can help create clear hierarchies, organize information, and guide\n  users through a product or experience.\ntabs: ['Overview', 'Productive', 'Expressive', 'Code']\n---\n\n<PageDescription>\n\nType is a core part of any offering. Use the Carbon type package to leverage IBM\nPlex across your product.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you’re using carbon-components there’s no reason to install the type package\nseparately. See our [get started](/get-started/develop/react) guide to start\nbuilding.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Get started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Get started\n\nTo install `@carbon/type` in your project, you will need to run the following\ncommand using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/type\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/type\n```\n\n## Usage\n\n`@carbon/type` provides a variety of ways to work with typography from the IBM\nDesign Language. You can use all of these features either in JavaScript or Sass.\nThese features include:\n\n| Feature                       | Description                                                                                                  |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------ |\n| [Font face](#font-face)       | Include IBM Plex™ font faces in your application. Uses Google fonts                                          |\n| [Type classes](#type-classes) | Helpers to use type styles directly. Not included by default                                                 |\n| [Font family](#font-family)   | Defines the font stack for IBM Plex™ in your application, provides helpers for working with font definitions |\n| [Reset](#reset)               | Provides a high-level CSS Reset to use in your project                                                       |\n| [Scale](#type-scale)          | Provides the type scale. Can access the size at any given step (step 1, 2, 3, etc)                           |\n| [Styles](#type-styles)        | Provides type styles for your application (heading-01, body-long-01, etc)                                    |\n\nTo include `@carbon/type` in your project, you can write the following in your\nSass file:\n\n```scss\n@import '@carbon/type/scss/type';\n@import '@carbon/type/scss/font-face/mono';\n@import '@carbon/type/scss/font-face/sans';\n\n@include carbon--type-reset();\n@include carbon--font-face-mono();\n@include carbon--font-face-sans();\n```\n\nThis should include the default type reset from the project, in addition to\nfont-face definitions for IBM Plex Mono and IBM Plex Sans that come from Google\nFonts.\n\nIf you are using `@carbon/elements`, the import paths become:\n\n```scss\n@import '@carbon/elements/scss/type/path-to-import';\n```\n\nFor example:\n\n```scss\n@import '@carbon/elements/scss/type/styles';\n```\n\nIn addition, you will need to setup `node-sass` so that `node_modules` is\nincluded in the `includePaths` option. Often times, the tool that you are using\nto build Sass files in your project should expose this option for you to set.\n\nFor example, if you are using Webpack you would use `node-sass` and\n`sass-loader` with the following configuration for `includePaths`:\n\n```js\n{\n  loader: 'sass-loader',\n  options: {\n    includePaths: ['node_modules'],\n  },\n}\n```\n\n### Type styles\n\nInstead of using a type scale, `@carbon/type` provides tokens that represent\nwhat we call type styles. These tokens have a variety of properties for styling\nhow text is rendered on a page.\n\nYou can find a full reference of the type styles that are available on the\n[Carbon Design System website](https://www.carbondesignsystem.com/guidelines/typography/productive)\n.\n\nYou can include a token in your Sass file by writing:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include carbon--type-style('productive-heading-01');\n```\n\nIn addition, if the type style you are using has a fluid style then you can pass\nin `true` as the second argument to `carbon--type-style` to enable fluid styles.\nFor example:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include carbon--type-style('token-name', true);\n```\n\n### Font-face\n\n`@carbon/type` supports three font-face definitions that you can use to add IBM\nPlex to your project. These font-face definitions include support for:\n\n- IBM Plex Mono\n- IBM Plex Sans\n- IBM Plex Serif\n\nFor most projects, only IBM Plex Mono and IBM Plex Sans is necessary. We also\nprovide IBM Plex Serif if you are building an editorial or marketing project.\n\nThese font-face definitions are pulling the above fonts from Google Fonts. As a\nresult, they are not intended to be used as a production asset for your project.\nWhile you can depend on these for bootstrapping your project, we highly\nrecommend using the fonts from the `@ibm/plex` package and hosting them on a\nglobal CDN.\n\nYou can include each font-face definition by including the corresponding file\nand calling its mixin. For example, if you wanted to include IBM Plex Mono in\nyour project you would write the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n\n@include carbon--font-face-mono();\n```\n\nSimilarly, you can include IBM Plex Sans and IBM Plex Serif by writing:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n@import '@carbon/type/scss/font-face/sans';\n@import '@carbon/type/scss/font-face/serif';\n\n@include carbon--font-face-mono();\n@include carbon--font-face-sans();\n@include carbon--font-face-serif();\n```\n\n### Type classes\n\nThe recommended way to style your application will be to use our\n[type styles](#type-styles). However, we also offer helper CSS classes for\nspecific use-cases. These are also helpful when quickly prototyping a project.\n\nYou can include type classes in your project by writing the following in your\nSass file:\n\n```scss\n@import '@carbon/type/scss/classes';\n```\n\n| Selector                 | Description                               |\n| ------------------------ | ----------------------------------------- |\n| `.bx--type-mono`         | Specify the font face as IBM Plex Mono    |\n| `.bx--type-sans`         | Specify the font face as IBM Plex Sans    |\n| `.bx--type-serif`        | Specify the font face as IBM Plex Serif   |\n| `.bx--type-light`        | Specify the font weight as light (300)    |\n| `.bx--type-regular`      | Specify the font weight as regular (400)  |\n| `.bx--type-semibold`     | Specify the font weight as semibold (600) |\n| `.bx--type-italic`       | Specify the font style as italic          |\n| `.bx--type-<type-style>` | Set styles for the given type style       |\n\n### Font family\n\n`@carbon/type` provides the font stacks for all the IBM Plex fonts available.\nYou can access the font family information by including the following import in\nyour Sass file:\n\n```scss\n@import '@carbon/type/scss/font-family';\n```\n\nThe font stacks are available under the `$carbon--font-families` variable. You\ncan also access a specific font family by using the `carbon--font-family`\nfunction by doing:\n\n```scss\n.my-selector {\n  font-family: carbon--font-family('mono');\n}\n```\n\nYou can also use the `carbon--font-family` mixin to automatically set the\n`font-family` property for you:\n\n```scss\n.my-selector {\n  @include carbon--font-family('mono');\n}\n```\n\nYou can see all the available font families in `$carbon--font-families` .\n\n### Reset\n\nAn optional type reset is provided under the `carbon--type-reset` mixin. You can\ninclude this mixin by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/reset';\n\n@include carbon--type-reset();\n```\n\nThis reset sets some top-level properties on `html` and `body`, namely\n`font-size`, `font-family`, and some `text-rendering` options. We also map the\n`strong` tag to the semibold font weight.\n\n### Type scale\n\nA type scale is provided through the `$carbon--type-scale` variable and\ncorresponding `carbon--type-scale` function and mixin. However, for specifying\ntype styles, the recommendation is to use [type styles](#type-styles) .\n\nIf you are looking to use the type scale, you can include all the scale-related\nutilities and variables by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/scale';\n```\n\nYou can access a specific step in the type scale by using the\n`carbon--type-scale` function:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  font-size: carbon--type-scale(1);\n}\n```\n\nThere is also a `type-scale` mixin that will set `font-size` for your directly:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  @include carbon--type-scale(1);\n}\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon type package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/type\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Type package demo\"\n      href=\"https://carbon-elements.netlify.app/type/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"7867f2fe0b3f88a828019b12d57850a4","counter":1649,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Typography","label":"When used properly, typography can help create clear hierarchies, organize information, and guide users through the product or experience.","description":"Typography can help create clear hierarchies, organize information, and guide users through a product or experience.","tabs":["Overview","Productive","Expressive","Code"]},"exports":{},"rawBody":"---\nlabel:\n  When used properly, typography can help create clear hierarchies, organize\n  information, and guide users through the product or experience.\ntitle: Typography\ndescription:\n  Typography can help create clear hierarchies, organize information, and guide\n  users through a product or experience.\ntabs: ['Overview', 'Productive', 'Expressive', 'Code']\n---\n\n<PageDescription>\n\nType is a core part of any offering. Use the Carbon type package to leverage IBM\nPlex across your product.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you’re using carbon-components there’s no reason to install the type package\nseparately. See our [get started](/get-started/develop/react) guide to start\nbuilding.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Get started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Get started\n\nTo install `@carbon/type` in your project, you will need to run the following\ncommand using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/type\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/type\n```\n\n## Usage\n\n`@carbon/type` provides a variety of ways to work with typography from the IBM\nDesign Language. You can use all of these features either in JavaScript or Sass.\nThese features include:\n\n| Feature                       | Description                                                                                                  |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------ |\n| [Font face](#font-face)       | Include IBM Plex™ font faces in your application. Uses Google fonts                                          |\n| [Type classes](#type-classes) | Helpers to use type styles directly. Not included by default                                                 |\n| [Font family](#font-family)   | Defines the font stack for IBM Plex™ in your application, provides helpers for working with font definitions |\n| [Reset](#reset)               | Provides a high-level CSS Reset to use in your project                                                       |\n| [Scale](#type-scale)          | Provides the type scale. Can access the size at any given step (step 1, 2, 3, etc)                           |\n| [Styles](#type-styles)        | Provides type styles for your application (heading-01, body-long-01, etc)                                    |\n\nTo include `@carbon/type` in your project, you can write the following in your\nSass file:\n\n```scss\n@import '@carbon/type/scss/type';\n@import '@carbon/type/scss/font-face/mono';\n@import '@carbon/type/scss/font-face/sans';\n\n@include carbon--type-reset();\n@include carbon--font-face-mono();\n@include carbon--font-face-sans();\n```\n\nThis should include the default type reset from the project, in addition to\nfont-face definitions for IBM Plex Mono and IBM Plex Sans that come from Google\nFonts.\n\nIf you are using `@carbon/elements`, the import paths become:\n\n```scss\n@import '@carbon/elements/scss/type/path-to-import';\n```\n\nFor example:\n\n```scss\n@import '@carbon/elements/scss/type/styles';\n```\n\nIn addition, you will need to setup `node-sass` so that `node_modules` is\nincluded in the `includePaths` option. Often times, the tool that you are using\nto build Sass files in your project should expose this option for you to set.\n\nFor example, if you are using Webpack you would use `node-sass` and\n`sass-loader` with the following configuration for `includePaths`:\n\n```js\n{\n  loader: 'sass-loader',\n  options: {\n    includePaths: ['node_modules'],\n  },\n}\n```\n\n### Type styles\n\nInstead of using a type scale, `@carbon/type` provides tokens that represent\nwhat we call type styles. These tokens have a variety of properties for styling\nhow text is rendered on a page.\n\nYou can find a full reference of the type styles that are available on the\n[Carbon Design System website](https://www.carbondesignsystem.com/guidelines/typography/productive)\n.\n\nYou can include a token in your Sass file by writing:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include carbon--type-style('productive-heading-01');\n```\n\nIn addition, if the type style you are using has a fluid style then you can pass\nin `true` as the second argument to `carbon--type-style` to enable fluid styles.\nFor example:\n\n```scss\n@import '@carbon/type/scss/styles';\n\n@include carbon--type-style('token-name', true);\n```\n\n### Font-face\n\n`@carbon/type` supports three font-face definitions that you can use to add IBM\nPlex to your project. These font-face definitions include support for:\n\n- IBM Plex Mono\n- IBM Plex Sans\n- IBM Plex Serif\n\nFor most projects, only IBM Plex Mono and IBM Plex Sans is necessary. We also\nprovide IBM Plex Serif if you are building an editorial or marketing project.\n\nThese font-face definitions are pulling the above fonts from Google Fonts. As a\nresult, they are not intended to be used as a production asset for your project.\nWhile you can depend on these for bootstrapping your project, we highly\nrecommend using the fonts from the `@ibm/plex` package and hosting them on a\nglobal CDN.\n\nYou can include each font-face definition by including the corresponding file\nand calling its mixin. For example, if you wanted to include IBM Plex Mono in\nyour project you would write the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n\n@include carbon--font-face-mono();\n```\n\nSimilarly, you can include IBM Plex Sans and IBM Plex Serif by writing:\n\n```scss\n@import '@carbon/type/scss/font-face/mono';\n@import '@carbon/type/scss/font-face/sans';\n@import '@carbon/type/scss/font-face/serif';\n\n@include carbon--font-face-mono();\n@include carbon--font-face-sans();\n@include carbon--font-face-serif();\n```\n\n### Type classes\n\nThe recommended way to style your application will be to use our\n[type styles](#type-styles). However, we also offer helper CSS classes for\nspecific use-cases. These are also helpful when quickly prototyping a project.\n\nYou can include type classes in your project by writing the following in your\nSass file:\n\n```scss\n@import '@carbon/type/scss/classes';\n```\n\n| Selector                 | Description                               |\n| ------------------------ | ----------------------------------------- |\n| `.bx--type-mono`         | Specify the font face as IBM Plex Mono    |\n| `.bx--type-sans`         | Specify the font face as IBM Plex Sans    |\n| `.bx--type-serif`        | Specify the font face as IBM Plex Serif   |\n| `.bx--type-light`        | Specify the font weight as light (300)    |\n| `.bx--type-regular`      | Specify the font weight as regular (400)  |\n| `.bx--type-semibold`     | Specify the font weight as semibold (600) |\n| `.bx--type-italic`       | Specify the font style as italic          |\n| `.bx--type-<type-style>` | Set styles for the given type style       |\n\n### Font family\n\n`@carbon/type` provides the font stacks for all the IBM Plex fonts available.\nYou can access the font family information by including the following import in\nyour Sass file:\n\n```scss\n@import '@carbon/type/scss/font-family';\n```\n\nThe font stacks are available under the `$carbon--font-families` variable. You\ncan also access a specific font family by using the `carbon--font-family`\nfunction by doing:\n\n```scss\n.my-selector {\n  font-family: carbon--font-family('mono');\n}\n```\n\nYou can also use the `carbon--font-family` mixin to automatically set the\n`font-family` property for you:\n\n```scss\n.my-selector {\n  @include carbon--font-family('mono');\n}\n```\n\nYou can see all the available font families in `$carbon--font-families` .\n\n### Reset\n\nAn optional type reset is provided under the `carbon--type-reset` mixin. You can\ninclude this mixin by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/reset';\n\n@include carbon--type-reset();\n```\n\nThis reset sets some top-level properties on `html` and `body`, namely\n`font-size`, `font-family`, and some `text-rendering` options. We also map the\n`strong` tag to the semibold font weight.\n\n### Type scale\n\nA type scale is provided through the `$carbon--type-scale` variable and\ncorresponding `carbon--type-scale` function and mixin. However, for specifying\ntype styles, the recommendation is to use [type styles](#type-styles) .\n\nIf you are looking to use the type scale, you can include all the scale-related\nutilities and variables by writing the following in your Sass file:\n\n```scss\n@import '@carbon/type/scss/scale';\n```\n\nYou can access a specific step in the type scale by using the\n`carbon--type-scale` function:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  font-size: carbon--type-scale(1);\n}\n```\n\nThere is also a `type-scale` mixin that will set `font-size` for your directly:\n\n```scss\n@import '@carbon/type/scss/scale';\n\n.my-selector {\n  @include carbon--type-scale(1);\n}\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon type package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/type\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Type package demo\"\n      href=\"https://carbon-elements.netlify.app/type/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/guidelines/typography/code.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}