{"componentChunkName":"component---src-pages-guidelines-icons-code-mdx","path":"/guidelines/icons/code/","result":{"pageContext":{"frontmatter":{"label":"Icons are visual symbols used to represent ideas, objects, or actions. They communicate messages at a glance, afford interactivity, and draw attention to important information.","title":"Icons","description":"Icons are visual symbols used to represent ideas, objects, or actions. They communicate messages at a glance, afford interactivity, and draw attention to important information.","tabs":["Library","Usage","Code","Contribute"]},"relativePagePath":"/guidelines/icons/code.mdx","titleType":"prepend","MdxNode":{"id":"05ae1acd-8128-5521-abdf-25b1584081b8","children":[],"parent":"470baa28-0a0a-5d03-b239-5cc116edb466","internal":{"content":"---\nlabel:\n  Icons are visual symbols used to represent ideas, objects, or actions. They\n  communicate messages at a glance, afford interactivity, and draw attention to\n  important information.\ntitle: Icons\ndescription:\n  Icons are visual symbols used to represent ideas, objects, or actions. They\n  communicate messages at a glance, afford interactivity, and draw attention to\n  important information.\ntabs: ['Library', 'Usage', 'Code', 'Contribute']\n---\n\n<PageDescription>\n\nCarbon icons are provided through a set of packages allowing the use of icons in\nmultiple frameworks. Icons are supported in vanilla, React, Angular, and Vue.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Get started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Get started\n\nTo install `@carbon/icons-react` in your project, you will need to run the\nfollowing command using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/icons-react\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/icons-react\n```\n\n## Usage\n\nIcons in this package support the following sizes: `16`, `20`, `24`, and `32`\npixels. These sizes refer to the width and height of the icon. You can import an\nicon component into your project by referring to its name and size:\n\n```jsx\nimport { Add24 } from '@carbon/icons-react';\n```\n\nWe also provide CommonJS and UMD files in the `lib` and `umd` directories,\nrespectively.\n\nTo import using CommonJS, you can do the following:\n\n```js\nconst { Add24 } = require('@carbon/icons-react');\n```\n\n_Note: if you would like to find the import path for an icon, you can reference\nour\n[Icon Library](https://www.carbondesignsystem.com/guidelines/iconography/library)_\n\n### Icon fill\n\nAll icons from the library support being styled by the `fill` property. You can\nchange the color of an icon by passing in a custom class name that sets this\nproperty (preferred), or by passing in an inline style. For example:\n\n```css\n// CSS custom class name to set the fill of the icon to `rebeccapurple`\nsvg.my-custom-class {\n  fill: rebeccapurple;\n}\n```\n\n```jsx\nimport { Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add16 aria-label=\"Add\" className=\"my-custom-class\" />\n    </button>\n  );\n}\n```\n\n#### Two-tone icons\n\nCertain icons in the library support two distinct fill colors. You can target\nthe inner path by using the `[data-icon-path=\"inner-path\"]` attribute selector.\nFor example:\n\n```scss\n// CSS custom class name to set the fill of the icon to `yellow`\nsvg.outer-icon-fill {\n  fill: yellow;\n}\n\n// Use the `data-icon-path` attribute selector to target the inner path\n// where we want to set the fill to `black`. We also set `opacity` to `1` so\n// that this inner-path is visible.\nsvg.outer-icon-fill [data-icon-path='inner-path'] {\n  fill: black;\n  opacity: 1;\n}\n```\n\n```jsx\nimport { WarningFilled16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return <WarningFilled16 aria-label=\"Add\" className=\"my-custom-class\" />;\n}\n```\n\n### Focus and `aria-label`\n\nBy default, the icon components from `@carbon/icons-react` are treated as\ndecorative content. This means that we set `aria-hidden=\"true\"` unless certain\nprops are passed to the component.\n\nIf you would like the icon to be announced by a screen reader, you can supply an\n`aria-label` or `aria-labelledby`. For example:\n\n```jsx\nimport { Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add16 aria-label=\"Add\" />\n    </button>\n  );\n}\n```\n\nDoing this will add the appropriate `role` to the `<svg>` node, as well.\n\nIf you would like the `<svg>` to receive focus, you will need to pass in a\n`tabIndex` value. For example:\n\n```jsx\nimport { Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return <Add16 aria-label=\"Add\" tabIndex=\"0\" />;\n}\n```\n\nIncluding `tabIndex` and `aria-label` (or `aria-labelledby`) will set the\ncorresponding `tabindex` on the underlying `<svg>` and verify support in older\nbrowsers like Internet Explorer 11 by setting `focusable` to `true`.\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon icons package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/icons\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Icon package demo\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/icons\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"4182b426875e53274742432fbcdf4136","counter":3013,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Icons","label":"Icons are visual symbols used to represent ideas, objects, or actions. They communicate messages at a glance, afford interactivity, and draw attention to important information.","description":"Icons are visual symbols used to represent ideas, objects, or actions. They communicate messages at a glance, afford interactivity, and draw attention to important information.","tabs":["Library","Usage","Code","Contribute"]},"exports":{},"rawBody":"---\nlabel:\n  Icons are visual symbols used to represent ideas, objects, or actions. They\n  communicate messages at a glance, afford interactivity, and draw attention to\n  important information.\ntitle: Icons\ndescription:\n  Icons are visual symbols used to represent ideas, objects, or actions. They\n  communicate messages at a glance, afford interactivity, and draw attention to\n  important information.\ntabs: ['Library', 'Usage', 'Code', 'Contribute']\n---\n\n<PageDescription>\n\nCarbon icons are provided through a set of packages allowing the use of icons in\nmultiple frameworks. Icons are supported in vanilla, React, Angular, and Vue.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Get started</AnchorLink>\n<AnchorLink>Usage</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Get started\n\nTo install `@carbon/icons-react` in your project, you will need to run the\nfollowing command using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/icons-react\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/icons-react\n```\n\n## Usage\n\nIcons in this package support the following sizes: `16`, `20`, `24`, and `32`\npixels. These sizes refer to the width and height of the icon. You can import an\nicon component into your project by referring to its name and size:\n\n```jsx\nimport { Add24 } from '@carbon/icons-react';\n```\n\nWe also provide CommonJS and UMD files in the `lib` and `umd` directories,\nrespectively.\n\nTo import using CommonJS, you can do the following:\n\n```js\nconst { Add24 } = require('@carbon/icons-react');\n```\n\n_Note: if you would like to find the import path for an icon, you can reference\nour\n[Icon Library](https://www.carbondesignsystem.com/guidelines/iconography/library)_\n\n### Icon fill\n\nAll icons from the library support being styled by the `fill` property. You can\nchange the color of an icon by passing in a custom class name that sets this\nproperty (preferred), or by passing in an inline style. For example:\n\n```css\n// CSS custom class name to set the fill of the icon to `rebeccapurple`\nsvg.my-custom-class {\n  fill: rebeccapurple;\n}\n```\n\n```jsx\nimport { Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add16 aria-label=\"Add\" className=\"my-custom-class\" />\n    </button>\n  );\n}\n```\n\n#### Two-tone icons\n\nCertain icons in the library support two distinct fill colors. You can target\nthe inner path by using the `[data-icon-path=\"inner-path\"]` attribute selector.\nFor example:\n\n```scss\n// CSS custom class name to set the fill of the icon to `yellow`\nsvg.outer-icon-fill {\n  fill: yellow;\n}\n\n// Use the `data-icon-path` attribute selector to target the inner path\n// where we want to set the fill to `black`. We also set `opacity` to `1` so\n// that this inner-path is visible.\nsvg.outer-icon-fill [data-icon-path='inner-path'] {\n  fill: black;\n  opacity: 1;\n}\n```\n\n```jsx\nimport { WarningFilled16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return <WarningFilled16 aria-label=\"Add\" className=\"my-custom-class\" />;\n}\n```\n\n### Focus and `aria-label`\n\nBy default, the icon components from `@carbon/icons-react` are treated as\ndecorative content. This means that we set `aria-hidden=\"true\"` unless certain\nprops are passed to the component.\n\nIf you would like the icon to be announced by a screen reader, you can supply an\n`aria-label` or `aria-labelledby`. For example:\n\n```jsx\nimport { Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add16 aria-label=\"Add\" />\n    </button>\n  );\n}\n```\n\nDoing this will add the appropriate `role` to the `<svg>` node, as well.\n\nIf you would like the `<svg>` to receive focus, you will need to pass in a\n`tabIndex` value. For example:\n\n```jsx\nimport { Add16 } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return <Add16 aria-label=\"Add\" tabIndex=\"0\" />;\n}\n```\n\nIncluding `tabIndex` and `aria-label` (or `aria-labelledby`) will set the\ncorresponding `tabindex` on the underlying `<svg>` and verify support in older\nbrowsers like Internet Explorer 11 by setting `focusable` to `true`.\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon icons package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/icons\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Icon package demo\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/master/packages/icons\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/guidelines/icons/code.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}