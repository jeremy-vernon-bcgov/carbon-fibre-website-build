{"componentChunkName":"component---src-pages-components-accordion-usage-mdx","path":"/components/accordion/usage/","result":{"pageContext":{"frontmatter":{"title":"Accordion","description":"An accordion is a vertically stacked list of headers that reveal or hide associated sections of content.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/accordion/usage.mdx","titleType":"prepend","MdxNode":{"id":"1908d989-c4bb-5019-aecf-b40e6027df11","children":[],"parent":"f844e51a-3608-5fd1-acc8-5841c642c0b9","internal":{"content":"---\ntitle: Accordion\ndescription:\n  An accordion is a vertically stacked list of headers that reveal or hide\n  associated sections of content.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nAn accordion is a vertically stacked list of headers that reveal or hide\nassociated sections of content.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nThe accordion component delivers large amounts of content in a small space\nthrough progressive disclosure. The header title give the user a high level\noverview of the content allowing the user to decide which sections to read.\n\nAccordions can make information processing and discovering more effective.\nHowever, it does hide content from users and it's important to account for a\nuser not noticing or reading all of the included content. If a user is likely to\nread all of the content then don't use an accordion as it adds the burden of an\nextra click; instead use a full scrolling page with normal headers.\n\n### When to use:\n\n- To organize related information.\n- To shorten pages and reduce scrolling when content is not crucial to read in\n  full.\n- When space is at a premium and long content cannot be displayed all at once,\n  like on a mobile interface or in a side panel.\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'accordion',\n      label: 'Accordion',\n    },\n  ]}>\n  <ComponentVariant\n    id=\"accordion\"\n    knobs={{ Accordion: ['align'], AccordionItem: ['open'] }}\n    links={{\n      React:\n        'http://react.carbondesignsystem.com/?path=/story/accordion--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-accordion--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvaccordion--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=accordion',\n    }}>\n    {`\n  <Accordion>\n    <AccordionItem title=\"Title 1\"><p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The user gets key details about the underlying content and can choose to expand that content within the constraints of the accordion. Accordions work especially well on mobile interfaces or whenever vertical space is at a premium.</p></AccordionItem>\n    <AccordionItem title=\"Title 2\"><p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The user gets key details about the underlying content and can choose to expand that content within the constraints of the accordion. Accordions work especially well on mobile interfaces or whenever vertical space is at a premium.</p></AccordionItem>\n    <AccordionItem title=\"Title 3\"><p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The user gets key details about the underlying content and can choose to expand that content within the constraints of the accordion. Accordions work especially well on mobile interfaces or whenever vertical space is at a premium.</p></AccordionItem>\n  </Accordion>\n  `}\n  </ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![accordion anatomy](images/accordion-anatomy.png)\n\n</Column>\n</Row>\n\n1. **Header**: contains the section title and is control for revealing the\n   panel.\n2. **Icon**: indicates if the panel is open or closed.\n3. **Panel**: the section of content associated with an accordion header.\n\n### Alignment\n\nBy default the chevron icon is placed on the `end` side of the header. This\nallows for the title on the `start` side to align with other type elements in\nthe layout.\n\n<DoDontRow>\n<DoDont\ncolMd={4} colLg={4}\ncaption=\"Do use the default icon alignment to keep accordion text aligned with other content on the page.\">\n\n![Do: use the default icon alignment to keep accordion text aligned with other content on the page.](./images/accordion-alignment-do.png)\n\n</DoDont>\n<DoDont\ncolMd={4} colLg={4}\ntype=\"dont\"\ncaption=\"Don’t place icons on the left and create misalignment with the other text on the page.\">\n\n![Don’t: place icons on the left and create misalignment with the other text on the page.](./images/accordion-alignment-dont.png)\n\n</DoDont>\n</DoDontRow>\n\n#### Modifier\n\nIn rare scenarios, the accordion can be modified to place the icon in front of\nthe title to function more like a tree. However, most instances should use the\ndefault alignment and for any pure content or documentation purposes, the\ndefault alignment is required. Icon placement should be consistent throughout\nyour experience.\n\n### Placement\n\nAccordions can be placed with main page content or placed inside of a container\nsuch as a side panel or tile.\n\n<Row>\n<Column  colLg={12} colMd={12} colSm={4}>\n<ArtDirection>\n\n![accordion placement](images/accordion-placement-2m.png)\n![accordion placement](images/accordion-placement-2.png)\n![accordion placement](images/accordion-placement-2.png)\n\n</ArtDirection>\n</Column>\n</Row>\n\n#### Grid placement\n\nWhen placing an accordion on the 2x Grid the indented title aligns to the grid\ncolumns and the top and bottom borders hang in the gutter.\n\n<Row>\n<Column colLg={8}>\n\n![accordion grid placement](images/accordion-placement-1.png)\n\n</Column>\n</Row>\n\n## Content\n\n### Main elements\n\n#### Title\n\n- The title should be as brief as possible while still being clear and\n  descriptive.\n- Each title should be wrapped in a\n  [role heading](https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties)\n  (h1-h6) that is appropriate for the information architecture of the page.\n\n#### Body copy\n\n- Content inside of a section may be split into paragraphs and include\n  sub-headers if needed.\n\n### Scrolling content\n\nWhen the accordion content is longer than the viewport the whole accordion\nshould vertically scroll. Content should not scroll inside of an individual\npanel. Content should never scroll horizontally in an accordion.\n\n## Behaviors\n\n### States\n\nThe accordion component has two main states: **collapsed** and **expanded**. The\nchevron icon at the end of the accordion indicates which state the accordion is\nin. The chevron points down to indicate collapsed and up to indicate expanded.\n\nAccordions begin by default in the collapsed state with all content panels\nclosed. Starting in a collapsed state gives the user a high level overview of\nthe available information.\n\n<Row>\n<Column colLg={8}>\n\n![accordion states](images/accordion-state-1.png)\n\n</Column>\n</Row>\n\nA user can then independently expand each section of the accordion allowing for\nmultiple sections to be open at once.\n\n<Row>\n<Column colLg={8}>\n\n![multiple sections expanded](images/accordion-state-2.png)\n\n</Column>\n</Row>\n\nIn addition to the collapsed and expanded states, accordions also have\ninteractive states for focus, hover, and disabled. See the\n[style tab](/components/accordion/style) for more details.\n\n<Row>\n<Column colLg={8}>\n\n![accordion interactives states](images/accordion-state-3.png)\n\n</Column>\n</Row>\n\n### Interactions\n\n#### Mouse\n\nUsers can trigger a state change by clicking on the chevron or clicking anywhere\nin the header area.\n\n<Row>\n<Column colLg={8}>\n\n![accordion click targets](images/accordion-click-target.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nUsers can trigger a state change by pressing `Enter` or `Space` while the header\narea has focus. For additional keyboard interactions, see the\n[accessibility tab](/components/accordion/accessibility#how-it-works).\n\nUsers can navigate between accordion headers by pressing `Tab` or `Shift-Tab`.\n\n#### Screen readers\n\nVoiceOver: Users can trigger a state change by pressing `Control-Option-Space`\nor `Space` while the header area has screen reader focus.\n\nJAWS: Users can trigger a state change by pressing `Enter` or `Space` while the\nheader area has screen reader focus.\n\nNVDA: Users can trigger a state change by pressing `Enter` or `Space` while the\nheader area has screen reader focus.\n\nFor additional information, see\n[screen reader tests](https://www.carbondesignsystem.com/components/accordion/accessibility#macos-screen-reader-tests).\n\n## Related\n\nThe following components are additional ways to organize content. Consider the\ntype and length of content you are working with when choosing a content\ncontainer. Longer form content may benefit from tabs or a content switcher while\nvery short content might do better in a structured list.\n\n- [Content switcher](/components/content-switcher/usage)\n- [Progress indicator](/components/progress-indicator/usage)\n- [Structured list](/components/structured-list/usage)\n- [Tabs](/components/tabs/usage)\n- Tree view\n\n## References\n\n- Hoa Loranger,\n  [Accordions Are Not Always the Answer for Complex Content on Desktops](https://www.nngroup.com/articles/accordions-complex-content/)\n  (Nielsen Norman Group, 2014)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"7040180cf0acefec0602cb619673576b","counter":3205,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Accordion","description":"An accordion is a vertically stacked list of headers that reveal or hide associated sections of content.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Accordion\ndescription:\n  An accordion is a vertically stacked list of headers that reveal or hide\n  associated sections of content.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nAn accordion is a vertically stacked list of headers that reveal or hide\nassociated sections of content.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nThe accordion component delivers large amounts of content in a small space\nthrough progressive disclosure. The header title give the user a high level\noverview of the content allowing the user to decide which sections to read.\n\nAccordions can make information processing and discovering more effective.\nHowever, it does hide content from users and it's important to account for a\nuser not noticing or reading all of the included content. If a user is likely to\nread all of the content then don't use an accordion as it adds the burden of an\nextra click; instead use a full scrolling page with normal headers.\n\n### When to use:\n\n- To organize related information.\n- To shorten pages and reduce scrolling when content is not crucial to read in\n  full.\n- When space is at a premium and long content cannot be displayed all at once,\n  like on a mobile interface or in a side panel.\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'accordion',\n      label: 'Accordion',\n    },\n  ]}>\n  <ComponentVariant\n    id=\"accordion\"\n    knobs={{ Accordion: ['align'], AccordionItem: ['open'] }}\n    links={{\n      React:\n        'http://react.carbondesignsystem.com/?path=/story/accordion--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-accordion--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvaccordion--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=accordion',\n    }}>\n    {`\n  <Accordion>\n    <AccordionItem title=\"Title 1\"><p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The user gets key details about the underlying content and can choose to expand that content within the constraints of the accordion. Accordions work especially well on mobile interfaces or whenever vertical space is at a premium.</p></AccordionItem>\n    <AccordionItem title=\"Title 2\"><p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The user gets key details about the underlying content and can choose to expand that content within the constraints of the accordion. Accordions work especially well on mobile interfaces or whenever vertical space is at a premium.</p></AccordionItem>\n    <AccordionItem title=\"Title 3\"><p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The user gets key details about the underlying content and can choose to expand that content within the constraints of the accordion. Accordions work especially well on mobile interfaces or whenever vertical space is at a premium.</p></AccordionItem>\n  </Accordion>\n  `}\n  </ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![accordion anatomy](images/accordion-anatomy.png)\n\n</Column>\n</Row>\n\n1. **Header**: contains the section title and is control for revealing the\n   panel.\n2. **Icon**: indicates if the panel is open or closed.\n3. **Panel**: the section of content associated with an accordion header.\n\n### Alignment\n\nBy default the chevron icon is placed on the `end` side of the header. This\nallows for the title on the `start` side to align with other type elements in\nthe layout.\n\n<DoDontRow>\n<DoDont\ncolMd={4} colLg={4}\ncaption=\"Do use the default icon alignment to keep accordion text aligned with other content on the page.\">\n\n![Do: use the default icon alignment to keep accordion text aligned with other content on the page.](./images/accordion-alignment-do.png)\n\n</DoDont>\n<DoDont\ncolMd={4} colLg={4}\ntype=\"dont\"\ncaption=\"Don’t place icons on the left and create misalignment with the other text on the page.\">\n\n![Don’t: place icons on the left and create misalignment with the other text on the page.](./images/accordion-alignment-dont.png)\n\n</DoDont>\n</DoDontRow>\n\n#### Modifier\n\nIn rare scenarios, the accordion can be modified to place the icon in front of\nthe title to function more like a tree. However, most instances should use the\ndefault alignment and for any pure content or documentation purposes, the\ndefault alignment is required. Icon placement should be consistent throughout\nyour experience.\n\n### Placement\n\nAccordions can be placed with main page content or placed inside of a container\nsuch as a side panel or tile.\n\n<Row>\n<Column  colLg={12} colMd={12} colSm={4}>\n<ArtDirection>\n\n![accordion placement](images/accordion-placement-2m.png)\n![accordion placement](images/accordion-placement-2.png)\n![accordion placement](images/accordion-placement-2.png)\n\n</ArtDirection>\n</Column>\n</Row>\n\n#### Grid placement\n\nWhen placing an accordion on the 2x Grid the indented title aligns to the grid\ncolumns and the top and bottom borders hang in the gutter.\n\n<Row>\n<Column colLg={8}>\n\n![accordion grid placement](images/accordion-placement-1.png)\n\n</Column>\n</Row>\n\n## Content\n\n### Main elements\n\n#### Title\n\n- The title should be as brief as possible while still being clear and\n  descriptive.\n- Each title should be wrapped in a\n  [role heading](https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties)\n  (h1-h6) that is appropriate for the information architecture of the page.\n\n#### Body copy\n\n- Content inside of a section may be split into paragraphs and include\n  sub-headers if needed.\n\n### Scrolling content\n\nWhen the accordion content is longer than the viewport the whole accordion\nshould vertically scroll. Content should not scroll inside of an individual\npanel. Content should never scroll horizontally in an accordion.\n\n## Behaviors\n\n### States\n\nThe accordion component has two main states: **collapsed** and **expanded**. The\nchevron icon at the end of the accordion indicates which state the accordion is\nin. The chevron points down to indicate collapsed and up to indicate expanded.\n\nAccordions begin by default in the collapsed state with all content panels\nclosed. Starting in a collapsed state gives the user a high level overview of\nthe available information.\n\n<Row>\n<Column colLg={8}>\n\n![accordion states](images/accordion-state-1.png)\n\n</Column>\n</Row>\n\nA user can then independently expand each section of the accordion allowing for\nmultiple sections to be open at once.\n\n<Row>\n<Column colLg={8}>\n\n![multiple sections expanded](images/accordion-state-2.png)\n\n</Column>\n</Row>\n\nIn addition to the collapsed and expanded states, accordions also have\ninteractive states for focus, hover, and disabled. See the\n[style tab](/components/accordion/style) for more details.\n\n<Row>\n<Column colLg={8}>\n\n![accordion interactives states](images/accordion-state-3.png)\n\n</Column>\n</Row>\n\n### Interactions\n\n#### Mouse\n\nUsers can trigger a state change by clicking on the chevron or clicking anywhere\nin the header area.\n\n<Row>\n<Column colLg={8}>\n\n![accordion click targets](images/accordion-click-target.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nUsers can trigger a state change by pressing `Enter` or `Space` while the header\narea has focus. For additional keyboard interactions, see the\n[accessibility tab](/components/accordion/accessibility#how-it-works).\n\nUsers can navigate between accordion headers by pressing `Tab` or `Shift-Tab`.\n\n#### Screen readers\n\nVoiceOver: Users can trigger a state change by pressing `Control-Option-Space`\nor `Space` while the header area has screen reader focus.\n\nJAWS: Users can trigger a state change by pressing `Enter` or `Space` while the\nheader area has screen reader focus.\n\nNVDA: Users can trigger a state change by pressing `Enter` or `Space` while the\nheader area has screen reader focus.\n\nFor additional information, see\n[screen reader tests](https://www.carbondesignsystem.com/components/accordion/accessibility#macos-screen-reader-tests).\n\n## Related\n\nThe following components are additional ways to organize content. Consider the\ntype and length of content you are working with when choosing a content\ncontainer. Longer form content may benefit from tabs or a content switcher while\nvery short content might do better in a structured list.\n\n- [Content switcher](/components/content-switcher/usage)\n- [Progress indicator](/components/progress-indicator/usage)\n- [Structured list](/components/structured-list/usage)\n- [Tabs](/components/tabs/usage)\n- Tree view\n\n## References\n\n- Hoa Loranger,\n  [Accordions Are Not Always the Answer for Complex Content on Desktops](https://www.nngroup.com/articles/accordions-complex-content/)\n  (Nielsen Norman Group, 2014)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/components/accordion/usage.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}