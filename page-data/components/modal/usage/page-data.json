{"componentChunkName":"component---src-pages-components-modal-usage-mdx","path":"/components/modal/usage/","result":{"pageContext":{"frontmatter":{"title":"Modal","description":"Modals focus the user’s attention exclusively on one task or piece of information via a window that sits on top of the page content.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/modal/usage.mdx","titleType":"prepend","MdxNode":{"id":"1194937a-688d-51fe-ac48-7169462e9b4b","children":[],"parent":"a6c9d9af-f11d-5bce-adf2-a689c8f2c42a","internal":{"content":"---\ntitle: Modal\ndescription:\n  Modals focus the user’s attention exclusively on one task or piece of\n  information via a window that sits on top of the page content.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nModals focus the user’s attention exclusively on one task or piece of\ninformation via a window that sits on top of the page content.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink>\n<AnchorLink>Modal types</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nModals are a type of [dialog](/patterns/dialog-pattern) used to present critical\ninformation or request user input needed to complete a user’s workflow. Modals\ninterrupt a user’s workflow by design. When active, a user is blocked from the\non-page content and cannot return to their previous workflow until the modal\ntask is completed or the user dismisses the modal. While effective when used\ncorrectly, modals should be used sparingly to limit disruption to the user.\n\nModal dialogs are commonly used for short and non-frequent tasks, such as\nediting or management tasks. If a user needs to repeatably preform a task,\nconsider making the task do-able from the main page.\n\n### When to use\n\n#### Require an immediate response from the user\n\nUse a dialog to request information that is preventing the system from\ncontinuing a user-initiated process.\n\n#### Notify the user of urgent information\n\nUse a modal dialog to notify the user of urgent information concerning their\ncurrent work. Modal dialogs are commonly used to report system errors or convey\na consequence of a user’s action.\n\n#### Confirm a user decision\n\nUse a modal dialog to confirm user decisions. Clearly describe the action being\nconfirmed and explain any potential consequences that it may cause. Both the\ntitle and the button should reflect the action that will occur. If the action is\ndestructive or irreversible then use a transactional danger modal.\n\n### Types\n\n| Type                                                           | Usage                                                                                                                           |\n| -------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| [Passive](/components/modal/usage#passive-modal)               | Presents information the user needs to be aware of concerning their current workflow. Contains no actions for the user to take. |\n| [Transactional](/components/modal/usage#transactional-modal)   | Requires an action to be taken in order for the modal to be completed and closed. Contains a cancel and primary action buttons. |\n| [Danger](/components/modal/usage#danger-modal)                 | A specific type of transactional modal used for destructive or irreversible actions.                                            |\n| [Acknowledgment](/components/modal/usage#acknowledgment-modal) | System requires an acknowledgement of the information from the user. Contains only a single button, commonly \"OK\".              |\n| [Progress](/components/modal/usage#progress-modal)             | Requires several steps to be completed before it can be closed. Contains a cancel, previous, and next/completion buttons.       |\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'modal',\n      label: 'Modal',\n    },\n    {\n      id: 'scrolling-content',\n      label: 'With scrolling content',\n    },\n  ]}>\n  <ComponentVariant\n    id=\"modal\"\n    knobs={{\n      ModalWrapper: ['passiveModal', 'danger', 'disabled', 'size'],\n    }}\n    links={{\n      React: 'https://react.carbondesignsystem.com/?path=/story/modal--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-modal--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvmodal--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=modal',\n    }}>{`\n    <ModalWrapper\n      buttonTriggerText=\"Launch modal\"\n      modalHeading=\"Modal heading\"\n      modalLabel=\"Label\"\n    >\n      <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. Duis quis odio ultrices, cursus lacus ac, posuere felis. Donec dignissim libero in augue mattis, a molestie metus vestibulum. Aliquam placerat felis ultrices lorem condimentum, nec ullamcorper felis porttitor. </p>\n    </ModalWrapper>\n`}</ComponentVariant>\n  <ComponentVariant\n    id=\"scrolling-content\"\n    links={{\n      React: 'https://react.carbondesignsystem.com/?path=/story/modal--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-modal--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvmodal--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=modal',\n    }}>{`\n    <ModalWrapper\n      hasScrollingContent\n      size=\"sm\"\n      buttonTriggerText=\"Launch modal\"\n      modalHeading=\"Modal heading\"\n      modalLabel=\"Label\"\n    >\n      <>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <h3>\n          Lorem ipsum\n        </h3>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n      </>\n    </ModalWrapper>\n`}</ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Modal anatomy diagram](images/modal-usage-anatomy.png)\n\n</Column>\n</Row>\n\nThe modal is composed of three distinct zones: A header, the body, and a footer.\nComponents (eg. data table, form, progress indicator) can occupy the full width\nof the modal.\n\n1. **Header**: Includes a title, optional label, and the close icon.\n\n2. **Body**: Contains the information and/or controls needed to complete the\n   modal's task. It can include message text and components.\n\n3. **Footer**: Contains the main actions needed to complete or cancel the dialog\n   task. Button groupings change based on modal variant.\n\n4. **x**: The close `x` icon will close the dialog without submitting any data.\n\n5. **Overlay**: Screen overlay that obscures the on-page content.\n\n### Sizing\n\nThere are four responsive [modal sizes](/components/modal/style#sizes): **xs,\nsmall, default, large**. Choose a size that works best for the amount of modal\ncontent you have. Modals with short messages should use a xs or small modal to\navoid long single lines; for complex components, like data table the default or\nlarge modal will be more accommodating.\n\n<Row>\n<Column colLg={8}>\n\n![Modal sizes](images/modal-usage-sizes.png)\n\n</Column>\n</Row>\n\n#### Max heights\n\nEach modal size has a [max height](/components/modal/style#max-sizes) in order\nto maintain a proper window ratio. If your modal has too much scrolling due to a\nmax height consider using the next modal size up. If the large modal height is\nstill not enough space then this is an indicator that a full page may be needed\ninstead.\n\n<Row>\n<Column colLg={8}>\n\n![Modal max heights](images/modal-usage-max-heights.png)\n\n</Column>\n</Row>\n\n### Alignment\n\nInside of a modal, body copy, including titles, have a 20%\n[margin-right](/components/modal/style#margin-right). However, form inputs and\nother components expand the full width of a modal window.\n\n<Row>\n<Column colLg={8}>\n\n![Modal alignment](images/modal-usage-alignment.png)\n\n</Column>\n</Row>\n\n## Content\n\n### Main elements\n\n#### Title\n\n- The title should be brief, using a verb plus noun combination that clearly\n  describes the dialog’s task or purpose.\n- You can use an optional label above the title to set the context for the\n  information in the dialog.\n\n#### Body copy\n\n- A modal should include only content relevant to completing the current task.\n- Text should only be 80% of the modal’s width and components can span 100% of\n  the width.\n\n#### Footer\n\n- Use descriptive words for the actions such as Add, Delete, and Save. Avoid\n  vague words like Done or OK. For a list of approved action labels, see\n  Carbon's\n  [content guidelines](https://www.carbondesignsystem.com/guidelines/content/action-labels).\n- If you need to include a “docs” or other non-primary action, include it as a\n  link in the modal’s body.\n\n### Overflow content\n\nWhen the modal content is longer than the modal height then the body section\nshould scroll vertically with the header and footer remaining fixed in place.\nThe content should visibly fade at the end of the modal body area to indicate\nthere is additional content out of view.\n\nModal content should never scroll horizontally; instead, use a larger size\nmodal.\n\n<Row>\n<Column colLg={8}>\n\n![Overflow content example](images/modal-usage-scrolling.png)\n\n</Column>\n</Row>\n\n### Title as message\n\nFor short, direct messages the title can include the whole message to add visual\nclarity to an otherwise repetitive title and body message. When using this\nstyle, no other body copy may be included.\n\n<Row>\n<Column colLg={8}>\n\n![Title as message example](images/modal-usage-title.png)\n\n</Column>\n</Row>\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Behaviors\n\n### Trigger\n\nModals are triggered as a result of a user’s action and are not system\ngenerated. Common components that can trigger a modal include, button, link, or\nicon. On a keyboard, selecting `Enter` or `Space` should launch the modal.\n\n### Focus\n\nOnce the modal is open, set the initial focus to the first location that accepts\nuser input. For example, if the modal contains a form then the focus should\nautomatically be set to the first field when opened. If it is a transactional\nmodal without form inputs in the body section then the first focus should be on\nthe primary button.\n\nFocus should then remain trapped in the dialog until it is closed. When\nnavigating by keyboard, `Tab` and `Shift-Tab` do not move the focus outside of\nthe modal.\n\n<Row>\n<Column colLg={8}>\n\n![Modal focus example](images/modal-usage-focus.png)\n\n</Column>\n</Row>\n\n### Loading\n\nThe task completion action should take place immediately. If a longer loading\nperiod is needed then a [loading spinner](/components/loading/usage) and overlay\nshould appear on top of the modal body area with content disabled. The primary\naction button should be disabled while loading is in progress.\n\nIf a quick loading period is needed then use a\n[inline loading](/patterns/loading-pattern#inline-loading) behavior on the\nprimary button to indicate the data is being processed.\n\n<Row>\n<Column colLg={12}>\n\n![Modal loading options](images/modal-usage-loading.png)\n\n</Column>\n</Row>\n\n### Validation\n\nValidate a user’s entries before the modal is closed. If any entry is invalid\nthen the modal should remain open with the entry marked in an error state and\ninclude an inline error message. The message should inform the user what has\nhappened and provide guidance on next steps or possible resolutions. Effective\nand immediate error messaging can help the user to understand the problem and\nhow to fix it.\n\nWhen possible, we recommend validating the user’s data before submission. This\ntype of inline validation (aka client-side validation) should happen as soon as\nthe field loses focus. This will help easily identify the elements that need to\nbe corrected. On field error messages should disappear when the form criteria is\nmet. If the data was not able to be submitted due to server-side issues then an\ninline notification should appear.\n\n<Row>\n<Column colLg={8}>\n\n![Validation example](images/modal-usage-invalid.png)\n\n</Column>\n</Row>\n\n## Modal types\n\n### Passive modal\n\nPassive modals presents information the user needs to be aware of concerning\ntheir current workflow. It contains no actions for the user to take and should\nnot include any data that needs to be submitted. They serve as a type of\nnotification alerting the user to urgent information such as reporting system\nerrors or conveying a consequence of a user's action.\n\n#### Dismissing a passive modal\n\nPassive modals are persistent until dismissed in one of the following ways.\n\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Click elsewhere**: Clicking outside the passive modal area will\n  automatically close the modal.\n- **Esc**: Press `ESC` on the keyboard\n\n<Row>\n<Column colLg={12}>\n\n![Passive modal example](images/modal-usage-passive.png)\n\n</Column>\n</Row>\n\n### Transactional modal\n\nTransactional modals are used to validate user decisions or to gain secondary\nconfirmation from the user. Transactional modals require an action to be taken\nin order for the modal to be completed and closed. It contains a cancel and\nprimary action buttons.\n\n#### Dismissing a transactional modal\n\nTransactional modals are persistent until dismissed in one of the following\nways.\n\n- **Task completion**: clicking the primary action will complete the task and\n  automatically close the modal.\n- **Cancel button**: clicking the cancel button will close the modal and return\n  the user to its previous context. Cancel undoes all applied changes.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Esc**: Press `ESC` on the keyboard.\n\n#### Two buttons\n\nWhen using two buttons, the secondary button is on the left and the primary\nbutton is placed on the right. Each button spans 50% of the dialog and are full\nbleed to the edge.\n\n<Row>\n<Column colLg={8}>\n\n![Two button modal example](images/modal-usage-two-buttons.png)\n\n</Column>\n</Row>\n\n#### Three buttons\n\nIn the rare case where three buttons are needed, each is 25% of the dialog width\nand aligned to the right side of the modal. Only the outmost right button is\nallowed to be a primary button with the other two being secondary buttons. If\nall three actions have the same weight then all three should be secondary\nbuttons.\n\n<Row>\n<Column colLg={8}>\n\n![Three button modal example](images/modal-usage-three-buttons.png)\n\n</Column>\n</Row>\n\n### Danger modal\n\nDanger modal is a specific type of\n[transactional modal](/components/modal/usage#transactional-modal) used for\ndestructive or irreversible actions. In danger modal, the primary button is\nreplaced by a danger button. They are commonly used in high impact moments as a\nconfirmation for an action that would result in a significant data loss if done\naccidentally.\n\n<Row>\n<Column colLg={8}>\n\n![danger modal](images/modal-usage-danger.png)\n\n</Column>\n</Row>\n\n### Acknowledgment modal\n\nAcknowledgment modals are used when the system requires the user to acknowledge\nthe presented information. It contains only a single button, commonly “OK”. \nAcknowledgment is confirmed when the user clicks the primary button.\n\n#### Dismissing an acknowledgment modal\n\nAcknowledgment modals are persistent until dismissed in one of the following\nways.\n\n- **Task completion**: Clicking the primary action will complete the task and\n  automatically close the modal.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting the user's acknowledgement and return the user to the\n  previous context.\n- **Esc**: Press `ESC` on the keyboard.\n\n#### Single button\n\nSingle buttons are placed on the right side, span 50% of the modal, and bleed to\nthe edge. In most scenarios, a primary button is used when one button is needed.\n\n<Row>\n<Column colLg={8}>\n\n![One button modal example](images/modal-usage-one-button.png)\n\n</Column>\n</Row>\n\n### Progress modal\n\nFor longer tasks, use a progress modal to give the user a sense of completion\nand orientation within the focused flow. For complex flows with complex choices,\nconsider using a full page instead of a modal. A progress modal is not a\nsolution for excess modal content. It should only be used to present information\nin more consumable and focused chunks.\n\n#### Dismissing a progress modal\n\nTransactional modals are persistent until dismissed in one of the following\nways.\n\n- **Task completion**: Clicking the primary action will complete the task and\n  automatically close the modal.\n- **Cancel button**: Clicking the Cancel button will close the modal and return\n  the user to its previous context. Cancel undoes all applied changes.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Esc**: Press `ESC` on the keyboard.\n\n#### Button group\n\nThere are three buttons in the progress modal footer: Cancel, Previous, Next.\nEach button’s width is 25% of the dialog window and are full bleed. Previous and\nNext are grouped together and placed on the right half of the dialog, with\nPrevious as a secondary button and Next as a primary button. In the last step of\nthe sequence, the Next button label should change to reflect the final action.\nThe Cancel button is aligned to left side of the dialog and uses a ghost button.\n\n<Row>\n<Column colLg={12}>\n\n![Progress modal example](images/modal-usage-progress.png)\n\n</Column>\n</Row>\n\n## Related\n\n#### Modal vs. notification\n\nModals are highly disruptive and block tasks until dismissed by the user. A\nmodal should only be used as a form of notification if it provides the user with\ncritical information immediately related to their task. For non-critical\nmessaging, consider using a toast or inline notification instead of a modal.\nToast and inline notifications provide users with non-disruptive feedback or the\nstatus of an action without breaking their workflow.\n\n#### Components\n\n- [Notification](/components/notification/usage)\n\n#### Patterns\n\n- [Dialogs](/patterns/dialog-pattern)\n- [Notifications](/patterns/notification-pattern)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"95d4aa84d3070d87d7e22273f2f861c0","counter":3147,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Modal","description":"Modals focus the user’s attention exclusively on one task or piece of information via a window that sits on top of the page content.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Modal\ndescription:\n  Modals focus the user’s attention exclusively on one task or piece of\n  information via a window that sits on top of the page content.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nModals focus the user’s attention exclusively on one task or piece of\ninformation via a window that sits on top of the page content.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink>\n<AnchorLink>Modal types</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nModals are a type of [dialog](/patterns/dialog-pattern) used to present critical\ninformation or request user input needed to complete a user’s workflow. Modals\ninterrupt a user’s workflow by design. When active, a user is blocked from the\non-page content and cannot return to their previous workflow until the modal\ntask is completed or the user dismisses the modal. While effective when used\ncorrectly, modals should be used sparingly to limit disruption to the user.\n\nModal dialogs are commonly used for short and non-frequent tasks, such as\nediting or management tasks. If a user needs to repeatably preform a task,\nconsider making the task do-able from the main page.\n\n### When to use\n\n#### Require an immediate response from the user\n\nUse a dialog to request information that is preventing the system from\ncontinuing a user-initiated process.\n\n#### Notify the user of urgent information\n\nUse a modal dialog to notify the user of urgent information concerning their\ncurrent work. Modal dialogs are commonly used to report system errors or convey\na consequence of a user’s action.\n\n#### Confirm a user decision\n\nUse a modal dialog to confirm user decisions. Clearly describe the action being\nconfirmed and explain any potential consequences that it may cause. Both the\ntitle and the button should reflect the action that will occur. If the action is\ndestructive or irreversible then use a transactional danger modal.\n\n### Types\n\n| Type                                                           | Usage                                                                                                                           |\n| -------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| [Passive](/components/modal/usage#passive-modal)               | Presents information the user needs to be aware of concerning their current workflow. Contains no actions for the user to take. |\n| [Transactional](/components/modal/usage#transactional-modal)   | Requires an action to be taken in order for the modal to be completed and closed. Contains a cancel and primary action buttons. |\n| [Danger](/components/modal/usage#danger-modal)                 | A specific type of transactional modal used for destructive or irreversible actions.                                            |\n| [Acknowledgment](/components/modal/usage#acknowledgment-modal) | System requires an acknowledgement of the information from the user. Contains only a single button, commonly \"OK\".              |\n| [Progress](/components/modal/usage#progress-modal)             | Requires several steps to be completed before it can be closed. Contains a cancel, previous, and next/completion buttons.       |\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'modal',\n      label: 'Modal',\n    },\n    {\n      id: 'scrolling-content',\n      label: 'With scrolling content',\n    },\n  ]}>\n  <ComponentVariant\n    id=\"modal\"\n    knobs={{\n      ModalWrapper: ['passiveModal', 'danger', 'disabled', 'size'],\n    }}\n    links={{\n      React: 'https://react.carbondesignsystem.com/?path=/story/modal--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-modal--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvmodal--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=modal',\n    }}>{`\n    <ModalWrapper\n      buttonTriggerText=\"Launch modal\"\n      modalHeading=\"Modal heading\"\n      modalLabel=\"Label\"\n    >\n      <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. Duis quis odio ultrices, cursus lacus ac, posuere felis. Donec dignissim libero in augue mattis, a molestie metus vestibulum. Aliquam placerat felis ultrices lorem condimentum, nec ullamcorper felis porttitor. </p>\n    </ModalWrapper>\n`}</ComponentVariant>\n  <ComponentVariant\n    id=\"scrolling-content\"\n    links={{\n      React: 'https://react.carbondesignsystem.com/?path=/story/modal--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-modal--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvmodal--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=modal',\n    }}>{`\n    <ModalWrapper\n      hasScrollingContent\n      size=\"sm\"\n      buttonTriggerText=\"Launch modal\"\n      modalHeading=\"Modal heading\"\n      modalLabel=\"Label\"\n    >\n      <>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <h3>\n          Lorem ipsum\n        </h3>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id accumsan augue. Phasellus consequat augue vitae tellus tincidunt posuere. Curabitur justo urna, consectetur vel elit iaculis, ultrices condimentum risus. Nulla facilisi. Etiam venenatis molestie tellus. Quisque consectetur non risus eu rutrum. \n        </p>\n      </>\n    </ModalWrapper>\n`}</ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Modal anatomy diagram](images/modal-usage-anatomy.png)\n\n</Column>\n</Row>\n\nThe modal is composed of three distinct zones: A header, the body, and a footer.\nComponents (eg. data table, form, progress indicator) can occupy the full width\nof the modal.\n\n1. **Header**: Includes a title, optional label, and the close icon.\n\n2. **Body**: Contains the information and/or controls needed to complete the\n   modal's task. It can include message text and components.\n\n3. **Footer**: Contains the main actions needed to complete or cancel the dialog\n   task. Button groupings change based on modal variant.\n\n4. **x**: The close `x` icon will close the dialog without submitting any data.\n\n5. **Overlay**: Screen overlay that obscures the on-page content.\n\n### Sizing\n\nThere are four responsive [modal sizes](/components/modal/style#sizes): **xs,\nsmall, default, large**. Choose a size that works best for the amount of modal\ncontent you have. Modals with short messages should use a xs or small modal to\navoid long single lines; for complex components, like data table the default or\nlarge modal will be more accommodating.\n\n<Row>\n<Column colLg={8}>\n\n![Modal sizes](images/modal-usage-sizes.png)\n\n</Column>\n</Row>\n\n#### Max heights\n\nEach modal size has a [max height](/components/modal/style#max-sizes) in order\nto maintain a proper window ratio. If your modal has too much scrolling due to a\nmax height consider using the next modal size up. If the large modal height is\nstill not enough space then this is an indicator that a full page may be needed\ninstead.\n\n<Row>\n<Column colLg={8}>\n\n![Modal max heights](images/modal-usage-max-heights.png)\n\n</Column>\n</Row>\n\n### Alignment\n\nInside of a modal, body copy, including titles, have a 20%\n[margin-right](/components/modal/style#margin-right). However, form inputs and\nother components expand the full width of a modal window.\n\n<Row>\n<Column colLg={8}>\n\n![Modal alignment](images/modal-usage-alignment.png)\n\n</Column>\n</Row>\n\n## Content\n\n### Main elements\n\n#### Title\n\n- The title should be brief, using a verb plus noun combination that clearly\n  describes the dialog’s task or purpose.\n- You can use an optional label above the title to set the context for the\n  information in the dialog.\n\n#### Body copy\n\n- A modal should include only content relevant to completing the current task.\n- Text should only be 80% of the modal’s width and components can span 100% of\n  the width.\n\n#### Footer\n\n- Use descriptive words for the actions such as Add, Delete, and Save. Avoid\n  vague words like Done or OK. For a list of approved action labels, see\n  Carbon's\n  [content guidelines](https://www.carbondesignsystem.com/guidelines/content/action-labels).\n- If you need to include a “docs” or other non-primary action, include it as a\n  link in the modal’s body.\n\n### Overflow content\n\nWhen the modal content is longer than the modal height then the body section\nshould scroll vertically with the header and footer remaining fixed in place.\nThe content should visibly fade at the end of the modal body area to indicate\nthere is additional content out of view.\n\nModal content should never scroll horizontally; instead, use a larger size\nmodal.\n\n<Row>\n<Column colLg={8}>\n\n![Overflow content example](images/modal-usage-scrolling.png)\n\n</Column>\n</Row>\n\n### Title as message\n\nFor short, direct messages the title can include the whole message to add visual\nclarity to an otherwise repetitive title and body message. When using this\nstyle, no other body copy may be included.\n\n<Row>\n<Column colLg={8}>\n\n![Title as message example](images/modal-usage-title.png)\n\n</Column>\n</Row>\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Behaviors\n\n### Trigger\n\nModals are triggered as a result of a user’s action and are not system\ngenerated. Common components that can trigger a modal include, button, link, or\nicon. On a keyboard, selecting `Enter` or `Space` should launch the modal.\n\n### Focus\n\nOnce the modal is open, set the initial focus to the first location that accepts\nuser input. For example, if the modal contains a form then the focus should\nautomatically be set to the first field when opened. If it is a transactional\nmodal without form inputs in the body section then the first focus should be on\nthe primary button.\n\nFocus should then remain trapped in the dialog until it is closed. When\nnavigating by keyboard, `Tab` and `Shift-Tab` do not move the focus outside of\nthe modal.\n\n<Row>\n<Column colLg={8}>\n\n![Modal focus example](images/modal-usage-focus.png)\n\n</Column>\n</Row>\n\n### Loading\n\nThe task completion action should take place immediately. If a longer loading\nperiod is needed then a [loading spinner](/components/loading/usage) and overlay\nshould appear on top of the modal body area with content disabled. The primary\naction button should be disabled while loading is in progress.\n\nIf a quick loading period is needed then use a\n[inline loading](/patterns/loading-pattern#inline-loading) behavior on the\nprimary button to indicate the data is being processed.\n\n<Row>\n<Column colLg={12}>\n\n![Modal loading options](images/modal-usage-loading.png)\n\n</Column>\n</Row>\n\n### Validation\n\nValidate a user’s entries before the modal is closed. If any entry is invalid\nthen the modal should remain open with the entry marked in an error state and\ninclude an inline error message. The message should inform the user what has\nhappened and provide guidance on next steps or possible resolutions. Effective\nand immediate error messaging can help the user to understand the problem and\nhow to fix it.\n\nWhen possible, we recommend validating the user’s data before submission. This\ntype of inline validation (aka client-side validation) should happen as soon as\nthe field loses focus. This will help easily identify the elements that need to\nbe corrected. On field error messages should disappear when the form criteria is\nmet. If the data was not able to be submitted due to server-side issues then an\ninline notification should appear.\n\n<Row>\n<Column colLg={8}>\n\n![Validation example](images/modal-usage-invalid.png)\n\n</Column>\n</Row>\n\n## Modal types\n\n### Passive modal\n\nPassive modals presents information the user needs to be aware of concerning\ntheir current workflow. It contains no actions for the user to take and should\nnot include any data that needs to be submitted. They serve as a type of\nnotification alerting the user to urgent information such as reporting system\nerrors or conveying a consequence of a user's action.\n\n#### Dismissing a passive modal\n\nPassive modals are persistent until dismissed in one of the following ways.\n\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Click elsewhere**: Clicking outside the passive modal area will\n  automatically close the modal.\n- **Esc**: Press `ESC` on the keyboard\n\n<Row>\n<Column colLg={12}>\n\n![Passive modal example](images/modal-usage-passive.png)\n\n</Column>\n</Row>\n\n### Transactional modal\n\nTransactional modals are used to validate user decisions or to gain secondary\nconfirmation from the user. Transactional modals require an action to be taken\nin order for the modal to be completed and closed. It contains a cancel and\nprimary action buttons.\n\n#### Dismissing a transactional modal\n\nTransactional modals are persistent until dismissed in one of the following\nways.\n\n- **Task completion**: clicking the primary action will complete the task and\n  automatically close the modal.\n- **Cancel button**: clicking the cancel button will close the modal and return\n  the user to its previous context. Cancel undoes all applied changes.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Esc**: Press `ESC` on the keyboard.\n\n#### Two buttons\n\nWhen using two buttons, the secondary button is on the left and the primary\nbutton is placed on the right. Each button spans 50% of the dialog and are full\nbleed to the edge.\n\n<Row>\n<Column colLg={8}>\n\n![Two button modal example](images/modal-usage-two-buttons.png)\n\n</Column>\n</Row>\n\n#### Three buttons\n\nIn the rare case where three buttons are needed, each is 25% of the dialog width\nand aligned to the right side of the modal. Only the outmost right button is\nallowed to be a primary button with the other two being secondary buttons. If\nall three actions have the same weight then all three should be secondary\nbuttons.\n\n<Row>\n<Column colLg={8}>\n\n![Three button modal example](images/modal-usage-three-buttons.png)\n\n</Column>\n</Row>\n\n### Danger modal\n\nDanger modal is a specific type of\n[transactional modal](/components/modal/usage#transactional-modal) used for\ndestructive or irreversible actions. In danger modal, the primary button is\nreplaced by a danger button. They are commonly used in high impact moments as a\nconfirmation for an action that would result in a significant data loss if done\naccidentally.\n\n<Row>\n<Column colLg={8}>\n\n![danger modal](images/modal-usage-danger.png)\n\n</Column>\n</Row>\n\n### Acknowledgment modal\n\nAcknowledgment modals are used when the system requires the user to acknowledge\nthe presented information. It contains only a single button, commonly “OK”. \nAcknowledgment is confirmed when the user clicks the primary button.\n\n#### Dismissing an acknowledgment modal\n\nAcknowledgment modals are persistent until dismissed in one of the following\nways.\n\n- **Task completion**: Clicking the primary action will complete the task and\n  automatically close the modal.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting the user's acknowledgement and return the user to the\n  previous context.\n- **Esc**: Press `ESC` on the keyboard.\n\n#### Single button\n\nSingle buttons are placed on the right side, span 50% of the modal, and bleed to\nthe edge. In most scenarios, a primary button is used when one button is needed.\n\n<Row>\n<Column colLg={8}>\n\n![One button modal example](images/modal-usage-one-button.png)\n\n</Column>\n</Row>\n\n### Progress modal\n\nFor longer tasks, use a progress modal to give the user a sense of completion\nand orientation within the focused flow. For complex flows with complex choices,\nconsider using a full page instead of a modal. A progress modal is not a\nsolution for excess modal content. It should only be used to present information\nin more consumable and focused chunks.\n\n#### Dismissing a progress modal\n\nTransactional modals are persistent until dismissed in one of the following\nways.\n\n- **Task completion**: Clicking the primary action will complete the task and\n  automatically close the modal.\n- **Cancel button**: Clicking the Cancel button will close the modal and return\n  the user to its previous context. Cancel undoes all applied changes.\n- **x**: Clicking the close `x` icon in the upper right will close the modal\n  without submitting any data and return the user to its previous context.\n- **Esc**: Press `ESC` on the keyboard.\n\n#### Button group\n\nThere are three buttons in the progress modal footer: Cancel, Previous, Next.\nEach button’s width is 25% of the dialog window and are full bleed. Previous and\nNext are grouped together and placed on the right half of the dialog, with\nPrevious as a secondary button and Next as a primary button. In the last step of\nthe sequence, the Next button label should change to reflect the final action.\nThe Cancel button is aligned to left side of the dialog and uses a ghost button.\n\n<Row>\n<Column colLg={12}>\n\n![Progress modal example](images/modal-usage-progress.png)\n\n</Column>\n</Row>\n\n## Related\n\n#### Modal vs. notification\n\nModals are highly disruptive and block tasks until dismissed by the user. A\nmodal should only be used as a form of notification if it provides the user with\ncritical information immediately related to their task. For non-critical\nmessaging, consider using a toast or inline notification instead of a modal.\nToast and inline notifications provide users with non-disruptive feedback or the\nstatus of an action without breaking their workflow.\n\n#### Components\n\n- [Notification](/components/notification/usage)\n\n#### Patterns\n\n- [Dialogs](/patterns/dialog-pattern)\n- [Notifications](/patterns/notification-pattern)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/components/modal/usage.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}