{"componentChunkName":"component---src-pages-components-notification-usage-mdx","path":"/components/notification/usage/","result":{"pageContext":{"frontmatter":{"title":"Notification","description":"Notifications are messages that communicate information to the user. The two main types of notifications are toast notifications and inline notifications.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/notification/usage.mdx","titleType":"prepend","MdxNode":{"id":"58bc83b7-e994-5cec-9632-ac4cba9ee4bc","children":[],"parent":"b5638cd1-ca7f-509e-92ff-049bda597216","internal":{"content":"---\ntitle: Notification\ndescription:\n  Notifications are messages that communicate information to the user. The two\n  main types of notifications are toast notifications and inline notifications.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nNotifications are messages that communicate information to the user. The two\nmain types of notifications are toast notifications and inline notifications.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Inline notifications</AnchorLink>\n<AnchorLink>Toast notifications</AnchorLink>\n<AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\n### When to use\n\nUse notifications to inform users of updates or changes to system status.\nCommunicating with users and providing immediate feedback are important for\nbuilding trust. While notifications are an effective method of communicating\nwith users, they are disruptive and should be used sparingly.\n\nFor more context on when to use each notification type, including modals, refer\nto the [notifications pattern](/patterns/notification-pattern/). Carbon only\nsupports inline, toast, and modal notification types, although some product\nteams also support banners and notification centers.\n\n### Types\n\n| Type                            | Purpose                                                                                                                                                          |\n| ------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [Inline](#inline-notifications) | Inline notifications show up in task flows, to notify users of the status of an action. They usually appear at the top of the primary content area.              |\n| [Toast](#toast-notifications)   | Toasts are non-modal, time-based window elements used to display short messages; they usually appear at the top of the screen and disappear after a few seconds. |\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'toast',\n      label: 'Toast notification',\n    },\n    {\n      id: 'inline',\n      label: 'Inline notification',\n    },\n  ]}>\n  <ComponentVariant\n    id=\"toast\"\n    knobs={{\n      ToastNotification: ['hideCloseButton', 'kind', 'lowContrast'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/notifications--toast',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-notification--toast',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvtoastnotification--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=notification',\n    }}>{`\n    <div>\n      <ToastNotification\n        caption=\"00:00:00 AM\"\n        iconDescription=\"describes the close button\"\n        subtitle={<span>Subtitle text goes here. <a href=\"#example\">Example link</a></span>}\n        timeout={0}\n        title=\"Notification title\"\n      />\n    </div>\n`}</ComponentVariant>\n  <ComponentVariant\n    id=\"inline\"\n    knobs={{\n      InlineNotification: ['hideCloseButton', 'lowContrast'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/notifications--inline',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-notification--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvinlinenotification--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=notification',\n    }}>{`\n  <div>\n    <InlineNotification\n      kind=\"info\"\n      actions={<NotificationActionButton>Action</NotificationActionButton>}\n      iconDescription=\"describes the close button\"\n      subtitle={<span>Subtitle text goes here. <a href=\"#example\">Example link</a></span>}\n      title=\"Notification title\"\n    />\n  </div>\n`}</ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![notification anatomy image](images/01_notification_anatomy.png)\n\n</Column>\n</Row>\n\n1. **Icon:** Informs users of the type of notification at a glance.\n2. **Title:** Gives users a quick overview of the notification.\n3. **Message (optional):** Provides additional detail and actionable steps for\n   the user to take.\n4. **Inline notification action (optional):** Ghost button that allows users to\n   address the notification or navigates them to a page with further details.\n5. **Close button (optional):** Closes the notification.\n6. **Time stamp (optional):** Shows the time the toast notification was sent.\n\n## Content\n\nNotifications provide limited space for content, and therefore the content must\nbe short and concise. A user should be able to quickly scan the notification, be\napprised of the situation, and know what to do next.\n\n### Main elements\n\n#### Title\n\n- The title should be short and descriptive, explaining the most important piece\n  of information.\n- When possible, communicate the main message using just the title.\n- Use a period only if the title is a full sentence.\n\n#### Body content\n\n- Be concise and avoid repeating or paraphrasing the title.\n- Limit content to one or two short sentences.\n- Explain how to resolve the issue by including any troubleshooting actions or\n  next steps. You can include links within the notification body that redirect\n  the user to next steps.\n\n#### Action\n\n- Keep labels concise and clearly indicate the action the user can take.\n- Limit action labels to one or two words. For a list of recommended action\n  labels, see Carbon's\n  [content guidelines](https://www.carbondesignsystem.com/guidelines/content/action-labels).\n\n### Overflow\n\nIf a toast or inline notification requires a message longer than two lines,\ninclude a short message with a “View more” link that takes the user to a view of\nthe full notification message. This can be either a full page with more details\nor a modal.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Inline notifications\n\n### Formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification with action button](images/02_notification_format_608.png)\n\n</Column>\n</Row>\n\n#### Action\n\nInline notifications have an optional ghost button action that is adjacent to\nthe title and body content. On mobile screens the action button wraps under the\nbody content. This button should allow users to take further action on the\nnotification.\n\n#### Sizing\n\nThe width of inline notifications varies based on content and layout. They can\nexpand to the fill the container or content area they relate to. Their height is\nbased on the content length, which should not exceed two lines of text.\n\n#### Placement\n\nInline notifications appear near their related items. They can expand to fill\nthe width of the container or content area they are in and should align to the\ngrid columns.\n\nWe recommend placing inline notifications at the bottom of forms, just above the\nsubmission and cancel buttons. When error notifications apply to individual text\ninputs, they should supplement the error state on that specific input field.\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification placement](images/03_notification_placement_inline_608.png)\n\n<Caption>\n  Example of an inline notification supporting an error message on a form\n</Caption>\n\n</Column>\n</Row>\n\n### Behavior\n\n#### Dismissal\n\nInline notifications do not dismiss automatically. They persist on the page\nuntil the user dismisses them or takes action that resolves the notification.\n\nA small \"x\" in the top right corner is used to dismiss inline notifications.\nIncluding the close button is optional and should not be included if it is\ncritical for a user to read or interact with the notification.\n\n## Toast notifications\n\n### Formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification with action button and time stamp](images/04_toast_format_608.png)\n\n</Column>\n</Row>\n\n#### Action\n\nCarbon toast notifications are not fully accessible when they include\ninteractive content. Using links and other interactive content in toasts breaks\nWCAG 2.1 compliance and should therefore be avoided. The Carbon team is aware of\nthe accessibility concerns and is currently working on deprecating this\nfunctionality.\n\n#### Time stamp\n\nToast notifications include a time stamp at the bottom the container. The time\nstamp shows the time the notification was sent. Using time stamps is optional\nbut toasts should be consistent across the product so either all toasts should\ninclude time stamps or none of them should. The time stamp is optional and can\nbe removed if a third line of content is needed.\n\n#### Sizing\n\nToast notifications use a fixed width and their height depends on the length of\nthe notification message. As noted in the content guidelines, limit toast\nnotifications to two lines of text.\n\n#### Placement\n\nToast notifications slide in and out from the top right of the screen. They\nstack with `$spacing-03` in-between. New toast notifications should appear at\nthe top of the list, with older notifications being pushed down until they are\ndismissed.\n\nActionable toast notifications do not appear on mobile screen widths.\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification placement](images/05_toast_context_608.png)\n\n</Column>\n</Row>\n\n### Behavior\n\n#### Dismissal\n\nToasts dismiss automatically after five seconds on the screen. They can also\ninclude a close button so users can dismiss them sooner. Toasts cover content on\nthe screen so they should always be easily dismissed. Because toast\nnotifications dismiss automatically, users must be able to access them elsewhere\nafter the toast disappears. This allows them to be accessible for users who need\nmore time reading the notification or who may want to refer back to the\nnotification.\n\n## Modifiers\n\n### High and low contrast\n\nCarbon supports high and low contrast style notifications. High-contrast\nnotifications are best for critical messaging while low-contrast notifications\nare less visually disruptive for users.\n\nIt's up to the product team to decide which notification style to use in their\nproduct. Inline and toast notifications can use different styles but you should\nnever mix styles within each notification type. When in doubt, use low-contrast\nnotifications.\n\n<Row>\n<Column colLg={8}>\n\n![High and low contrast inline notifications](images/06_notification_contrast_608.png)\n\n<Caption>\n    High contrast notification (top); low contrast notification (bottom)\n</Caption>\n</Column>\n</Row>\n\n## Related\n\n- [Modal component](https://www.carbondesignsystem.com/components/modal/usage/)\n- [Notifications pattern](https://www.carbondesignsystem.com/patterns/notification-pattern)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"02829f5a773a071c53f18681395d5526","counter":3143,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Notification","description":"Notifications are messages that communicate information to the user. The two main types of notifications are toast notifications and inline notifications.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Notification\ndescription:\n  Notifications are messages that communicate information to the user. The two\n  main types of notifications are toast notifications and inline notifications.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nNotifications are messages that communicate information to the user. The two\nmain types of notifications are toast notifications and inline notifications.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Inline notifications</AnchorLink>\n<AnchorLink>Toast notifications</AnchorLink>\n<AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\n### When to use\n\nUse notifications to inform users of updates or changes to system status.\nCommunicating with users and providing immediate feedback are important for\nbuilding trust. While notifications are an effective method of communicating\nwith users, they are disruptive and should be used sparingly.\n\nFor more context on when to use each notification type, including modals, refer\nto the [notifications pattern](/patterns/notification-pattern/). Carbon only\nsupports inline, toast, and modal notification types, although some product\nteams also support banners and notification centers.\n\n### Types\n\n| Type                            | Purpose                                                                                                                                                          |\n| ------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [Inline](#inline-notifications) | Inline notifications show up in task flows, to notify users of the status of an action. They usually appear at the top of the primary content area.              |\n| [Toast](#toast-notifications)   | Toasts are non-modal, time-based window elements used to display short messages; they usually appear at the top of the screen and disappear after a few seconds. |\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'toast',\n      label: 'Toast notification',\n    },\n    {\n      id: 'inline',\n      label: 'Inline notification',\n    },\n  ]}>\n  <ComponentVariant\n    id=\"toast\"\n    knobs={{\n      ToastNotification: ['hideCloseButton', 'kind', 'lowContrast'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/notifications--toast',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-notification--toast',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvtoastnotification--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=notification',\n    }}>{`\n    <div>\n      <ToastNotification\n        caption=\"00:00:00 AM\"\n        iconDescription=\"describes the close button\"\n        subtitle={<span>Subtitle text goes here. <a href=\"#example\">Example link</a></span>}\n        timeout={0}\n        title=\"Notification title\"\n      />\n    </div>\n`}</ComponentVariant>\n  <ComponentVariant\n    id=\"inline\"\n    knobs={{\n      InlineNotification: ['hideCloseButton', 'lowContrast'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/notifications--inline',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-notification--basic',\n      Vue:\n        'http://vue.carbondesignsystem.com/?path=/story/components-cvinlinenotification--default',\n      Vanilla: 'https://the-carbon-components.netlify.com/?nav=notification',\n    }}>{`\n  <div>\n    <InlineNotification\n      kind=\"info\"\n      actions={<NotificationActionButton>Action</NotificationActionButton>}\n      iconDescription=\"describes the close button\"\n      subtitle={<span>Subtitle text goes here. <a href=\"#example\">Example link</a></span>}\n      title=\"Notification title\"\n    />\n  </div>\n`}</ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![notification anatomy image](images/01_notification_anatomy.png)\n\n</Column>\n</Row>\n\n1. **Icon:** Informs users of the type of notification at a glance.\n2. **Title:** Gives users a quick overview of the notification.\n3. **Message (optional):** Provides additional detail and actionable steps for\n   the user to take.\n4. **Inline notification action (optional):** Ghost button that allows users to\n   address the notification or navigates them to a page with further details.\n5. **Close button (optional):** Closes the notification.\n6. **Time stamp (optional):** Shows the time the toast notification was sent.\n\n## Content\n\nNotifications provide limited space for content, and therefore the content must\nbe short and concise. A user should be able to quickly scan the notification, be\napprised of the situation, and know what to do next.\n\n### Main elements\n\n#### Title\n\n- The title should be short and descriptive, explaining the most important piece\n  of information.\n- When possible, communicate the main message using just the title.\n- Use a period only if the title is a full sentence.\n\n#### Body content\n\n- Be concise and avoid repeating or paraphrasing the title.\n- Limit content to one or two short sentences.\n- Explain how to resolve the issue by including any troubleshooting actions or\n  next steps. You can include links within the notification body that redirect\n  the user to next steps.\n\n#### Action\n\n- Keep labels concise and clearly indicate the action the user can take.\n- Limit action labels to one or two words. For a list of recommended action\n  labels, see Carbon's\n  [content guidelines](https://www.carbondesignsystem.com/guidelines/content/action-labels).\n\n### Overflow\n\nIf a toast or inline notification requires a message longer than two lines,\ninclude a short message with a “View more” link that takes the user to a view of\nthe full notification message. This can be either a full page with more details\nor a modal.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Inline notifications\n\n### Formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification with action button](images/02_notification_format_608.png)\n\n</Column>\n</Row>\n\n#### Action\n\nInline notifications have an optional ghost button action that is adjacent to\nthe title and body content. On mobile screens the action button wraps under the\nbody content. This button should allow users to take further action on the\nnotification.\n\n#### Sizing\n\nThe width of inline notifications varies based on content and layout. They can\nexpand to the fill the container or content area they relate to. Their height is\nbased on the content length, which should not exceed two lines of text.\n\n#### Placement\n\nInline notifications appear near their related items. They can expand to fill\nthe width of the container or content area they are in and should align to the\ngrid columns.\n\nWe recommend placing inline notifications at the bottom of forms, just above the\nsubmission and cancel buttons. When error notifications apply to individual text\ninputs, they should supplement the error state on that specific input field.\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification placement](images/03_notification_placement_inline_608.png)\n\n<Caption>\n  Example of an inline notification supporting an error message on a form\n</Caption>\n\n</Column>\n</Row>\n\n### Behavior\n\n#### Dismissal\n\nInline notifications do not dismiss automatically. They persist on the page\nuntil the user dismisses them or takes action that resolves the notification.\n\nA small \"x\" in the top right corner is used to dismiss inline notifications.\nIncluding the close button is optional and should not be included if it is\ncritical for a user to read or interact with the notification.\n\n## Toast notifications\n\n### Formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification with action button and time stamp](images/04_toast_format_608.png)\n\n</Column>\n</Row>\n\n#### Action\n\nCarbon toast notifications are not fully accessible when they include\ninteractive content. Using links and other interactive content in toasts breaks\nWCAG 2.1 compliance and should therefore be avoided. The Carbon team is aware of\nthe accessibility concerns and is currently working on deprecating this\nfunctionality.\n\n#### Time stamp\n\nToast notifications include a time stamp at the bottom the container. The time\nstamp shows the time the notification was sent. Using time stamps is optional\nbut toasts should be consistent across the product so either all toasts should\ninclude time stamps or none of them should. The time stamp is optional and can\nbe removed if a third line of content is needed.\n\n#### Sizing\n\nToast notifications use a fixed width and their height depends on the length of\nthe notification message. As noted in the content guidelines, limit toast\nnotifications to two lines of text.\n\n#### Placement\n\nToast notifications slide in and out from the top right of the screen. They\nstack with `$spacing-03` in-between. New toast notifications should appear at\nthe top of the list, with older notifications being pushed down until they are\ndismissed.\n\nActionable toast notifications do not appear on mobile screen widths.\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification placement](images/05_toast_context_608.png)\n\n</Column>\n</Row>\n\n### Behavior\n\n#### Dismissal\n\nToasts dismiss automatically after five seconds on the screen. They can also\ninclude a close button so users can dismiss them sooner. Toasts cover content on\nthe screen so they should always be easily dismissed. Because toast\nnotifications dismiss automatically, users must be able to access them elsewhere\nafter the toast disappears. This allows them to be accessible for users who need\nmore time reading the notification or who may want to refer back to the\nnotification.\n\n## Modifiers\n\n### High and low contrast\n\nCarbon supports high and low contrast style notifications. High-contrast\nnotifications are best for critical messaging while low-contrast notifications\nare less visually disruptive for users.\n\nIt's up to the product team to decide which notification style to use in their\nproduct. Inline and toast notifications can use different styles but you should\nnever mix styles within each notification type. When in doubt, use low-contrast\nnotifications.\n\n<Row>\n<Column colLg={8}>\n\n![High and low contrast inline notifications](images/06_notification_contrast_608.png)\n\n<Caption>\n    High contrast notification (top); low contrast notification (bottom)\n</Caption>\n</Column>\n</Row>\n\n## Related\n\n- [Modal component](https://www.carbondesignsystem.com/components/modal/usage/)\n- [Notifications pattern](https://www.carbondesignsystem.com/patterns/notification-pattern)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/Users/jvernon/Documents/Design System/carbon/carbon-website/src/pages/components/notification/usage.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2368708353","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","711213475","768070550"]}