(window.webpackJsonp=window.webpackJsonp||[]).push([[1958],{"013z":function(e,a,t){"use strict";var n=t("q1tI"),o=t.n(n),l=t("NmYn"),r=t.n(l),c=t("Wbzz"),s=t("Xrax"),b=t("a7k6"),d=t("TSYQ"),i=t.n(d),p=t("QH2O"),u=t("qKvR");var m=({title:e,tabs:a=[]})=>Object(u.b)("div",{className:i()(p.pageHeader,{[p.withTabs]:a.length})},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12"},Object(u.b)("h1",{id:"page-title",className:p.text},e))))),h=t("BAC9");var T=({relativePagePath:e,repository:a})=>{const{site:{siteMetadata:{repository:t}}}=Object(c.useStaticQuery)("1364590287"),{baseUrl:n,subDirectory:o,branch:l}=a||t,r=`${n}/edit/${l}${o}/src/pages${e}`;return n?Object(u.b)("div",{className:"bx--row "+h.row},Object(u.b)("div",{className:"bx--col"},Object(u.b)("a",{className:h.link,href:r},"Edit this page on GitHub"))):null},g=t("FCXl"),w=t("I8xM");class y extends o.a.Component{render(){const{tabs:e,slug:a}=this.props,t=a.split("/").filter(Boolean).slice(-1)[0],n=e.map(e=>{const n=r()(e,{lower:!0,strict:!0}),o=n===t,l=new RegExp(t+"/?(#.*)?$"),s=a.replace(l,n);return Object(u.b)("li",{key:e,className:i()({[w.selectedItem]:o},w.listItem)},Object(u.b)(c.Link,{className:w.link,to:""+s},e))});return Object(u.b)("div",{className:w.tabsContainer},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(u.b)("nav",null,Object(u.b)("ul",{className:w.list},n))))))}}var x=y,P=t("MjG9");a.a=({pageContext:e,children:a,location:t,Title:n})=>{const{frontmatter:o={},relativePagePath:l,titleType:d}=e,{tabs:i,title:p,theme:h,description:w,keywords:y}=o,{site:{pathPrefix:O}}=Object(c.useStaticQuery)("2456312558"),j=O?t.pathname.replace(O,""):t.pathname,v=i?j.split("/").filter(Boolean).slice(-1)[0]||r()(i[0],{lower:!0}):"";return Object(u.b)(b.a,{tabs:i,homepage:!1,theme:h,pageTitle:p,pageDescription:w,pageKeywords:y,titleType:d},Object(u.b)(m,{title:n?Object(u.b)(n,null):p,label:"label",tabs:i}),i&&Object(u.b)(x,{slug:j,tabs:i,currentTab:v}),Object(u.b)(P.a,{padded:!0},a,Object(u.b)(T,{relativePagePath:l})),Object(u.b)(g.a,{pageContext:e,location:t,slug:j,tabs:i,currentTab:v}),Object(u.b)(s.a,null))}},BAC9:function(e,a,t){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,a,t){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},QH2O:function(e,a,t){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},tBjn:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return p})),t.d(a,"default",(function(){return j}));t("3bBZ");var n=t("q1tI"),o=t("7ljp"),l=t("013z"),r=t("embT"),c=t("aqye"),s=t("18FV"),b=t("F83D");t("qKvR");function d(){return(d=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const p={},u=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",a)},m=u("PageDescription"),h=u("Row"),T=u("Column"),g=u("ResourceCard"),w=u("MdxIcon"),y=u("ComponentDemo"),x=u("ComponentVariant"),P={_frontmatter:p},O=l.a;function j(e){let{components:a}=e,t=i(e,["components"]);return Object(o.b)(O,d({},P,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)(m,{mdxType:"PageDescription"},Object(o.b)("p",null,"Preview the data table component with the React live demo. For detailed code\nusage documentation, see the Storybooks for each framework below.")),Object(o.b)("h2",null,"Documentation"),Object(o.b)(h,{className:"resource-card-group",mdxType:"Row"},Object(o.b)(T,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},Object(o.b)(g,{subTitle:"React",href:"http://react.carbondesignsystem.com/?path=/story/datatable--default",mdxType:"ResourceCard"},Object(o.b)(w,{name:"react",mdxType:"MdxIcon"}))),Object(o.b)(T,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},Object(o.b)(g,{subTitle:"Angular (Community)",href:"https://angular.carbondesignsystem.com/?path=/story/components-data-table--basic",mdxType:"ResourceCard"},Object(o.b)(w,{name:"angular",mdxType:"MdxIcon"}))),Object(o.b)(T,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},Object(o.b)(g,{subTitle:"Vue (Community)",href:"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--minimal",mdxType:"ResourceCard"},Object(o.b)(w,{name:"vue",mdxType:"MdxIcon"})))),Object(o.b)("h2",null,"Live demo"),Object(o.b)(y,{components:[{id:"default-table",label:"Default"},{id:"with-selection",label:"With selection"},{id:"with-expansion",label:"With expansion"},{id:"with-batch-actions",label:"With batch actions"}],scope:{rowData:r.b,headerData:r.a,React:n,Delete:c.a,Save:s.a,Download:b.a},mdxType:"ComponentDemo"},Object(o.b)(x,{id:"default-table",knobs:{DataTable:["isSortable"],Table:["size","useZebraStyles"]},links:{React:"https://react.carbondesignsystem.com/?path=/story/datatable--default",Angular:"https://angular.carbondesignsystem.com/?path=/story/components-table--basic",Vue:"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--minimal",Vanilla:"https://the-carbon-components.netlify.com/?nav=data-table"},mdxType:"ComponentVariant"},'<DataTable\n    rows={rowData}\n    headers={headerData}\n    render={({ rows, headers, getHeaderProps, getTableProps }) => (\n    <TableContainer title="DataTable">\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            {headers.map(header => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              {row.cells.map(cell => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>)}\n    />'),Object(o.b)(x,{id:"with-selection",knobs:{DataTable:["isSortable"],Table:["size","useZebraStyles"]},links:{React:"https://react.carbondesignsystem.com/?path=/story/datatable--with-selection",Angular:"https://angular.carbondesignsystem.com/?path=/story/components-table--basic",Vue:"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--default",Vanilla:"https://the-carbon-components.netlify.com/?nav=data-table"},mdxType:"ComponentVariant"},'<DataTable\n  rows={rowData}\n  headers={headerData}\n  render={({ rows, headers, getHeaderProps, getSelectionProps, getRowProps, getTableProps }) => (\n  <TableContainer title="DataTable with selection">\n    <Table {...getTableProps()}>\n      <TableHead>\n        <TableRow>\n          <TableSelectAll {...getSelectionProps()} />\n          {headers.map(header => (\n            <TableHeader {...getHeaderProps({ header })}>\n              {header.header}\n            </TableHeader>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(row => (\n          <TableRow {...getRowProps({ row })}>\n            <TableSelectRow {...getSelectionProps({ row })} />\n            {row.cells.map(cell => (\n              <TableCell key={cell.id}>{cell.value}</TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>)}\n/>'),Object(o.b)(x,{id:"with-expansion",knobs:{DataTable:["isSortable"]},links:{React:"https://react.carbondesignsystem.com/?path=/story/datatable--with-expansion",Angular:"https://angular.carbondesignsystem.com/?path=/story/components-table--with-expansion",Vue:"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--slotted-expanding-data",Vanilla:"https://the-carbon-components.netlify.com/?nav=data-table"},mdxType:"ComponentVariant"},'<DataTable\n  rows={rowData}\n  headers={headerData}\n  render={({ rows, headers, getHeaderProps, getRowProps, getTableProps }) => (\n  <TableContainer title="DataTable with expansion">\n    <Table {...getTableProps()}>\n      <TableHead>\n        <TableRow>\n          <TableExpandHeader />\n          {headers.map(header => (\n            <TableHeader {...getHeaderProps({ header })}>\n              {header.header}\n            </TableHeader>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(row => (\n          <React.Fragment key={row.id}>\n            <TableExpandRow {...getRowProps({ row })}>\n              {row.cells.map(cell => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableExpandRow>\n            {row.isExpanded && (\n              <TableExpandedRow colSpan={headers.length + 1}>\n                <p>Aux squad rules</p>\n              </TableExpandedRow>\n            )}\n          </React.Fragment>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n)}/>'),Object(o.b)(x,{id:"with-batch-actions",links:{React:"https://react.carbondesignsystem.com/?path=/story/datatable--with-batch-actions",Angular:"https://angular.carbondesignsystem.com/?path=/story/components-table--with-toolbar",Vue:"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--default",Vanilla:"https://the-carbon-components.netlify.com/?nav=data-table"},mdxType:"ComponentVariant"},"<DataTable\n  rows={rowData}\n  headers={headerData}\n  render={({ rows,\n      headers,\n      getHeaderProps,\n      getRowProps,\n      getSelectionProps,\n      getBatchActionProps,\n      onInputChange,\n      selectedRows,}) => (\n  <TableContainer title=\"DataTable with batch actions\">\n    <TableToolbar>\n          <TableBatchActions {...getBatchActionProps()}>\n            <TableBatchAction\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n              renderIcon={Delete}\n              onClick={()=>console.log('clicked')}>\n              Delete\n            </TableBatchAction>\n            <TableBatchAction\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n              renderIcon={Save}\n              onClick={()=>console.log('clicked')}>\n              Save\n            </TableBatchAction>\n            <TableBatchAction\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n              renderIcon={Download}\n              onClick={()=>console.log('clicked')}>\n              Download\n            </TableBatchAction>\n          </TableBatchActions>\n          <TableToolbarContent>\n            <TableToolbarSearch\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n              onChange={onInputChange}\n            />\n            <TableToolbarMenu\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}>\n              <TableToolbarAction primaryFocus onClick={() => alert('Alert 1')}>\n                Action 1\n              </TableToolbarAction>\n              <TableToolbarAction onClick={() => alert('Alert 2')}>\n                Action 2\n              </TableToolbarAction>\n              <TableToolbarAction onClick={() => alert('Alert 3')}>\n                Action 3\n              </TableToolbarAction>\n            </TableToolbarMenu>\n            <Button\n              tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n              onClick={()=> console.log('clicked')}\n              size=\"small\"\n              kind=\"primary\">\n              Add new\n            </Button>\n          </TableToolbarContent>\n        </TableToolbar>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableSelectAll {...getSelectionProps()} />\n          {headers.map(header => (\n            <TableHeader {...getHeaderProps({ header })}>\n              {header.header}\n            </TableHeader>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(row => (\n          <TableRow {...getRowProps({ row })}>\n            <TableSelectRow {...getSelectionProps({ row })} />\n            {row.cells.map(cell => (\n              <TableCell key={cell.id}>{cell.value}</TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>)}\n/>")),Object(o.b)("h2",null,"Sample data"),Object(o.b)("pre",null,Object(o.b)("code",d({parentName:"pre"},{className:"language-javascript"}),"const headerData = [\n  {\n    header: 'Name',\n    key: 'name',\n  },\n  {\n    header: 'Protocol',\n    key: 'protocol',\n  },\n  {\n    header: 'Port',\n    key: 'port',\n  },\n  {\n    header: 'Rule',\n    key: 'rule',\n  },\n  {\n    header: 'Attached Groups',\n    key: 'attached_groups',\n  },\n  {\n    header: 'Status',\n    key: 'status',\n  },\n];\n\nconst rowData = [\n  {\n    attached_groups: 'Kevins VM Groups',\n    id: 'a',\n    name: 'Load Balancer 3',\n    port: 3000,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Disabled',\n  },\n  {\n    attached_groups: 'Maureens VM Groups',\n    id: 'b',\n    name: 'Load Balancer 1',\n    port: 443,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Starting',\n  },\n  {\n    attached_groups: 'Andrews VM Groups',\n    id: 'c',\n    name: 'Load Balancer 2',\n    port: 80,\n    protocol: 'HTTP',\n    rule: 'DNS delegation',\n    status: 'Active',\n  },\n  {\n    attached_groups: 'Marcs VM Groups',\n    id: 'd',\n    name: 'Load Balancer 6',\n    port: 3000,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Disabled',\n  },\n  {\n    attached_groups: 'Mels VM Groups',\n    id: 'e',\n    name: 'Load Balancer 4',\n    port: 443,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Starting',\n  },\n  {\n    attached_groups: 'Ronjas VM Groups',\n    id: 'f',\n    name: 'Load Balancer 5',\n    port: 80,\n    protocol: 'HTTP',\n    rule: 'DNS delegation',\n    status: 'Active',\n  },\n];\n")))}j.isMDXComponent=!0}}]);